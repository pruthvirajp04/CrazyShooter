var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ALDEventDef;
(function (ALDEventDef) {
    ALDEventDef["None"] = "";
    ALDEventDef["ReportAdClickSuccess"] = "\u5E7F\u544A\u5BFC\u51FA\u6210\u529F";
    ALDEventDef["ReportAdClickFail"] = "\u5E7F\u544A\u5BFC\u51FA\u5931\u8D25";
    //todo:添加你自己的阿拉丁事件
    ALDEventDef["EnterLoading"] = "\u8FDB\u5165loading\u754C\u9762";
    ALDEventDef["EnterMainView"] = "\u8FDB\u5165\u4E3B\u754C\u9762";
    ALDEventDef["ClickGameStart"] = "\u70B9\u51FB\u8FDB\u5165\u6E38\u620F";
    ALDEventDef["EnterStartClickGetPrize"] = "\u6E38\u620F\u5F00\u59CB\u8FDB\u5165\u72C2\u70B9";
    ALDEventDef["EnterStartClickGetPrizeScene"] = "\u6E38\u620F\u5F00\u59CB\u8FDB\u5165\u72C2\u70B9\u573A\u666F\u503C";
    ALDEventDef["StayStartClickGetPrizeTime"] = "\u6E38\u620F\u5F00\u59CB\u72C2\u70B9\u505C\u7559\u65F6\u95F4";
    ALDEventDef["EnterBattleView"] = "\u8FDB\u5165\u6E38\u620F\u754C\u9762";
    ALDEventDef["EnterComplateClickGetPrize"] = "\u6E38\u620F\u7ED3\u675F\u8FDB\u5165\u72C2\u70B9";
    ALDEventDef["EnterComplateClickGetPrizeScene"] = "\u6E38\u620F\u7ED3\u675F\u8FDB\u5165\u72C2\u70B9\u573A\u666F\u503C";
    ALDEventDef["StayComplateClickGetPrizeTime"] = "\u6E38\u620F\u7ED3\u675F\u72C2\u70B9\u505C\u7559\u65F6\u95F4";
    ALDEventDef["EnterGameOverMoreGame"] = "\u6E38\u620F\u7ED3\u675F\u8FDB\u5165\u5BFC\u51FA\u754C\u9762";
    ALDEventDef["EnterGameComplateView"] = "\u8FDB\u5165\u6E38\u620F\u7ED3\u675F\u754C\u9762";
})(ALDEventDef = exports.ALDEventDef || (exports.ALDEventDef = {}));
//阿拉丁相关接口
var ALD = /** @class */ (function () {
    function ALD() {
    }
    ALD.aldSendOpenId = function (openid) {
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].aldSendOpenid(openid);
            console.log("ALD 上报 openid : ", openid);
        }
    };
    ALD.aldSendEvent = function (event, data) {
        var eventName = event;
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].aldSendEvent(eventName, data);
        }
    };
    ALD.aldSendReportAdClickSuccess = function (data) {
        var type = ALDEventDef.ReportAdClickSuccess + " " + data.title + ":" + String(data.appid);
        var ald = ALD;
        ald.aldSendEvent(type, {
            "导出成功": data.title + ":" + String(data.appid)
        });
    };
    ALD.aldSendReportAdClickFail = function (data) {
        var type = ALDEventDef.ReportAdClickFail + " " + data.title + ":" + String(data.appid);
        var ald = ALD;
        ald.aldSendEvent(type, {
            "导出失败": data.title + ":" + String(data.appid)
        });
    };
    ALD.aldSendOnlySingleReport = function (eventType, reportData) {
        var value = ALD._singleReportMap[eventType];
        if (null != value) {
            return;
        }
        ALD.aldSendEvent(eventType, reportData);
        ALD._singleReportMap[eventType] = true;
    };
    ALD._singleReportMap = {};
    return ALD;
}());
exports.default = ALD;
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig = /** @class */ (function () {
    function AppConfig() {
    }
    AppConfig.AppID = "wx7fa97aff081578ca";
    AppConfig.ResServer = "subRes"; //资源服务器地址
    AppConfig.LocalTestReServer = "subRes"; //本地测试资源服务器地址
    AppConfig.Versions = "0.0.1";
    return AppConfig;
}());
exports.default = AppConfig;
},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppSwitchConfig_1 = require("./Config/AppSwitchConfig");
var CachedWXBannerAd = /** @class */ (function () {
    function CachedWXBannerAd() {
    }
    CachedWXBannerAd.preloadBanner = function () {
        var wxWuDianBanners = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wxWuDianBanners;
        var bannerTodayBannerMax = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerTodayBannerMax;
        var preLoadBanners = new Array();
        for (var i = 0; i < wxWuDianBanners.length; ++i) {
            preLoadBanners.push(wxWuDianBanners[i]);
        }
        if (preLoadBanners.length > bannerTodayBannerMax) {
            var delNum = preLoadBanners.length - bannerTodayBannerMax;
            for (var i = 0; i < delNum; ++i) {
                preLoadBanners.splice(Math.floor(Math.random() * preLoadBanners.length), 1);
            }
        }
        console.log("开始预创建微信Bannaer", preLoadBanners);
        console.log("Bannaer 最大数限制 ：", bannerTodayBannerMax);
        var counter = 0;
        Laya.timer.loop(2000, CachedWXBannerAd._preLoopObj, function () {
            if (counter >= preLoadBanners.length) {
                Laya.timer.clearAll(CachedWXBannerAd._preLoopObj);
                return;
            }
            var bannerid = preLoadBanners[counter];
            var banner = CachedWXBannerAd._bannerCache[bannerid];
            if (null == banner) {
                banner = CachedWXBannerAd.create(bannerid);
                if (null != banner) {
                    CachedWXBannerAd._bannerCache[bannerid] = banner;
                    console.log("预创建微信Bannaer", bannerid, "完成");
                }
            }
            ++counter;
        });
    };
    CachedWXBannerAd.getBanner = function (bannerid) {
        if (null == bannerid || "" == bannerid)
            return null;
        var banner = CachedWXBannerAd._bannerCache[bannerid];
        if (null == banner) {
            banner = CachedWXBannerAd.create(bannerid);
            if (null != banner) {
                CachedWXBannerAd._bannerCache[bannerid] = banner;
            }
        }
        return banner;
    };
    CachedWXBannerAd.create = function (bannerid) {
        if (Laya.Browser.onMiniGame) {
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            var banner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: bannerid,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: (Laya.stage.height - 240) / Laya.stage.height * sh,
                    width: sw,
                }
            });
            if (banner) {
                banner.onLoad(function (res) {
                    console.log("CachedWXBanner 广告 加载完成", bannerid);
                    console.log(res);
                });
                banner.onError(function (err) {
                    console.log("CachedWXBanner 广告 加载失败", bannerid);
                    console.log(err);
                });
                banner.onResize(function (res) {
                    console.log(banner.style.realWidth, banner.style.realHeight);
                });
            }
            return banner;
        }
        else {
            return null;
        }
    };
    CachedWXBannerAd.show = function () {
        if (null != CachedWXBannerAd._curBanner) {
            CachedWXBannerAd._curBanner.hide();
            CachedWXBannerAd._curBanner = null;
        }
        var wuDianBanners = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wxWuDianBanners;
        var bannerid = wuDianBanners[Math.floor(Math.random() * wuDianBanners.length)];
        var banner = CachedWXBannerAd.getBanner(bannerid);
        if (banner) {
            CachedWXBannerAd._curBanner = banner;
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            CachedWXBannerAd._curBanner.style.top = (Laya.stage.height - 240) / Laya.stage.height * sh - 30;
            CachedWXBannerAd._curBanner.show();
            console.log("CachedWXBanner 广告显示 bannerid ： ", bannerid);
        }
        var time = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerFreshTimer;
        //Laya.timer.once(time * 1000,CachedWXBannerAd,CachedWXBannerAd.changeShow);
    };
    CachedWXBannerAd.hide = function () {
        Laya.timer.clearAll(CachedWXBannerAd);
        if (null != CachedWXBannerAd._curBanner) {
            CachedWXBannerAd._curBanner.hide();
            CachedWXBannerAd._curBanner = null;
        }
        console.log("CachedWXBanner 广告隐藏");
    };
    CachedWXBannerAd.changeShow = function () {
        if (null != CachedWXBannerAd._curBanner) {
            CachedWXBannerAd._curBanner.hide();
            CachedWXBannerAd._curBanner = null;
        }
        CachedWXBannerAd.show();
    };
    CachedWXBannerAd.clear = function () {
        Laya.timer.clearAll(CachedWXBannerAd);
        for (var key in CachedWXBannerAd._bannerCache) {
            var banner = CachedWXBannerAd._bannerCache[key];
            if (null != banner) {
                banner.destroy();
            }
            CachedWXBannerAd._bannerCache[key] = null;
        }
    };
    CachedWXBannerAd._bannerCache = {};
    CachedWXBannerAd._curBanner = null;
    CachedWXBannerAd._preLoopObj = {};
    return CachedWXBannerAd;
}());
exports.default = CachedWXBannerAd;
},{"./Config/AppSwitchConfig":4}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../AppConfig");
var AppSwitchData = /** @class */ (function () {
    function AppSwitchData() {
        //public scenenum:number=0;//场景序号
        //public peizhi:String="";//场景小模块
        //public shipin:number = 0;
        this.banner = 0;
        this.wudian = 0;
        this.cancelAd = 100; //所有自动弹出跳转的概率，数字，0-100，包含0，
        this.wudianTime_01 = 2000;
        this.wudianTime_01PreLoad = 500;
        this.shipintubiao = 1;
        this.btnDelayTime = 1.5;
        this.indexAdClick = 0; //随机广告
        this.wudianAvailableTime = {
            "0": 0, "1": 0, "2": 0, "3": 0,
            "4": 0, "5": 0, "6": 0, "7": 0,
            "8": 0, "9": 0, "10": 0, "11": 0,
            "12": 0, "13": 0, "14": 0, "15": 0,
            "16": 0, "17": 0, "18": 0, "19": 0,
            "20": 0, "21": 0, "22": 0, "23": 0
        };
        this.mailiang = 1;
        this.mailianglist = new Array();
        this.wxWuDianBanners = new Array();
        this.btnMoveTimer = 1;
        this.bannerMoveTimer = 0.5;
        this.bannerFreshTimer = 200;
        this.bannerCreateFailNum = 3;
        this.bannerTodayBannerMax = 10;
        this.adSwitch = 1;
        this.wudianSceneList = new Array();
    }
    Object.defineProperty(AppSwitchData.prototype, "wudianTimeAvaliable", {
        /**
         * 得到当前时间开关是否打开
         *
         * @readonly
         * @type {boolean}
         * @memberof AppSwitchData
         */
        get: function () {
            return this.wudianAvailableTime[new Date().getHours()] == 1;
        },
        enumerable: true,
        configurable: true
    });
    return AppSwitchData;
}());
exports.AppSwitchData = AppSwitchData;
var AppSwitchConfig = /** @class */ (function () {
    function AppSwitchConfig() {
        this._data = new Array();
    }
    AppSwitchConfig.getInstance = function () {
        if (null == AppSwitchConfig._instance) {
            AppSwitchConfig._instance = AppSwitchConfig.load();
        }
        return AppSwitchConfig._instance;
    };
    AppSwitchConfig.load = function () {
        var config = new AppSwitchConfig();
        var json = Laya.loader.getRes(AppConfig_1.default.ResServer + "/json/appswitch.json");
        if (json) {
            for (var i = 0; i < json.length; ++i) {
                var row = json[i];
                var rowData = new AppSwitchData();
                //rowData.shipin = Number(row["shipin"]);
                console.log("视频字段", Number(row["shipin"]));
                rowData.btnDelayTime = Number(row["btnDelayTime"]);
                rowData.banner = Number(row["banner"]);
                rowData.wudian = Number(row["wudian"]);
                rowData.cancelAd = Number(row["cancelAd"]);
                rowData.indexAdClick = Number(row["indexAdClick"]);
                rowData.wudianTime_01 = Number(row["wudianTime_01"]); //????这个字段是啥
                rowData.wudianTime_01PreLoad = Number(row["wudianTime_01PreLoad"]); //????这个字段是啥
                rowData.shipintubiao = Number(row["shipintubiao"]); //????这个字段是啥
                rowData.wudianAvailableTime = Object(row["wudianTime"]);
                rowData.mailiang = Number(row["mailiang"]);
                var mailianglist = row["mailianglist"];
                if (null != mailianglist) {
                    for (var j = 0; j < mailianglist.length; ++j) {
                        var flag = Number(mailianglist[j]);
                        rowData.mailianglist.push(flag);
                    }
                }
                var wxwudianbanners = row["wxwudianbanners"];
                if (null != wxwudianbanners) {
                    for (var j = 0; j < wxwudianbanners.length; ++j) {
                        var bannerid = String(wxwudianbanners[j]);
                        rowData.wxWuDianBanners.push(bannerid);
                    }
                }
                rowData.btnMoveTimer = Number(row["btnMoveTimer"]);
                rowData.bannerMoveTimer = Number(row["bannerMoveTimer"]);
                rowData.bannerCreateFailNum = Number(row["createFailNum"]);
                rowData.bannerFreshTimer = Number(row["bannerFreshTimer"]);
                rowData.bannerTodayBannerMax = Number(row["todayBannerMax"]);
                rowData.adSwitch = Number(row["adSwitch"]);
                var wudianSceneList = row["wudianSceneList"];
                if (null != wudianSceneList) {
                    for (var j = 0; j < wudianSceneList.length; ++j) {
                        var wudianSceneValue = Number(wudianSceneList[j]);
                        rowData.wudianSceneList.push(wudianSceneValue);
                    }
                }
                config._data.push(rowData);
            }
            return config;
        }
        else {
            config._data.push(new AppSwitchData());
            return config;
        }
    };
    AppSwitchConfig.prototype.getAppSwitchData = function () {
        return this._data[0];
    };
    return AppSwitchConfig;
}());
exports.default = AppSwitchConfig;
},{"../AppConfig":2}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventDef;
(function (EventDef) {
    EventDef[EventDef["None"] = 0] = "None";
    EventDef[EventDef["App_CloseFirstLoadingView"] = 500] = "App_CloseFirstLoadingView";
    EventDef[EventDef["AD_OnShareAdFail"] = 501] = "AD_OnShareAdFail";
    //当界面打开
    EventDef[EventDef["Game_OnViewOpen"] = 600] = "Game_OnViewOpen";
    //当界面关闭
    EventDef[EventDef["Game_OnViewClose"] = 601] = "Game_OnViewClose";
    //当玩家金币变动
    EventDef[EventDef["Game_OnUserMoneyChange"] = 701] = "Game_OnUserMoneyChange";
    //当玩家钻石变动
    EventDef[EventDef["Game_OnUserCrystalChange"] = 702] = "Game_OnUserCrystalChange";
    //当关卡开始
    EventDef[EventDef["Game_OnLevelStart"] = 1000] = "Game_OnLevelStart";
    //当关卡结束
    EventDef[EventDef["Game_OnLevelComplate"] = 1001] = "Game_OnLevelComplate";
    //误点预加载完毕
    EventDef[EventDef["AD_WudianBanner_LoadComplete"] = 2217] = "AD_WudianBanner_LoadComplete";
    //显示误点Banner
    EventDef[EventDef["AD_WudianBanner_Show"] = 2218] = "AD_WudianBanner_Show";
    //影藏误点Banner
    EventDef[EventDef["AD_WudianBanner_Hide"] = 2219] = "AD_WudianBanner_Hide";
    //预加载Banner
    EventDef[EventDef["AD_WudianBanner_PreLoad"] = 2220] = "AD_WudianBanner_PreLoad";
    //Tips:在这条添加定义你自己需要的事件，从10000号开始。记得分段分类管理不同类型事件。如果事件有传递参数 "必须" 在事件后面用注释写明事件参数结构。
    EventDef[EventDef["Bannle"] = 10008] = "Bannle";
    EventDef[EventDef["isstart"] = 10009] = "isstart";
    EventDef[EventDef["ejector_rightmove"] = 10010] = "ejector_rightmove";
    EventDef[EventDef["ejector_rotatemove"] = 100101] = "ejector_rotatemove";
    EventDef[EventDef["Explode"] = 100102] = "Explode";
    EventDef[EventDef["GameOver"] = 100103] = "GameOver";
    EventDef[EventDef["DieOne"] = 100104] = "DieOne";
    EventDef[EventDef["ejector_Sectormove"] = 100105] = "ejector_Sectormove";
    EventDef[EventDef["ejector_DaoSectormove"] = 100106] = "ejector_DaoSectormove";
    EventDef[EventDef["NextGuan"] = 100107] = "NextGuan";
    EventDef[EventDef["SHOWjiesuo"] = 100109] = "SHOWjiesuo";
    EventDef[EventDef["ShouClore"] = 100110] = "ShouClore";
    EventDef[EventDef["ReturnBanner"] = 1000111] = "ReturnBanner";
    EventDef[EventDef["onMoUp"] = 1000112] = "onMoUp";
    EventDef[EventDef["onMoDown"] = 1000113] = "onMoDown";
})(EventDef = exports.EventDef || (exports.EventDef = {}));
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventDispatcher = laya.events.EventDispatcher;
var EventMgr = /** @class */ (function (_super) {
    __extends(EventMgr, _super);
    function EventMgr() {
        return _super.call(this) || this;
    }
    ;
    //广播事件
    EventMgr.prototype.dispatch = function (InName, agv) {
        EventMgr.eventDispatcher.event(InName, agv);
    };
    //注册事件
    EventMgr.prototype.regEvemt = function (InName, caller, listener, arg) {
        EventMgr.eventDispatcher.on(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //注册单次事件
    EventMgr.prototype.regOnceEvent = function (InName, caller, listener, arg) {
        EventMgr.eventDispatcher.once(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //移除事件注册
    EventMgr.prototype.removeEvent = function (InName, caller, listener, arg) {
        EventMgr.eventDispatcher.off(InName, caller, listener);
    };
    EventMgr.eventDispatcher = new EventDispatcher();
    EventMgr.instance = new EventMgr();
    return EventMgr;
}(EventDispatcher));
exports.default = EventMgr;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameMgr_1 = require("./Mgr/GameMgr");
var TwinkleSprite_1 = require("./View/TwinkleSprite");
var WuDianBannerAdView_1 = require("./ShareAd/View/WuDianBannerAdView");
var ClickGetPrize_1 = require("./View/ClickGetPrize/ClickGetPrize");
var ButtonAnim_1 = require("./View/ButtonAnim");
var CrazyMoreGame_1 = require("./View/CrazyMoreGame/CrazyMoreGame");
var LoopAdBox_1 = require("./ShareAd/View/LoopAdBox");
var HorizontalLoopAdView_1 = require("./ShareAd/View/HorizontalLoopAdView");
var CrazyLoopAdView_1 = require("./ShareAd/View/CrazyLoopAdView");
var GameOverView_1 = require("./View/GameOverView/GameOverView");
var BannerAdView_1 = require("./ShareAd/View/BannerAdView");
var GameView_1 = require("./View/GameView/GameView");
var PopAdView_1 = require("./ShareAd/View/PopAdView");
var ScalingAni_1 = require("./MyScripts/ScalingAni");
var LoopAdView_1 = require("./ShareAd/View/LoopAdView");
var GetInterfaceView_1 = require("./View/GetInterface/GetInterfaceView");
var SingleAdView_1 = require("./ShareAd/View/SingleAdView");
var SingleAniADView_1 = require("./ShareAd/View/SingleAniADView");
var UniversalBottomZone_1 = require("./View/Common/UniversalBottomZone");
var MyHomePage_1 = require("./View/MyHomePage/MyHomePage");
var SkinView_1 = require("./View/SkinView/SkinView");
var JieSuoShow_1 = require("./MyScripts/JieSuoShow");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("Mgr/GameMgr.ts", GameMgr_1.default);
        reg("View/TwinkleSprite.ts", TwinkleSprite_1.default);
        reg("ShareAd/View/WuDianBannerAdView.ts", WuDianBannerAdView_1.default);
        reg("View/ClickGetPrize/ClickGetPrize.ts", ClickGetPrize_1.default);
        reg("View/ButtonAnim.ts", ButtonAnim_1.default);
        reg("View/CrazyMoreGame/CrazyMoreGame.ts", CrazyMoreGame_1.default);
        reg("ShareAd/View/LoopAdBox.ts", LoopAdBox_1.default);
        reg("ShareAd/View/HorizontalLoopAdView.ts", HorizontalLoopAdView_1.default);
        reg("ShareAd/View/CrazyLoopAdView.ts", CrazyLoopAdView_1.default);
        reg("View/GameOverView/GameOverView.ts", GameOverView_1.default);
        reg("ShareAd/View/BannerAdView.ts", BannerAdView_1.default);
        reg("View/GameView/GameView.ts", GameView_1.default);
        reg("ShareAd/View/PopAdView.ts", PopAdView_1.default);
        reg("MyScripts/ScalingAni.ts", ScalingAni_1.default);
        reg("ShareAd/View/LoopAdView.ts", LoopAdView_1.default);
        reg("View/GetInterface/GetInterfaceView.ts", GetInterfaceView_1.default);
        reg("ShareAd/View/SingleAdView.ts", SingleAdView_1.default);
        reg("ShareAd/View/SingleAniADView.ts", SingleAniADView_1.default);
        reg("View/Common/UniversalBottomZone.ts", UniversalBottomZone_1.default);
        reg("View/MyHomePage/MyHomePage.ts", MyHomePage_1.default);
        reg("View/SkinView/SkinView.ts", SkinView_1.default);
        reg("MyScripts/JieSuoShow.ts", JieSuoShow_1.default);
        reg("View/LoadingView/LoadingView.ts", LoadingView_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "GameMain.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./Mgr/GameMgr":10,"./MyScripts/JieSuoShow":21,"./MyScripts/ScalingAni":24,"./ShareAd/View/BannerAdView":31,"./ShareAd/View/CrazyLoopAdView":32,"./ShareAd/View/HorizontalLoopAdView":33,"./ShareAd/View/LoopAdBox":34,"./ShareAd/View/LoopAdView":35,"./ShareAd/View/PopAdView":36,"./ShareAd/View/SingleAdView":37,"./ShareAd/View/SingleAniADView":38,"./ShareAd/View/WuDianBannerAdView":39,"./View/ButtonAnim":42,"./View/ClickGetPrize/ClickGetPrize":43,"./View/Common/UniversalBottomZone":44,"./View/CrazyMoreGame/CrazyMoreGame":45,"./View/GameOverView/GameOverView":46,"./View/GameView/GameView":47,"./View/GetInterface/GetInterfaceView":48,"./View/LoadingView/LoadingView":49,"./View/MyHomePage/MyHomePage":50,"./View/SkinView/SkinView":51,"./View/TwinkleSprite":52}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppConfig_1 = require("../AppConfig");
var WXAPI_1 = require("../WXAPI");
var User_1 = require("../User/User");
/**
 * 用于买量上报,以及停留时间上报的的类，本质上是对wx和买量接口做一个集成化的封装方便使用
 *
 * @export
 * @class MaiLiang
 */
var MaiLiang = /** @class */ (function () {
    function MaiLiang() {
    }
    /**
     * 发送数据的类
     *
     * @protected
     * @static
     * @param {requestData} req
     * @memberof MaiLiang
     */
    MaiLiang.request = function (req) {
        if (req.url.indexOf("https://") > -1 ||
            req.url.indexOf("http://") > -1) {
            req.url = req.url;
        }
        else {
            req.url = MaiLiang.mainUrl + req.url;
        }
        var completeFunc = function (res) {
        };
        var errorFunc = function (res) {
        };
    };
    /**
     * 获得买量系统唯一标识ID,此ID的作用是用来上报游戏时间
     *
     * @param {Function} res
     * @memberof MaiLiang
     */
    MaiLiang.GetMaiLiangOpenId = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            var option = WXAPI_1.default.getLaunchOptionsSync();
            if (option != null) {
                var key = option.query["key"];
                if (key != null && key != "" && User_1.default.openId != "") {
                    MaiLiang.key = key;
                    var req = new HttpUnit_1.requestData();
                    req.url = MaiLiang.uclick;
                    req.onSuccess = onSuccess;
                    req.onFail = onFail;
                    req.data.appid = AppConfig_1.default.AppID;
                    req.data.openid = "";
                    var time = new Date().getTime() / 1000;
                    req.data.posttime = time;
                    req.data.auth = 0;
                    req.data.key = key;
                    req.data.wxopenid = User_1.default.openId;
                    req.meth = "POST";
                    console.log("发送买量数据接口");
                    MaiLiang.request(req);
                }
            }
            else {
                console.log("上报买量数据失败");
                onFail(null);
            }
        }
        else {
            console.log("不在微信模式下调用，默认上报买量数据失败");
            onFail(null);
        }
    };
    /**
     * 上报买量接口停留时间
     *
        appid －主体小程序appid
        openid －买量系统唯一标识（不可空）
        posttime － 请求时间刻度（精确到秒）
        time － 停留时长（精确到秒）
     * @static
     * @memberof MaiLiang
     */
    MaiLiang.ReportStayTime = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            if (MaiLiang.MaiLiangOpenId != "") {
                var req = new HttpUnit_1.requestData();
                req.url = MaiLiang.stay;
                req.onSuccess = onSuccess;
                req.onFail = onFail;
                req.data.appid = AppConfig_1.default.AppID;
                req.data.openid = MaiLiang.MaiLiangOpenId;
                var time = new Date().getTime() / 1000;
                req.data.posttime = time;
                var staytime = MaiLiang.time != 0 ? time - MaiLiang.time : 0;
                req.data.time = staytime;
                req.meth = "POST";
                console.log("发送停留时间至买量接口");
                MaiLiang.request(req);
            }
        }
        else {
            console.log("不在微信模式下调用，默认发送停留时间至买量接口失败");
            onFail(null);
        }
    };
    MaiLiang.mainUrl = "https://swtj.mrkzx.cn";
    MaiLiang.uclick = "/v1.1/api/Activity/uclick.html";
    MaiLiang.stay = "/v1.1/api/Activity/stay.html";
    MaiLiang.key = ""; //推广路径中同名参数，需要调用方法WXAPi.getLaunchOptionsSync()，从返回的参数中获得。
    MaiLiang.MaiLiangOpenId = ""; //买量系统唯一标识,执行GetMaiLiangOpenId()方法成功后自动获得。
    MaiLiang.time = 0; //买量系统唯一标识后，记录当前时间（精确到秒）。
    return MaiLiang;
}());
exports.default = MaiLiang;
},{"../AppConfig":2,"../Net/HttpUnit":26,"../User/User":40,"../WXAPI":54}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var User_1 = require("./User/User");
var layaMaxUI_1 = require("./ui/layaMaxUI");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var HttpUnit_1 = require("./Net/HttpUnit");
var WXAPI_1 = require("./WXAPI");
var AppConfig_1 = require("./AppConfig");
var EventMgr_1 = require("./Event/EventMgr");
var EventDef_1 = require("./Event/EventDef");
var OPPOAPI_1 = require("./OPPOAPI");
var Main = /** @class */ (function () {
    function Main() {
        this._loadingUI = null;
        this._loadingView = null;
        //预加载列表
        this._preLoadRes = new Array();
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        if (!Laya.Browser.onMiniGame && !Laya.Browser.onQGMiniGame) //如果不是小游戏，资源服务器设置为本地测试地址
         {
            AppConfig_1.default.ResServer = AppConfig_1.default.LocalTestReServer;
        }
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        Laya.loader.maxLoader = 50;
        this.initLoadingView();
        //加载重要配置，这些配置必须在游戏启动前加载完成
        var firstConfigs = [
            { url: AppConfig_1.default.ResServer + "/json/appswitch.json", type: Laya.Loader.JSON }
        ];
        var self = this;
        Laya.loader.load(firstConfigs, Laya.Handler.create(this, function () {
            self.loadRes(); //加载资源
        }));
        EventMgr_1.default.instance.regOnceEvent(EventDef_1.EventDef.App_CloseFirstLoadingView, this, this.closeloadingUI);
    };
    Main.prototype.initLoadingView = function () {
        this._loadingUI = new layaMaxUI_1.ui.View.LoadingUI();
        Laya.stage.addChild(this._loadingUI);
        this._loadingUI.width = Laya.stage.width;
        this._loadingUI.height = Laya.stage.height;
        this._loadingView = this._loadingUI.getComponent(LoadingView_1.default);
        //this._loadingView.setProcess(0);
    };
    Main.prototype.postResToOpenDataContext = function (onComplate) {
        if (Laya.Browser.onMiniGame) {
            console.log("开始透传资源数据到开放域");
            Laya.loader.load([
                "openRes/Rank.atlas",
            ], Laya.Handler.create(null, function () {
                Laya.MiniAdpter.sendAtlasToOpenDataContext("openRes/Rank.atlas");
                console.log("透传资源数据到开放域  完毕！！！");
                if (onComplate) {
                    onComplate();
                }
            }));
        }
        else {
            if (onComplate) {
                onComplate();
            }
        }
    };
    Main.prototype.preLoad = function () {
        //这里添加你需要预加载的资源
        //this._preLoadRes.push({ url: AppConfig.ResServer + "/json/example.json", type: Laya.Loader.JSON });
    };
    Main.prototype.loadRes = function () {
        var _this = this;
        this.preLoad();
        var resource = this._preLoadRes;
        var self = this;
            if (resource.length > 0) {
                Laya.loader.load(resource, Laya.Handler.create(this, function () {
                    self.onLoadResComplate();
                }), Laya.Handler.create(this, function (res) {
                    //self._loadingView.setProcess(res);
                }));
            }
            else {
                self.onLoadResComplate();
            }
    };
    Main.prototype.onLoadResComplate = function () {
        var self = this;
        //this._loadingView.setProcess(1);
            User_1.default.testInitUser(); //测试
            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(this, function () {
            }));
    };
    Main.prototype.closeloadingUI = function () {
        if (this._loadingUI && !this._loadingUI.destroyed) {
            this._loadingUI.destroy();
        }
    };
    return Main;
}());
//激活启动类
new Main();
},{"./AppConfig":2,"./Event/EventDef":5,"./Event/EventMgr":6,"./GameConfig":7,"./Net/HttpUnit":26,"./OPPOAPI":29,"./User/User":40,"./View/LoadingView/LoadingView":49,"./WXAPI":54,"./ui/layaMaxUI":55}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("./ViewMgr");
var User_1 = require("../User/User");
var HttpUnit_1 = require("../Net/HttpUnit");
var MaiLiang_1 = require("../MaiLiangAPI/MaiLiang");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var WXAPI_1 = require("../WXAPI");
var MyGameManger_1 = require("../MyScripts/MyGameManger");
var CachedWXBannerAd_1 = require("../CachedWXBannerAd");
var WudianMgr_1 = require("./WudianMgr");
//游戏管理器，游戏代码的入口
var Game_lmxg_Mgr = /** @class */ (function (_super) {
    __extends(Game_lmxg_Mgr, _super);
    function Game_lmxg_Mgr() {
        var _this = _super.call(this) || this;
        Game_lmxg_Mgr._instance = _this;
        return _this;
    }
    Game_lmxg_Mgr.getInstance = function () { return Game_lmxg_Mgr._instance; };
    Game_lmxg_Mgr.prototype.onAwake = function () {
        MaiLiang_1.default.GetMaiLiangOpenId(function (res) {
            console.log("GameUI 买量数据上报成功");
            Laya.Browser.window["wx"].onShow(function () {
                MaiLiang_1.default.GetMaiLiangOpenId(null, null);
            });
            Laya.Browser.window["wx"].onHide(function () {
                MaiLiang_1.default.ReportStayTime(null, null);
            });
        }, function (res) {
            console.log("GameUI 买量数据上报失败");
        });
        WXAPI_1.default.SetShareMenu("", "", function () {
        }, function () {
        }, function () {
        });
        WudianMgr_1.default.UpdateIpBlockState();
        CachedWXBannerAd_1.default.preloadBanner();
    };
    Game_lmxg_Mgr.prototype.onStart = function () {
        this.preCreateGame();
    };
    Game_lmxg_Mgr.prototype.preCreateGame = function () {
        var _this = this;
        MyGameManger_1.default.GetInstance().onAwake();
        //todo：这里添加初始化主场景的代码。EventMgr.instance.dispatch(EventDef.App_CloseFirstLoadingView); 添加到你的关卡加载完成的回调中，关闭加载界面
        MyGameManger_1.default.GetInstance().OnlodeScene(function () {
            ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.MyHomePage);
            Game_lmxg_Mgr.winfalag = false;
            Laya.timer.once(400, _this, function () {
                EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.App_CloseFirstLoadingView);
            });
            //EventMgr.instance.dispatch(EventDef.App_CloseFirstLoadingView);
        });
    };
    //游戏存档,仅当作示例，实际存档根据实际项目各自实现
    Game_lmxg_Mgr.prototype.saveGameData = function () {
        HttpUnit_1.default.saveGameData(User_1.default.getSaveData(), function (res) {
            if (res.code == 1) {
                console.log("存档成功");
            }
            else {
                console.log("存档失败");
            }
        }, function (res) {
            console.log("存档失败");
        });
    };
    Game_lmxg_Mgr.LoadMAT = function () {
        Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/lvse.lmat", Laya.Handler.create(null, function (mat) {
            Game_lmxg_Mgr.lvsemat = mat;
        }));
        Game_lmxg_Mgr.mengmianmat = new Array();
        Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/hongse.lmat", Laya.Handler.create(null, function (mat) {
            Game_lmxg_Mgr.mengmianmat.push(mat);
        }));
        Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/fhj.lmat", Laya.Handler.create(null, function (mat) {
            Game_lmxg_Mgr.mengmianmat.push(mat);
        }));
        Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/ssz.lmat", Laya.Handler.create(null, function (mat) {
            Game_lmxg_Mgr.mengmianmat.push(mat);
        }));
        Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/stxx.lmat", Laya.Handler.create(null, function (mat) {
            Game_lmxg_Mgr.mengmianmat.push(mat);
        }));
        Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/tkf.lmat", Laya.Handler.create(null, function (mat) {
            Game_lmxg_Mgr.mengmianmat.push(mat);
        }));
        Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/xzgl.lmat", Laya.Handler.create(null, function (mat) {
            Game_lmxg_Mgr.mengmianmat.push(mat);
        }));
        Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/xzz.lmat", Laya.Handler.create(null, function (mat) {
            Game_lmxg_Mgr.mengmianmat.push(mat);
        }));
        Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/mna.lmat", Laya.Handler.create(null, function (mat) {
            Game_lmxg_Mgr.mengmianmat.push(mat);
        }));
        Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/mgxg.lmat", Laya.Handler.create(null, function (mat) {
            Game_lmxg_Mgr.mengmianmat.push(mat);
        }));
        Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/gtx.lmat", Laya.Handler.create(null, function (mat) {
            Game_lmxg_Mgr.mengmianmat.push(mat);
        }));
        Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/kmt.lmat", Laya.Handler.create(null, function (mat) {
            Game_lmxg_Mgr.mengmianmat.push(mat);
        }));
    };
    Game_lmxg_Mgr.OnLoadmat = function (pf) {
        var ms;
        switch (pf) {
            case 0:
                Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/hongse.lmat", Laya.Handler.create(null, function (mat) {
                    ms = mat;
                }));
                break;
            case 1:
                Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/fhj.lmat", Laya.Handler.create(null, function (mat) {
                    ms = mat;
                }));
                break;
            case 2:
                Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/ssz.lmat", Laya.Handler.create(null, function (mat) {
                    ms = mat;
                }));
                break;
            case 3:
                Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/stxx.lmat", Laya.Handler.create(null, function (mat) {
                    ms = mat;
                }));
                break;
            case 4:
                Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/tkf.lmat", Laya.Handler.create(null, function (mat) {
                    ms = mat;
                }));
                break;
            case 5:
                Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/xzgl.lmat", Laya.Handler.create(null, function (mat) {
                    ms = mat;
                }));
                break;
            case 6:
                Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/xzz.lmat", Laya.Handler.create(null, function (mat) {
                    ms = mat;
                }));
                break;
            case 7:
                Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/mna.lmat", Laya.Handler.create(null, function (mat) {
                    ms = mat;
                }));
                break;
            case 8:
                Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/mgxg.lmat", Laya.Handler.create(null, function (mat) {
                    ms = mat;
                }));
                break;
            case 9:
                Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/gtx.lmat", Laya.Handler.create(null, function (mat) {
                    ms = mat;
                }));
                break;
            case 10:
                Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/kmt.lmat", Laya.Handler.create(null, function (mat) {
                    ms = mat;
                }));
                break;
            default:
                Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/Animtor/Materials/hongse.lmat", Laya.Handler.create(null, function (mat) {
                    ms = mat;
                }));
                break;
        }
        return ms;
    };
    Game_lmxg_Mgr._instance = null;
    Game_lmxg_Mgr.hhanum = 0;
    Game_lmxg_Mgr._guanqiaarr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]; //14关的关卡顺序数组
    Game_lmxg_Mgr._guanqiapz = ""; //关卡配置信息
    return Game_lmxg_Mgr;
}(Laya.Script));
exports.default = Game_lmxg_Mgr;
},{"../CachedWXBannerAd":3,"../Event/EventDef":5,"../Event/EventMgr":6,"../MaiLiangAPI/MaiLiang":8,"../MyScripts/MyGameManger":22,"../Net/HttpUnit":26,"../User/User":40,"../WXAPI":54,"./ViewMgr":13,"./WudianMgr":14}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Sound_lmxg_Mgr = /** @class */ (function () {
    function Sound_lmxg_Mgr() {
        this._enabled = true;
    }
    Object.defineProperty(Sound_lmxg_Mgr.prototype, "Enabled", {
        get: function () {
            return this._enabled;
        },
        set: function (e) {
            if (!e) {
                this.stopBGM();
            }
            this._enabled = e;
        },
        enumerable: true,
        configurable: true
    });
    Sound_lmxg_Mgr.prototype.getSoundUrl = function (name) {
        var url = Sound_lmxg_Mgr.soundResPath + name + ".mp3";
        return url;
    };
    Sound_lmxg_Mgr.prototype.play_lmxg_Sound = function (name) {
        if (!this._enabled)
            return;
        var url = this.getSoundUrl(name);
        if (Laya.Browser.onMiniGame) {
            var sound = laya.utils.Pool.getItem(name);
            if (sound == null) {
                sound = wx.createInnerAudioContext();
                sound.src = Sound_lmxg_Mgr.soundResPath + name + ".mp3";
                sound.onEnded(function () {
                    laya.utils.Pool.recover(name, sound);
                    sound.offEnded();
                });
            }
            sound.play();
        }
        else {
            Laya.SoundManager.playSound(url, 1);
        }
    };
    Sound_lmxg_Mgr.prototype.play_lmxg_BGM = function (name) {
        if (!this._enabled)
            return;
        var url = this.getSoundUrl(name);
        if (Laya.Browser.onMiniGame) {
            if (!this.bgm) {
                this.bgm = wx.createInnerAudioContext();
            }
            this.bgm.stop();
            this.bgm.src = url;
            this.bgm.loop = true;
            this.bgm.play();
        }
        else {
            // Laya.SoundManager.playMusic(url, 0);
        }
    };
    Sound_lmxg_Mgr.prototype.stopBGM = function () {
        if (Laya.Browser.onMiniGame) {
            if (this.bgm) {
                this.bgm.stop();
            }
        }
        else {
            Laya.SoundManager.stopMusic();
        }
    };
    Sound_lmxg_Mgr.soundResPath = "subRes/sound/";
    Sound_lmxg_Mgr.instance = new Sound_lmxg_Mgr();
    return Sound_lmxg_Mgr;
}());
exports.default = Sound_lmxg_Mgr;
},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Vibrate_lmxg_Mgr = /** @class */ (function () {
    function Vibrate_lmxg_Mgr() {
    }
    //短震动
    Vibrate_lmxg_Mgr.vibrate_lmxg_Short = function () {
        if (!Vibrate_lmxg_Mgr.isEnable)
            return;
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].vibrateShort();
        }
        else if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].vibrateShort();
        }
    };
    //长震动
    Vibrate_lmxg_Mgr.ibrate_lmxg_Long = function () {
        if (!Vibrate_lmxg_Mgr.isEnable)
            return;
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].vibrateLong();
        }
        else if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].vibrateLong();
        }
    };
    //定时震动,毫秒
    Vibrate_lmxg_Mgr.vibrate = function (time) {
        if (!Vibrate_lmxg_Mgr.isEnable)
            return;
        if (Laya.Browser.onMiniGame) {
            var count_1 = time / 15; //微信小游戏中震动的时间是15毫秒的整数倍时间，本质是对短震动的封装
            var index_1 = 0;
            var obj_1 = { count: count_1, index: index_1 };
            Laya.timer.loop(16, obj_1, function () {
                Vibrate_lmxg_Mgr.vibrate_lmxg_Short();
                index_1++;
                if (index_1 > count_1) {
                    Laya.timer.clearAll(obj_1);
                }
            });
        }
        else if (Laya.Browser.onQGMiniGame) {
            var count_2 = time / 20; //OPPO小游戏中震动的时间是20毫秒的整数倍时间，本质是对短震动的封装
            var index_2 = 0;
            var obj_2 = { count: count_2, index: index_2 };
            Laya.timer.loop(21, obj_2, function () {
                Vibrate_lmxg_Mgr.vibrate_lmxg_Short();
                index_2++;
                if (index_2 > count_2) {
                    Laya.timer.clearAll(obj_2);
                }
            });
        }
    };
    Vibrate_lmxg_Mgr.isEnable = true;
    return Vibrate_lmxg_Mgr;
}());
exports.default = Vibrate_lmxg_Mgr;
},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var View_lmxg_Def;
(function (View_lmxg_Def) {
    View_lmxg_Def["None"] = "";
    View_lmxg_Def["TipsView"] = "subRes/View/TipsView.json";
    View_lmxg_Def["ClickGetPrize"] = "subRes/View/ClickGetPrize.json";
    View_lmxg_Def["ClickGetHezi"] = "subRes/View/ClickGetHezi.json";
    View_lmxg_Def["MyHomePage"] = "subRes/View/MyHomePage.json";
    View_lmxg_Def["GameView"] = "subRes/View/GameView.json";
    View_lmxg_Def["GameOverView"] = "subRes/View/GameOver.json";
    View_lmxg_Def["Skin"] = "subRes/View/Skin.json";
    View_lmxg_Def["CrazyMoreGame"] = "subRes/View/CrazyMoreGame.json";
    View_lmxg_Def["GetInterface"] = "subRes/View/GetInterface.json";
    View_lmxg_Def["NewLoadingView"] = "subRes/View/NewLoadingView.json";
    //todo:添加你的界面
})(View_lmxg_Def = exports.View_lmxg_Def || (exports.View_lmxg_Def = {}));
//界面管理器
var View_lmxg_Mgr = /** @class */ (function () {
    function View_lmxg_Mgr() {
        this._views = {};
    }
    View_lmxg_Mgr.prototype.openView = function (viewType, data, oncomplate) {
        if (this._views[viewType]) {
            var view = this._views[viewType];
            var coms = view._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        viewBase.openView(data);
                        break;
                    }
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
            return;
        }
        var viewUrl = String(viewType);
        var self = this;
        Laya.Scene.load(viewUrl, Laya.Handler.create(this, function (owner) {
            Laya.stage.addChild(owner);
            var view = owner;
            self._views[viewType] = view;
            var coms = owner._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        element._viewDef = viewType;
                        viewBase.openView(data);
                        break;
                    }
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
        }));
    };
    View_lmxg_Mgr.prototype.close_lmxg_View = function (viewType) {
        var view = this._views[viewType];
        if (view) {
            var owner = view;
            var coms = owner._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.onClose();
                        break;
                    }
                }
            }
            view.removeSelf();
            view.destroy();
            this._views[viewType] = null;
        }
    };
    View_lmxg_Mgr.prototype.ShowView = function (viewType) {
        var view = this._views[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.show();
                        break;
                    }
                }
            }
        }
    };
    View_lmxg_Mgr.prototype.hideView = function (viewType) {
        var view = this._views[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.hide();
                        break;
                    }
                }
            }
        }
    };
    View_lmxg_Mgr.prototype.getView = function (viewType) {
        return this._views[viewType];
    };
    View_lmxg_Mgr.prototype.showTips = function (msg) {
        this.openView(View_lmxg_Def.TipsView, msg);
    };
    View_lmxg_Mgr.instance = new View_lmxg_Mgr();
    return View_lmxg_Mgr;
}());
exports.default = View_lmxg_Mgr;
},{}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var WXAPI_1 = require("../WXAPI");
var Wudian_lmxg_Mgr = /** @class */ (function () {
    function Wudian_lmxg_Mgr() {
    }
    Wudian_lmxg_Mgr.IpBlockFlag = function () {
        return Wudian_lmxg_Mgr._ipBlockFlag;
    };
    /**
     * 此方法调用很慢，所以要在游戏初始化的时候调用一次此方法
     *
     * @static
     * @memberof WudianMgr
     */
    Wudian_lmxg_Mgr.UpdateIpBlockState = function () {
        HttpUnit_1.default.GetIpBlock(function (res) {
            console.log("调用IpBlock接口成功,结果为:", res);
            Wudian_lmxg_Mgr._ipBlockFlag = res.code;
        }, null);
    };
    /**
     * IP是否被屏蔽
     *
     * @static
     * @returns {boolean}
     * @memberof WudianMgr
     */
    Wudian_lmxg_Mgr.GetIpBlocked = function () {
        return Wudian_lmxg_Mgr._ipBlockFlag == 0;
    };
    /**
     * 得到用户进入的场景值
     *
     * @static
     * @returns {number}
     * @memberof WudianMgr
     */
    Wudian_lmxg_Mgr.GetEntryScene = function () {
        return WXAPI_1.default.getLaunchOptionsSync().scene == 1006;
    };
    /**
     * 误点开关是否打开，包括了总开关和分时开关
     *
     * @static
     * @returns {boolean}
     * @memberof WudianMgr
     */
    Wudian_lmxg_Mgr.IsSwitchOpen = function () {
        var mainSwitch = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudian == 1;
        var isOpenTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudianTimeAvaliable;
        console.log("误点Flag状态: ", "总开关:", mainSwitch, "打开时间", isOpenTime);
        return mainSwitch && isOpenTime;
    };
    Object.defineProperty(Wudian_lmxg_Mgr, "WudianFlag", {
        /**
         * 完全封装好的误点Flag
         *
         * @readonly
         * @static
         * @type {boolean}
         * @memberof WudianMgr
         */
        get: function () {
            var mainSwitch = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudian == 1;
            var launchScene = WXAPI_1.default.getLaunchOptionsSync().scene;
            var noEnterBySearch = true;
            var wudianSceneList = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudianSceneList;
            for (var i = 0; i < wudianSceneList.length; ++i) {
                var wudianSceneValue = wudianSceneList[i];
                if (launchScene == wudianSceneValue) {
                    noEnterBySearch = false;
                }
            }
            var isOpenTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudianTimeAvaliable;
            var ipnotBlock = Wudian_lmxg_Mgr._ipBlockFlag == 0;
            if (Wudian_lmxg_Mgr._ipBlockFlag == -1) {
                ipnotBlock = true;
            }
            /* 测试功能，等删 */
            //ipnotBlock = true;
            //noEnterBySearch = true;
            console.log("误点Flag状态: ", "总开关:", mainSwitch, "场景进入", noEnterBySearch, "IP未被屏蔽", ipnotBlock, "打开时间", isOpenTime);
            return mainSwitch && noEnterBySearch && ipnotBlock && isOpenTime;
            //return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Wudian_lmxg_Mgr, "NoTimeWudianFlag", {
        /**
         * 没有涉及到定时开关的wudianFlag,自行整合按照时间开关的效果
         *
         * @static
         * @returns {boolean}
         * @memberof WudianMgr
         */
        get: function () {
            var mainSwitch = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudian == 1;
            var launchScene = WXAPI_1.default.getLaunchOptionsSync().scene;
            var noEnterBySearch = true;
            var wudianSceneList = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudianSceneList;
            for (var i = 0; i < wudianSceneList.length; ++i) {
                var wudianSceneValue = wudianSceneList[i];
                if (launchScene == wudianSceneValue) {
                    noEnterBySearch = false;
                }
            }
            var ipnotBlock = this._ipBlockFlag == 0;
            /* 测试功能，等删 */
            // ipnotBlock = true;
            console.log("误点Flag状态: ", "总开关:", mainSwitch, "场景进入", noEnterBySearch, "IP未被屏蔽");
            return mainSwitch && noEnterBySearch && ipnotBlock;
        },
        enumerable: true,
        configurable: true
    });
    Wudian_lmxg_Mgr._ipBlockFlag = -1;
    return Wudian_lmxg_Mgr;
}());
exports.default = Wudian_lmxg_Mgr;
},{"../Config/AppSwitchConfig":4,"../Net/HttpUnit":26,"../WXAPI":54}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BulletPool_1 = require("./BulletPool");
var GMManager_1 = require("./GMManager");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var RandowmMove_1 = require("./RandowmMove");
var MyGameManger_1 = require("./MyGameManger");
var JZNPC_1 = require("./JZNPC");
var CrazyEffect_1 = require("./CrazyEffect");
var SoundMgr_1 = require("../Mgr/SoundMgr");
var BulletMove = /** @class */ (function (_super) {
    __extends(BulletMove, _super);
    function BulletMove() {
        var _this = _super.call(this) || this;
        _this._direction = null; //方向
        return _this;
    }
    BulletMove.prototype.onEnable = function () {
        this._speed = 11;
        this.isshow = true;
        this._bullet = this.owner;
        this.Xpoing = this._bullet.transform.position.x;
        var _ri = this._bullet.getComponent(Laya.Rigidbody3D);
        _ri.ccdMotionThreshold = 0; //表示禁止穿过
        this.isdes = false;
        //材质加载    
        var chalCllor = this._bullet.getChildAt(0).getChildByName("zidan (1)"); //Laya.ShurikenParticleMaterial;
        Laya.BaseMaterial.load("subRes/LayaScene_CJ2/Conventional/Assets/efft/Materials/New Material " + MyGameManger_1.default.bulletmat + ".lmat", Laya.Handler.create(null, function (mat) {
            chalCllor.particleRenderer.material = mat;
        }));
    };
    BulletMove.prototype.onDisable = function () {
        this._direction = null;
    };
    BulletMove.prototype.onUpdate = function () {
        if (this._direction != null) {
            if (this.Xpoing - this._bullet.transform.position.x > 14 && this.isshow == true) {
                this.isshow = false;
                BulletPool_1.default.Hide(this._bullet);
            }
            else {
                var newpoint = new Laya.Vector3(this._direction.x * 0.6, 0, this._direction.z * 0.6);
                this._bullet.transform.position = new Laya.Vector3(this._bullet.transform.position.x + this._direction.x * 0.2 * Laya.timer.delta / 10, this._bullet.transform.position.y, this._bullet.transform.position.z + this._direction.z * 0.2 * Laya.timer.delta / 10);
                this.HuaXian();
            }
        }
    };
    /**
     * 改变子弹颜色
     */
    BulletMove.prototype.ShowCllor = function () {
        var chalCllor = this._bullet.getChildAt(0).getChildByName("zidan1");
        //chalCllor.getComponent(Laya.Shader3D).
    };
    /**
     *
     * @param drec 第一个参数是方向，第二个是位置
     * @param pos
     */
    BulletMove.prototype.StartMove = function (drec) {
        this._direction = drec;
    };
    /**
 * 发送射线检测
 */
    BulletMove.prototype.HuaXian = function () {
        if (this.isdes) {
            BulletPool_1.default.Hide(this._bullet);
            return;
        }
        var HitResult = new Array();
        var _scene = MyGameManger_1.default.GetInstance()._zhuscene;
        var dire = new Laya.Vector3(0, 0, 0);
        var qidian = new Laya.Vector3(this._bullet.transform.position.x, this._bullet.transform.position.y, this._bullet.transform.position.z);
        dire = this._direction;
        var _ray = new Laya.Ray(qidian, dire);
        _scene.physicsSimulation.rayCastAll(_ray, HitResult, 1.2);
        if (HitResult.length > 0) {
            var isbos = false;
            for (var index = 0; index < HitResult.length; index++) {
                var pduixiang = HitResult[index].collider.owner;
                if (pduixiang.parent.name == "laihui") {
                    if (pduixiang.getComponent(GMManager_1.default).isdie == false) {
                        pduixiang.getComponent(GMManager_1.default).OnDie(this._direction);
                        this.isdes = true;
                        SoundMgr_1.default.instance.play_lmxg_Sound("mingzhong");
                        return;
                    }
                }
                if (pduixiang.parent.name == "gmsjpool") {
                    if (pduixiang.getComponent(RandowmMove_1.default).isdie == false) {
                        pduixiang.getComponent(RandowmMove_1.default).OnDie(this._direction);
                        this.isdes = true;
                        SoundMgr_1.default.instance.play_lmxg_Sound("mingzhong");
                        return;
                    }
                }
                if (pduixiang.parent.name == "gmjzpool") {
                    if (pduixiang.getComponent(JZNPC_1.default).isdie == false) {
                        pduixiang.getComponent(JZNPC_1.default).OnDie(this._direction);
                        this.isdes = true;
                        SoundMgr_1.default.instance.play_lmxg_Sound("mingzhong");
                        return;
                    }
                }
                if (pduixiang.parent.name == "youtong") {
                    MyGameManger_1.default.GetInstance().Explode(pduixiang.name);
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Explode, pduixiang.name);
                    CrazyEffect_1.default.getInstance().GroldYouT(pduixiang);
                    pduixiang.destroy(true);
                    this.isdes = true;
                }
            }
        }
    };
    return BulletMove;
}(Laya.Script3D));
exports.default = BulletMove;
},{"../Event/EventDef":5,"../Event/EventMgr":6,"../Mgr/SoundMgr":11,"./BulletPool":16,"./CrazyEffect":17,"./GMManager":19,"./JZNPC":20,"./MyGameManger":22,"./RandowmMove":23}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BulletMove_1 = require("./BulletMove");
var BulletPool = /** @class */ (function (_super) {
    __extends(BulletPool, _super);
    function BulletPool() {
        return _super.call(this) || this;
    }
    BulletPool.prototype.onEnable = function () {
        BulletPool._isbulletpool = this.owner;
        BulletPool._oneBullet = this.owner.parent.getChildByName("bullet");
    };
    BulletPool.prototype.onDisable = function () {
    };
    /**
 * 产生一颗子弹
 */
    BulletPool.InstanceZiDan = function () {
        if (!BulletPool.bulletlist) {
            BulletPool.bulletlist = new Array();
        }
        var bullet = new Laya.Sprite3D;
        var len = BulletPool.bulletlist.length;
        if (len > 0) {
            for (var index = 0; index < len; index++) {
                bullet = BulletPool.bulletlist[index];
                if (bullet.active == false) {
                    bullet.active = true;
                    return bullet;
                }
            }
        }
        bullet = Laya.Sprite3D.instantiate(BulletPool._oneBullet, BulletPool._isbulletpool);
        bullet.addComponent(BulletMove_1.default);
        BulletPool.bulletlist.push();
        return bullet;
    };
    /**
     * 立马回收
     */
    BulletPool.Hide = function (hidedan) {
        hidedan.active = false;
    };
    BulletPool._isbulletpool = new Laya.Sprite3D;
    BulletPool._oneBullet = new Laya.Sprite3D;
    return BulletPool;
}(Laya.Script));
exports.default = BulletPool;
},{"./BulletMove":15}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundMgr_1 = require("../Mgr/SoundMgr");
var CrazyEffect = /** @class */ (function (_super) {
    __extends(CrazyEffect, _super);
    function CrazyEffect() {
        return _super.call(this) || this;
    }
    CrazyEffect.getInstance = function () {
        if (CrazyEffect._instance != null) {
            return CrazyEffect._instance;
        }
        else {
            return CrazyEffect._instance = new CrazyEffect();
        }
    };
    //static _tuowei:Laya.Sprite3D;
    CrazyEffect.prototype.onAwake = function () {
        CrazyEffect._baozhaparnt = this.owner.getChildByName("baozha");
        CrazyEffect._baozha = new Array();
        for (var index = 0; index < CrazyEffect._baozhaparnt.numChildren; index++) {
            CrazyEffect._baozha.push(CrazyEffect._baozhaparnt.getChildAt(index));
        }
        CrazyEffect._shejikou = this.owner.getChildByName("sheji");
        CrazyEffect._reddia1 = this.owner.getChildByName("siwang").getChildByName("siwang1");
        CrazyEffect._reddia2 = this.owner.getChildByName("siwang").getChildByName("siwang2");
        CrazyEffect._win1 = this.owner.getChildByName("shengli").getChildByName("sl");
        CrazyEffect._win2 = this.owner.getChildByName("shengli").getChildByName("sl1");
        CrazyEffect._greendia = new Array();
        CrazyEffect._greendia.push(this.owner.getChildByName("wtf1"));
        CrazyEffect._greendia.push(this.owner.getChildByName("wtf2"));
        CrazyEffect._greendia.push(this.owner.getChildByName("wtf3"));
        CrazyEffect._greendia.push(this.owner.getChildByName("wtf4"));
        //CrazyEffect._tuowei=this.owner.getChildByName("tuowei") as Laya.Sprite3D;
        //CrazyEffect._tuowei.getComponent(Laya.TrailRenderer);
    };
    CrazyEffect.prototype.onEnable = function () {
    };
    CrazyEffect.prototype.onDisable = function () {
    };
    CrazyEffect.prototype.Sheji = function (father) {
        var newp = father.getChildByName("kouzi").transform.position;
        var sheji = Laya.Sprite3D.instantiate(CrazyEffect._shejikou, father, false, newp);
        sheji.transform.localRotationEulerY += 180;
        Laya.timer.once(160, this, function () {
            sheji.removeSelf(); //移除对象
            sheji.destroy(true);
        });
    };
    CrazyEffect.prototype.Reddia = function (father) {
        var newp = new Laya.Vector3(father.transform.position.x, father.transform.position.y + 1, father.transform.position.z);
        var redd1 = Laya.Sprite3D.instantiate(CrazyEffect._reddia1, father.parent, false, newp);
        var redd2 = Laya.Sprite3D.instantiate(CrazyEffect._reddia2, father.parent, false, newp);
        //sheji.transform.localRotationEulerY+=180;
        Laya.timer.once(1300, this, function () {
            redd1.removeSelf(); //移除对象
            redd1.destroy(true);
            redd2.removeSelf(); //移除对象
            redd2.destroy(true);
        });
    };
    CrazyEffect.prototype.GreenDie = function (father) {
        var newp = new Laya.Vector3(father.transform.position.x, father.transform.position.y + 3, father.transform.position.z);
        var suiji = Math.floor(Math.random() * 4);
        if (suiji > 3)
            suiji = 0;
        var greendi = Laya.Sprite3D.instantiate(CrazyEffect._greendia[suiji], father.parent, false, newp);
        greendi.transform.scale = new Laya.Vector3(30, 30, 30);
        //sheji.transform.localRotationEulerY+=180;
        Laya.timer.once(3000, this, function () {
            greendi.removeSelf(); //移除对象
            greendi.destroy(true);
        });
    };
    CrazyEffect.prototype.GroldYouT = function (father) {
        SoundMgr_1.default.instance.play_lmxg_Sound("baozha");
        var newp = new Laya.Vector3(father.transform.position.x, father.transform.position.y, father.transform.position.z);
        var baozhaarr = new Array();
        for (var index = 0; index < CrazyEffect._baozha.length; index++) {
            var bao = Laya.Sprite3D.instantiate(CrazyEffect._baozha[index], father.parent, false, newp);
            baozhaarr.push(bao);
        }
        Laya.timer.once(1100, this, function () {
            for (var index = 0; index < baozhaarr.length; index++) {
                var isbao = baozhaarr[index];
                isbao.removeSelf(); //移除对象
                isbao.destroy(true);
            }
        });
    };
    CrazyEffect.prototype.Win = function () {
        var newp = new Laya.Vector3(0, 2, 6);
        var redd1 = Laya.Sprite3D.instantiate(CrazyEffect._win1, CrazyEffect._baozhaparnt.parent.parent, false, newp);
        var redd2 = Laya.Sprite3D.instantiate(CrazyEffect._win2, CrazyEffect._baozhaparnt.parent.parent, false, newp);
        //sheji.transform.localRotationEulerY+=180;
        Laya.timer.once(1500, this, function () {
            redd1.removeSelf(); //移除对象
            redd1.destroy(true);
            redd2.removeSelf(); //移除对象
            redd2.destroy(true);
        });
    };
    return CrazyEffect;
}(Laya.Script));
exports.default = CrazyEffect;
},{"../Mgr/SoundMgr":11}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyGameManger_1 = require("./MyGameManger");
var BulletPool_1 = require("./BulletPool");
var GMManager_1 = require("./GMManager");
var RandowmMove_1 = require("./RandowmMove");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var CrazyEffect_1 = require("./CrazyEffect");
var JZNPC_1 = require("./JZNPC");
var SoundMgr_1 = require("../Mgr/SoundMgr");
var BulletMove_1 = require("./BulletMove");
var EjectorManager = /** @class */ (function (_super) {
    __extends(EjectorManager, _super);
    //private _line: Laya.PixelLineSprite3D;
    function EjectorManager() {
        return _super.call(this) || this;
    }
    EjectorManager.prototype.onAwake = function () {
        this._ejector = this.owner;
        this.Cylinder001 = this.owner.getChildByName("cylinder");
        this.roatespeed = 180;
        this.shootbool = false;
        this.shoot_timer = 0.17;
        this.shoot_value = 0;
        this.isad = 1;
        this._moveState = 0;
        this._mouseIn = false;
        this._daojiaodu = 30;
    };
    EjectorManager.prototype.onEnable = function () {
        //渲染开启
        //  this._line = new Laya.PixelLineSprite3D(100, "line");
        // for (let i = 0; i < 100; i++) {
        //     let start = new Laya.Vector3();
        //     let end = new Laya.Vector3();
        //     this._line.addLine(start, end, Laya.Color.BLUE, Laya.Color.BLUE);
        // }
        // MyGameManger.GetInstance()._zhuscene.addChild(this._line);
        this.Cylinder001.transform.localScaleY = 0;
        //Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
        //Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onMouseUp);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.ejector_rightmove, this, this.RightMOve);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.ejector_rotatemove, this, this.RoTate);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.ejector_Sectormove, this, this.SectorStart);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.ejector_DaoSectormove, this, this.DaoSectorStart);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.onMoDown, this, this.onMoDown);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.onMoUp, this, this.onMoUp);
    };
    EjectorManager.prototype.onDisable = function () {
        //Laya.stage.off(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
        //Laya.stage.off(Laya.Event.MOUSE_UP, this, this.onMouseUp);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.ejector_rightmove, this, this.RightMOve);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.ejector_rotatemove, this, this.RoTate);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.ejector_Sectormove, this, this.SectorStart);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.ejector_DaoSectormove, this, this.DaoSectorStart);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.onMoDown, this, this.onMoDown);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.onMoUp, this, this.onMoUp);
    };
    EjectorManager.prototype.onUpdate = function () {
        this.shoot_value -= Laya.timer.delta / 1000;
        if (this.shootbool == true && this.shoot_value < 0) {
            this.OnShootBullet();
            this.shoot_value = this.shoot_timer;
        }
        if (MyGameManger_1.default.state == MyGameManger_1.StateEnum.Game) {
            this.HuaXian();
            if (this._moveState != 0) {
                switch (this._moveState) {
                    case 1:
                        this.RMove();
                        break;
                    case 2:
                        this._ejector.transform.localRotationEuler = new Laya.Vector3(0, this.roatespeed -= 0.75 * Laya.timer.delta / 20, 0); //旋转
                        break;
                    case 3:
                        this.SectorMove();
                        break;
                    default:
                        this.DaoSectorMove();
                        break;
                }
            }
        }
    };
    /**
    * 发送射线检测
    */
    EjectorManager.prototype.HuaXian = function () {
        var HitResult = new Laya.HitResult();
        var _scene = MyGameManger_1.default.GetInstance()._zhuscene;
        var dire = new Laya.Vector3(0, 0, 0);
        this._ejector.transform.getForward(dire);
        var qidian = this._ejector.transform.position;
        var _ray = new Laya.Ray(qidian, dire);
        var zhong = 0;
        _scene.physicsSimulation.rayCast(_ray, HitResult, 20);
        if (HitResult.collider != null) {
            var ha = HitResult.collider.owner;
            if (ha != null) {
                zhong = Laya.Vector3.distance(ha.transform.position, this._ejector.transform.position) - 0.06;
                if (ha.parent.name == "laihui") {
                    if (ha.getComponent(GMManager_1.default).isdie == true) {
                        zhong = 20;
                    }
                }
                else if (ha.parent.name == "gmsjpool") {
                    if (ha.getComponent(RandowmMove_1.default).isdie == true) {
                        zhong = 20;
                    }
                }
                else if (ha.parent.name == "gmjzpool") {
                    if (ha.getComponent(JZNPC_1.default).isdie == true) {
                        zhong = 20;
                    }
                }
            }
            else {
                zhong = 20;
            }
        }
        else {
            zhong = 20;
        }
        if (this._mouseIn == true) {
            zhong = 0;
        }
        this.Cylinder001.transform.localScaleY = zhong;
    };
    EjectorManager.prototype.onMoDown = function () {
        this._mouseIn = true;
        this.shootbool = true;
    };
    EjectorManager.prototype.onMoUp = function () {
        this._mouseIn = false;
        this.shootbool = false;
    };
    EjectorManager.prototype.OnShootBullet = function () {
        if (MyGameManger_1.default.state == MyGameManger_1.StateEnum.Game) {
            var dire = new Laya.Vector3(0, 0, 0);
            this._ejector.transform.getForward(dire);
            CrazyEffect_1.default.getInstance().Sheji(this._ejector);
            SoundMgr_1.default.instance.play_lmxg_Sound("fashe");
            var bulet = BulletPool_1.default.InstanceZiDan();
            bulet.transform.position = this._ejector.transform.position;
            bulet.getComponent(BulletMove_1.default).StartMove(dire.clone());
        }
    };
    /**
     * 开启左右移动
     */
    EjectorManager.prototype.RightMOve = function () {
        this._moveState = 1;
    };
    EjectorManager.prototype.RMove = function () {
        if (this._ejector.transform.position.x < -2.6) {
            this.isad = 1;
        }
        if (this._ejector.transform.position.x > 2.6) {
            this.isad = -1;
        }
        this._ejector.transform.position = new Laya.Vector3(this._ejector.transform.position.x += 0.0011 * Laya.timer.delta * this.isad, this._ejector.transform.position.y, this._ejector.transform.position.z);
    };
    /**
     * 开启旋转
     */
    EjectorManager.prototype.RoTate = function () {
        this._moveState = 2;
    };
    /**
     * 开启扇形移动
     */
    EjectorManager.prototype.SectorStart = function () {
        this._moveState = 3;
    };
    EjectorManager.prototype.SectorMove = function () {
        if (this._ejector.transform.localRotationEulerY < (180 - this._daojiaodu)) {
            this.isad = 1;
        }
        if (this._ejector.transform.localRotationEulerY > (180 + this._daojiaodu)) {
            this.isad = -1;
        }
        if (MyGameManger_1.default._guangqia == 7 || MyGameManger_1.default._guangqia == 20) {
            this._ejector.transform.localRotationEuler = new Laya.Vector3(0, this.roatespeed += 0.8 * this.isad * Laya.timer.delta / 45, 0); //旋转
        }
        else {
            this._ejector.transform.localRotationEuler = new Laya.Vector3(0, this.roatespeed += 0.4 * this.isad * Laya.timer.delta / 45, 0); //旋转
        }
    };
    /**
     * 开启倒扇形移动
     */
    EjectorManager.prototype.DaoSectorStart = function () {
        this._moveState = 4;
        this.roatespeed = 0;
    };
    EjectorManager.prototype.DaoSectorMove = function () {
        if (this._ejector.transform.localRotationEulerY < -this._daojiaodu) {
            this.isad = 1;
        }
        if (this._ejector.transform.localRotationEulerY > this._daojiaodu) {
            this.isad = -1;
        }
        this._ejector.transform.localRotationEuler = new Laya.Vector3(0, this.roatespeed += 0.3 * this.isad * Laya.timer.delta / 45, 0); //旋转
    };
    return EjectorManager;
}(Laya.Script3D));
exports.default = EjectorManager;
},{"../Event/EventDef":5,"../Event/EventMgr":6,"../Mgr/SoundMgr":11,"./BulletMove":15,"./BulletPool":16,"./CrazyEffect":17,"./GMManager":19,"./JZNPC":20,"./MyGameManger":22,"./RandowmMove":23}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var Utilit_1 = require("../Utilit");
var MyGameManger_1 = require("./MyGameManger");
var CrazyEffect_1 = require("./CrazyEffect");
var VibrateMgr_1 = require("../Mgr/VibrateMgr");
var User_1 = require("../User/User");
var GameMgr_1 = require("../Mgr/GameMgr");
/**
 * 左右移动的人
 */
var GMManager = /** @class */ (function (_super) {
    __extends(GMManager, _super);
    function GMManager() {
        var _this = _super.call(this) || this;
        _this.dieDirection = null; //死亡后退后方向
        return _this;
    }
    GMManager.prototype.onAwake = function () {
        this.mi = 0;
        this.move_speed = 1;
        this.isad = this.move_speed;
        this._speed = 0.001;
    };
    GMManager.prototype.onEnable = function () {
        this._gm = this.owner;
        this.roleAni = this.owner.getComponent(Laya.Animator);
        //this._ri= this.owner.getComponent(Laya.Rigidbody3D) as Laya.Rigidbody3D;
        // this._ri.ccdMotionThreshold=0;//表示禁止穿过
        //this._ri.friction=0.1;
        this.isdie = false;
        //this._ri.gravity=new Laya.Vector3(0,0,0);//开启重力
        this.islinermove = false;
        this.chupointZ = this._gm.transform.position.z;
        this._peizhi = MyGameManger_1.default._guangqia;
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.isstart, this, this.Isstart);
        // Laya.Tween.to(this._gm.transform, { localRotationEulerX: 0}, 1200, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
        // }));
        //this._gm.transform.localRotationEuler = new Laya.Vector3(0, 180,0 );//人物会达到的角度
        //console.log("可以产生碰撞的组",this._ri.constructor);
        //this._ri.constructor(false);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Explode, this, this.Explode);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.ShouClore, this, this.OnShouClore);
    };
    /**
     * 显示颜色
     */
    GMManager.prototype.ShouClore = function (num_mi) {
        if (this._gm) {
            var bgbox = this._gm.getChildByName("MESH_Char_001");
            var mesh = bgbox.skinnedMeshRenderer.material;
            //console.log("绿色：",num_mi);
            if (num_mi == 0) {
                var n = 0;
                n = User_1.default.getSkinNum();
                var isb = MyGameManger_1.default.isShowpf(n);
                if (isb != true) {
                    n = 0;
                }
                bgbox.skinnedMeshRenderer.material = GameMgr_1.default.OnLoadmat(n); //mengmianmat[n];
                // mesh.albedoColorG = 0.22745;
                // mesh.albedoColorR = 1;
                // mesh.albedoColorB = 0.35294;
                // mesh.albedoColorA = 1;
                this.mi = 0;
            }
            else {
                bgbox.skinnedMeshRenderer.material = GameMgr_1.default.lvsemat;
                // mesh.albedoColorG = 0.8314;
                // mesh.albedoColorR = 0.341;
                // mesh.albedoColorB = 0.2745;
                this.mi = 1;
                this._speed = 0.0012;
            }
        }
    };
    GMManager.prototype.onDisable = function () {
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.isstart, this, this.Isstart);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Explode, this, this.Explode);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.ShouClore, this, this.OnShouClore);
    };
    GMManager.prototype.OnShouClore = function () {
        if (this.mi == 0) {
            var n = 0;
            n = User_1.default.getSkinNum();
            var isb = MyGameManger_1.default.isShowpf(n);
            if (isb != true) {
                n = 0;
            }
            var bgbox = this._gm.getChildByName("MESH_Char_001");
            bgbox.skinnedMeshRenderer.material = GameMgr_1.default.OnLoadmat(n); //mengmianmat[n];
        }
    };
    GMManager.prototype.onUpdate = function () {
        //console.log("1111:"+this.islinermove+"22222:"+this.isdie+"333333:"+MyGameManger.state);
        if (this.islinermove == true && this.isdie != true && MyGameManger_1.default.state == MyGameManger_1.StateEnum.Game) {
            if (this._peizhi == 7) {
                this.OnUpMove();
            }
            else {
                this.OnLinerMove();
            }
        }
        if (this.dieDirection != null) {
            this._gm.transform.position = new Laya.Vector3(this._gm.transform.position.x + this.dieDirection.x * Laya.timer.delta * 0.002, 0, this._gm.transform.position.z + this.dieDirection.z * Laya.timer.delta * 0.002);
        }
    };
    GMManager.prototype.Isstart = function () {
        //console.log("开始开启移动");
        this.islinermove = true;
        this.roleAni.play("pao");
    };
    /**
     * 死亡退后
     */
    GMManager.prototype.OnDie = function (val) {
        if (this.isdie == true)
            return;
        this.IsOver();
        var num = Math.floor(Math.random() * 4);
        //this._ri.isKinematic=true;
        if (num > 3 || num < 1) {
            num = 3;
        }
        this.roleAni.play("die" + num);
        this.isdie = true;
        this.islinermove = false;
        this.dieDirection = val;
        var boxcllider = this._gm.getComponent(Laya.PhysicsComponent);
        boxcllider.enabled = false;
        this._gm.transform.lookAt(val, new Laya.Vector3(0, 0, 0), false);
        this._gm.transform.localRotationEulerY += 180;
        var bgbox = this._gm.getChildByName("MESH_Char_001");
        var mesh = bgbox.skinnedMeshRenderer.material;
        var self = this;
        Laya.Tween.to(mesh, { albedoColorB: 0.4, albedoColorG: 0.4, albedoColorR: 0.4 }, 1000, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
            Laya.Tween.to(self._gm.transform, { localPositionY: -0.1 }, 6000, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
                self._gm.destroy(true);
            }));
        }));
        Laya.timer.once(200, this, function () {
            this.dieDirection = null;
        });
    };
    /**
     * 围绕某点移动
     */
    // OnRotateMove(){
    // }
    /**
     * 左右直线移动
     */
    GMManager.prototype.OnLinerMove = function () {
        if (this._gm.transform.position.x < -2) {
            this.isad = this.move_speed;
        }
        if (this._gm.transform.position.x > 2) {
            this.isad = -this.move_speed;
        }
        this._gm.transform.position = new Laya.Vector3(this._gm.transform.position.x += this._speed * Laya.timer.delta * this.isad, this._gm.transform.position.y, this._gm.transform.position.z);
        var r = Utilit_1.default.getRotationByDirOn3DSpace(new Laya.Point(this.isad, 0));
        //人物平缓转向
        var next = Utilit_1.default.lerpEulerAngle(this._gm.transform.localRotationEuler.y, r, Laya.timer.delta * 0.025 * 360);
        this._gm.transform.localRotationEuler = new Laya.Vector3(0, next, 0); //人物会达到的角度
    };
    /**
     * 上下直线移动
     */
    GMManager.prototype.OnUpMove = function () {
        if (this.chupointZ - this._gm.transform.position.z > 5.6) {
            this.isad = -this.move_speed;
        }
        if (this.chupointZ - this._gm.transform.position.z < -0.1) {
            this.isad = this.move_speed;
        }
        this._speed = 0.0012;
        this._gm.transform.position = new Laya.Vector3(this._gm.transform.position.x, this._gm.transform.position.y, this._gm.transform.position.z -= this._speed * Laya.timer.delta * this.isad);
        var r = Utilit_1.default.getRotationByDirOn3DSpace(new Laya.Point(0, this.isad));
        //人物平缓转向
        var next = Utilit_1.default.lerpEulerAngle(this._gm.transform.localRotationEuler.y, r + 180, Laya.timer.delta * 0.025 * 360);
        this._gm.transform.localRotationEuler = new Laya.Vector3(0, next, 0); //人物会达到的角度
    };
    /**
     * 油桶爆炸,事件调用
     */
    GMManager.prototype.Explode = function (Vstr) {
        for (var index = 0; index < MyGameManger_1.default.GetInstance()._youtong.length; index++) {
            if (Vstr == MyGameManger_1.default.GetInstance()._youtong[index].name) {
                var distancenum = Laya.Vector3.distance(MyGameManger_1.default.GetInstance()._youtong[index].transform.position, this._gm.transform.position);
                if (Math.abs(distancenum) < MyGameManger_1.default._explode) {
                    var vectorcenum = new Laya.Vector3(0, 0, 0);
                    Laya.Vector3.subtract(this._gm.transform.position, MyGameManger_1.default.GetInstance()._youtong[index].transform.position, vectorcenum);
                    this.OnDie(vectorcenum);
                }
            }
        }
    };
    /**
     * 判断是否结束游戏
     */
    GMManager.prototype.IsOver = function () {
        if (this.mi == 1) {
            VibrateMgr_1.default.ibrate_lmxg_Long();
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.GameOver, false);
            CrazyEffect_1.default.getInstance().GreenDie(this._gm);
        }
        else {
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.DieOne);
            CrazyEffect_1.default.getInstance().Reddia(this._gm);
        }
    };
    return GMManager;
}(Laya.Script));
exports.default = GMManager;
},{"../Event/EventDef":5,"../Event/EventMgr":6,"../Mgr/GameMgr":10,"../Mgr/VibrateMgr":12,"../User/User":40,"../Utilit":41,"./CrazyEffect":17,"./MyGameManger":22}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var Utilit_1 = require("../Utilit");
var MyGameManger_1 = require("../MyScripts/MyGameManger");
var CrazyEffect_1 = require("./CrazyEffect");
var VibrateMgr_1 = require("../Mgr/VibrateMgr");
var User_1 = require("../User/User");
var GameMgr_1 = require("../Mgr/GameMgr");
var JZNPC = /** @class */ (function (_super) {
    __extends(JZNPC, _super);
    function JZNPC() {
        var _this = _super.call(this) || this;
        _this.dieDirection = null; //死亡后退后方向
        _this.zhongjian = new Laya.Vector3(-0.05, 0.24, 6.21);
        return _this;
    }
    ; //
    JZNPC.prototype.onEnable = function () {
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Explode, this, this.Explode);
        this._gm = this.owner;
        //this._ri = this.owner.getComponent(Laya.Rigidbody3D) as Laya.Rigidbody3D;
        this.roleAni = this.owner.getComponent(Laya.Animator);
        this.isdie = false;
        //this._ri.gravity = new Laya.Vector3(0, 0, 0);//开启重力
        this.chupointZ = this._gm.transform.position.z;
        this.islinermove = false;
        this.islinerRmove = false;
        this.mi = 0;
        this.roleAni.play("daiming");
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.ShouClore, this, this.OnShouClore);
    };
    JZNPC.prototype.onDisable = function () {
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Explode, this, this.Explode);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.ShouClore, this, this.OnShouClore);
    };
    JZNPC.prototype.onUpdate = function () {
        if (this.dieDirection != null) {
            this._gm.transform.position = new Laya.Vector3(this._gm.transform.position.x + this.dieDirection.x * Laya.timer.delta * 0.003, 0, this._gm.transform.position.z + this.dieDirection.z * Laya.timer.delta * 0.003);
        }
        if (this.islinermove) {
            this.GMRotate();
        }
        if (this.islinerRmove) {
            this.GMRotateYoutong();
        }
    };
    JZNPC.prototype.Isstart = function () {
        // console.log("开启移动");
        this.islinermove = true;
        this.roleAni.play("pao");
    };
    JZNPC.prototype.GMRotate = function () {
        var drec = new Laya.Vector3(0, 0, 0);
        Laya.Vector3.subtract(MyGameManger_1.default.ejector.transform.position, this._gm.transform.position, drec);
        var r = Utilit_1.default.getRotationByDirOn3DSpace(new Laya.Point(drec.x, drec.z));
        //人物平缓转向
        var next = Utilit_1.default.lerpEulerAngle(this._gm.transform.localRotationEuler.y, r - 90, Laya.timer.delta * 0.025 * 360);
        this._gm.transform.localRotationEuler = new Laya.Vector3(0, next, 0); //人物会达到的角度
        var flowdrec = new Laya.Vector3(0, 0, 0);
        this._gm.transform.getForward(flowdrec);
        this._gm.transform.position = new Laya.Vector3(this._gm.transform.position.x - flowdrec.x * 0.001 * Laya.timer.delta, this._gm.transform.position.y, this._gm.transform.position.z - flowdrec.z * 0.001 * Laya.timer.delta);
    };
    JZNPC.prototype.Isstartyoutong = function () {
        // console.log("开启移动");
        this.islinerRmove = true;
        this.roleAni.play("pao");
    };
    JZNPC.prototype.GMRotateYoutong = function () {
        var drec = new Laya.Vector3(0, 0, 0);
        Laya.Vector3.subtract(this.zhongjian, this._gm.transform.position, drec);
        var r = Utilit_1.default.getRotationByDirOn3DSpace(new Laya.Point(drec.x, drec.z));
        //人物平缓转向
        var next = Utilit_1.default.lerpEulerAngle(this._gm.transform.localRotationEuler.y, r - 90, Laya.timer.delta * 0.025 * 360);
        this._gm.transform.localRotationEuler = new Laya.Vector3(0, next, 0); //人物会达到的角度
        var flowdrec = new Laya.Vector3(0, 0, 0);
        this._gm.transform.getForward(flowdrec);
        this._gm.transform.position = new Laya.Vector3(this._gm.transform.position.x - flowdrec.x * 0.001 * Laya.timer.delta, this._gm.transform.position.y, this._gm.transform.position.z - flowdrec.z * 0.001 * Laya.timer.delta);
    };
    /**
     * 死亡退后
     */
    JZNPC.prototype.OnDie = function (val) {
        if (this.isdie == true)
            return;
        this.islinermove = false;
        this.islinerRmove = false;
        this.IsOver();
        var boxcllider = this._gm.getComponent(Laya.PhysicsComponent);
        boxcllider.enabled = false;
        var num = Math.floor(Math.random() * 4);
        //this._ri.isKinematic=true;
        if (num > 3 || num < 1) {
            num = 3;
        }
        this.roleAni.play("die" + num);
        this.isdie = true;
        this.dieDirection = val;
        var bgbox = this._gm.getChildByName("MESH_Char_001");
        var mesh = bgbox.skinnedMeshRenderer.material;
        //this._gm.transform.lookAt(val,new Laya.Vector3(0,0,0),false);
        //this._gm.transform.localRotationEulerY+=180;
        var self = this;
        //Laya.Tween.to(mesh, { albedoColorB: 0.3, albedoColorG: 0.3, albedoColorR: 0.3 }, 1200, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
        // Laya.timer.once(1200,this,function(){
        //     //mesh.en
        //     //this.dieDirection = null;
        // Laya.Tween.to(self._gm.transform, { localPositionY:-0.1 }, 6000, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
        //     self._gm.destroy(true);
        // }));
        // });
        Laya.Tween.to(mesh, { albedoColorB: 0.3, albedoColorG: 0.3, albedoColorR: 0.3 }, 1200, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
            Laya.Tween.to(self._gm.transform, { localPositionY: -0.1 }, 6000, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
                self._gm.destroy(true);
            }));
        }));
        Laya.timer.once(250, this, function () {
            this.dieDirection = null;
        });
    };
    JZNPC.prototype.OnShouClore = function () {
        if (this.mi == 0) {
            var n = User_1.default.getSkinNum();
            var isb = MyGameManger_1.default.isShowpf(n);
            if (isb != true) {
                n = 0;
            }
            var bgbox = this._gm.getChildByName("MESH_Char_001");
            bgbox.skinnedMeshRenderer.material = GameMgr_1.default.OnLoadmat(n); //mengmianmat[n];
        }
    };
    /**
    * 显示颜色
    */
    JZNPC.prototype.ShouClore = function (num_mi) {
        if (this._gm) {
            var bgbox = this._gm.getChildByName("MESH_Char_001");
            //var mesh = bgbox.skinnedMeshRenderer.material as Laya.BlinnPhongMaterial;
            if (num_mi == 0) {
                var n = 0;
                n = User_1.default.getSkinNum();
                var va = User_1.default.getSkinArrNum().split(",");
                var isb = MyGameManger_1.default.isShowpf(n);
                if (isb != true) {
                    n = 0;
                }
                bgbox.skinnedMeshRenderer.material = GameMgr_1.default.OnLoadmat(n); //mengmianmat[n];
                // mesh.albedoColorG = 0.22745;
                // mesh.albedoColorR = 1;
                // mesh.albedoColorB = 0.35294;
                // mesh.albedoColorA = 1;
                this.mi = 0;
            }
            else {
                bgbox.skinnedMeshRenderer.material = GameMgr_1.default.lvsemat;
                // mesh.albedoColorG = 0.8314;
                // mesh.albedoColorR = 0.341;
                // mesh.albedoColorB = 0.2745;
                this.mi = 1;
            }
        }
    };
    /**
         * 油桶爆炸,事件调用
         */
    JZNPC.prototype.Explode = function (Vstr) {
        for (var index = 0; index < MyGameManger_1.default.GetInstance()._youtong.length; index++) {
            if (Vstr == MyGameManger_1.default.GetInstance()._youtong[index].name) {
                var distancenum = Laya.Vector3.distance(MyGameManger_1.default.GetInstance()._youtong[index].transform.position, this._gm.transform.position);
                if (Math.abs(distancenum) < MyGameManger_1.default._explode) {
                    var vectorcenum = new Laya.Vector3(0, 0, 0);
                    Laya.Vector3.subtract(this._gm.transform.position, MyGameManger_1.default.GetInstance()._youtong[index].transform.position, vectorcenum);
                    this.OnDie(vectorcenum);
                }
            }
        }
    };
    /**
 * 判断是否结束游戏
 */
    JZNPC.prototype.IsOver = function () {
        if (this.mi == 1) {
            VibrateMgr_1.default.ibrate_lmxg_Long();
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.GameOver, false);
            CrazyEffect_1.default.getInstance().GreenDie(this._gm);
        }
        else {
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.DieOne);
            CrazyEffect_1.default.getInstance().Reddia(this._gm);
        }
    };
    return JZNPC;
}(Laya.Script));
exports.default = JZNPC;
},{"../Event/EventDef":5,"../Event/EventMgr":6,"../Mgr/GameMgr":10,"../Mgr/VibrateMgr":12,"../MyScripts/MyGameManger":22,"../User/User":40,"../Utilit":41,"./CrazyEffect":17}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var User_1 = require("../User/User");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var JieSuoShow = /** @class */ (function (_super) {
    __extends(JieSuoShow, _super);
    function JieSuoShow() {
        return _super.call(this) || this;
    }
    JieSuoShow.prototype.onEnable = function () {
        this.shipin = this.owner.getChildByName("ship");
        this.jinbi = this.owner.getChildByName("jin");
        this.jinbitext = this.owner.getChildByName("jin").getChildByName("jinbi").getChildByName("jinbitex");
        this.shipinimg = this.shipin.getChildAt(0);
        var isxian = AppSwitchConfig_1.default.getInstance().getAppSwitchData().shipintubiao;
        console.log("视频图标：", isxian);
        if (isxian == 0) {
            this.shipinimg.visible = false;
        }
        this.Show();
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.SHOWjiesuo, this, this.Show);
    };
    JieSuoShow.prototype.onDisable = function () {
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.SHOWjiesuo, this, this.Show);
    };
    JieSuoShow.prototype.Show = function () {
        var _val = User_1.default.getSkinNum();
        if (_val < 4) {
            this.shipin.visible = true;
            this.jinbi.visible = false;
        }
        else {
            this.shipin.visible = false;
            this.jinbi.visible = true;
            var haojin = (_val - 3) * 100;
            //this.jinbitext.x = -100;
            //this.jinbitext.y = 600;
            this.jinbitext.text = haojin.toString();
        }
    };
    return JieSuoShow;
}(Laya.Script));
exports.default = JieSuoShow;
},{"../Config/AppSwitchConfig":4,"../Event/EventDef":5,"../Event/EventMgr":6,"../User/User":40}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EjectorManager_1 = require("./EjectorManager");
var BulletPool_1 = require("./BulletPool");
var GMManager_1 = require("./GMManager");
var RandowmMove_1 = require("./RandowmMove");
var JZNPC_1 = require("./JZNPC");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var CrazyEffect_1 = require("./CrazyEffect");
var User_1 = require("../User/User");
var GameMgr_1 = require("../Mgr/GameMgr");
var SoundMgr_1 = require("../Mgr/SoundMgr");
var MyGameManger = /** @class */ (function (_super) {
    __extends(MyGameManger, _super);
    function MyGameManger() {
        var _this = _super.call(this) || this;
        _this._zhuscene = null;
        _this._sceneStr = ["subRes/LayaScene_CJ2/Conventional/CJ2.ls",
        ];
        return _this;
    }
    MyGameManger.GetInstance = function () {
        if (MyGameManger._Instance != null)
            return MyGameManger._Instance;
        else {
            return MyGameManger._Instance = new MyGameManger();
        }
    };
    MyGameManger.prototype.onAwake = function () {
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.NextGuan, this, this.NextGuan);
    };
    MyGameManger.prototype.onEnable = function () {
    };
    MyGameManger.prototype.onDisable = function () {
        //EventMgr.instance.removeEvent(EventDef.Game_Over,this,this.GameOver);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.NextGuan, this, this.NextGuan);
    };
    /**
     * 加载场景
     */
    MyGameManger.prototype.OnlodeScene = function (louUI) {
        // for (let index = 0; index < 20; index++) {
        //     console.log(Math.random()*1000%4);
        // }
        MyGameManger._explode = 1.6;
        var point1 = new Laya.Vector3(0, 0.215, -0.7);
        var point2 = new Laya.Vector3(0, 0.215, 3.49);
        var point3 = new Laya.Vector3(0, 0.215, 10);
        this._ejectorpoint = [point1, point2, point3];
        MyGameManger.mannum = 0;
        var va = 0;
        if (this._zhuscene != null) {
            //Laya.timer.clearAll(this);
            this._zhuscene.destroy(true);
            Laya.Resource.destroyUnusedResources(); //优化清除缓存;
            va = 1;
        }
        MyGameManger.state = StateEnum.weikaiju;
        if (va == 0) {
            var self = this;
            Laya.Scene3D.load(this._sceneStr[0], Laya.Handler.create(this, function (_scene) {
                self._zhuscene = _scene;
                Laya.stage.addChild(_scene);
                self.LoderBGChangJi();
                self.LoadScrpit(_scene);
                if (louUI) {
                    louUI();
                }
            }));
        }
        else {
            var self = this;
            Laya.timer.once(1000, this, function () {
                Laya.Scene3D.load(this._sceneStr[0], Laya.Handler.create(this, function (_scene) {
                    self._zhuscene = _scene;
                    Laya.stage.addChild(_scene);
                    self.LoderBGChangJi();
                    self.LoadScrpit(_scene);
                    if (louUI) {
                        louUI();
                    }
                }));
            });
        }
    };
    /**
     * 关卡随机配置
     */
    MyGameManger.prototype.ArrGuanQia = function () {
        GameMgr_1.default.hhanum = 0;
        var arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];
        var len = arr.length;
        for (var i = 0, len_1 = arr.length; i < len_1; i++) {
            var ind = Math.floor(Math.random() * len_1);
            var tempValue = arr[i];
            arr[i] = arr[ind];
            arr[ind] = tempValue;
        }
        GameMgr_1.default._guanqiaarr = arr;
    };
    /**
     * 加载各个脚本
     */
    MyGameManger.prototype.LoadScrpit = function (scen) {
        //var sell=this;
        GameMgr_1.default.LoadMAT();
        this._guangpeizhi = "A";
        MyGameManger._guangqia = User_1.default.getLeveNum();
        switch (MyGameManger._guangqia) {
            case 1:
                MyGameManger._guangqia = 1;
                break;
            case 2:
                MyGameManger._guangqia = 2;
                break;
            case 3:
                MyGameManger._guangqia = 3;
                break;
            default:
                if (GameMgr_1.default.hhanum == 0 || GameMgr_1.default.hhanum > 19) {
                    this.ArrGuanQia();
                }
                MyGameManger._guangqia = GameMgr_1.default._guanqiaarr[GameMgr_1.default.hhanum];
        }
        //MyGameManger._guangqia=5;
        this._guangpeizhi = GameMgr_1.default._guanqiapz;
        if (this._guangpeizhi == "") {
            var suijpz = Math.floor(Math.random() * 4);
            switch (suijpz) {
                case 0:
                    this._guangpeizhi = "A";
                    break;
                case 1:
                    this._guangpeizhi = "B";
                    break;
                case 2:
                    this._guangpeizhi = "C";
                    break;
                default:
                    this._guangpeizhi = "D";
                    break;
            }
        }
        GameMgr_1.default._guanqiapz = this._guangpeizhi;
        MyGameManger.state = StateEnum.weikaiju;
        MyGameManger.ejector = scen.getChildByName("Ejector");
        MyGameManger.ejector.addComponent(EjectorManager_1.default);
        var bulletPool = scen.getChildByName("BulletPool");
        bulletPool.addComponent(BulletPool_1.default);
        var effect = scen.getChildByName("Effect");
        effect.addComponent(CrazyEffect_1.default);
        //MyGameManger.ShowRensKIN(false);
        var selfsce = this;
        var str2 = "subRes/LayaScene_CJ2/Conventional/peizhi0" + MyGameManger._guangqia + ".lh";
        if (this.peizhi != null) {
            this.peizhi.destroy(true);
        }
        Laya.Sprite3D.load(str2, Laya.Handler.create(this, function (sp) {
            selfsce.peizhi = selfsce._zhuscene.addChild(sp);
            selfsce.peizhi.active = true;
            selfsce.laihui = selfsce.peizhi.getChildByName("laihui");
            if (selfsce.laihui != null) {
                for (var index = 0; index < selfsce.laihui.numChildren; index++) {
                    var gm = selfsce.laihui.getChildAt(index);
                    gm.addComponent(GMManager_1.default);
                    gm.getComponent(GMManager_1.default).ShouClore(0);
                    gm.active = true;
                    MyGameManger.mannum++;
                }
            }
            selfsce.gmsjpool = selfsce.peizhi.getChildByName("gmsjpool");
            if (selfsce.gmsjpool != null) {
                for (var index = 0; index < selfsce.gmsjpool.numChildren; index++) {
                    var gm = selfsce.gmsjpool.getChildAt(index);
                    gm.addComponent(RandowmMove_1.default);
                    gm.getComponent(RandowmMove_1.default)._gmnum = index;
                    gm.getComponent(RandowmMove_1.default).ShouClore(0);
                    gm.active = true;
                    MyGameManger.mannum++;
                }
            }
            selfsce.gmjzpool = selfsce.peizhi.getChildByName("gmjzpool");
            if (selfsce.gmjzpool != null) {
                for (var index = 0; index < selfsce.gmjzpool.numChildren; index++) {
                    var gm = selfsce.gmjzpool.getChildAt(index);
                    gm.addComponent(JZNPC_1.default);
                    gm.getComponent(JZNPC_1.default).ShouClore(0);
                    MyGameManger.mannum++;
                }
            }
            selfsce._youtong = new Array();
            var yout = selfsce.peizhi.getChildByName("youtong");
            if (yout != null) {
                for (var index = 0; index < yout.numChildren; index++) {
                    var cton = yout.getChildAt(index);
                    selfsce._youtong.push(cton);
                }
            }
            selfsce.LoaderParameter(MyGameManger._guangqia);
        }));
    };
    MyGameManger.CamerPoint = function () {
        var camera = MyGameManger._Instance._zhuscene.getChildByName("Main Camera");
        camera.transform.localPosition = new Laya.Vector3(0, 24.04, -7.9); //MyGameManger.camepoint2;
        camera.transform.localRotationEulerX = -65; //=new Laya.Vector3(-65,180,-6.36);       //MyGameManger.camepoint;
        camera.transform.localRotationEulerY = 180;
        camera.transform.localRotationEulerZ = -0.36;
    };
    /**
     * 显示人的皮肤
     */
    MyGameManger.ShowRen = function (sho) {
        if (sho == true) {
            // Laya.Sprite3D.load("subRes/LayaScene_CJ2/Conventional/1.lh", Laya.Handler.create(this, function (ren) {
            //     MyGameManger.renmoban = ren as Laya.Sprite3D;
            //     MyGameManger._Instance._zhuscene.addChild(ren);
            //     var roleAni = ren.getComponent(Laya.Animator) as Laya.Animator;
            //     roleAni.play("daiming");
            // }))
            var ren = MyGameManger._Instance._zhuscene.getChildByName("ren");
            ren.active = true;
            var camera = MyGameManger._Instance._zhuscene.getChildByName("Main Camera");
            camera.transform.localPosition = new Laya.Vector3(5.63, 6.04, 8.76); //MyGameManger.camepoint2;
            camera.transform.localRotationEulerX = 242.6043045466443; //=new Laya.Vector3(-65,180,-6.36);       //MyGameManger.camepoint;
            camera.transform.localRotationEulerY = 0;
            camera.transform.localRotationEulerZ = 0;
        }
        else {
            var ren = MyGameManger._Instance._zhuscene.getChildByName("ren");
            ren.active = false;
            //MyGameManger.renmoban.active=false;
        }
    };
    MyGameManger.ShowSkin = function () {
        var ren = MyGameManger._Instance._zhuscene.getChildByName("ren");
        var bgbox = ren.getChildByName("MESH_Char_001");
        var n = User_1.default.getSkinNum();
        bgbox.skinnedMeshRenderer.material = GameMgr_1.default.OnLoadmat(n);
    };
    /**
     * 加载背景场景
     */
    MyGameManger.prototype.LoderBGChangJi = function () {
        // var moban=this._zhuscene.getChildByName("1") as Laya.Sprite3D;
        // moban.destroy(true);
        var cjvar = User_1.default.getLeveNum();
        if (cjvar > 8) {
            while (cjvar > 8) {
                cjvar -= 8;
            }
        }
        cjvar -= 1;
        cjvar = Math.floor(cjvar / 2);
        switch (cjvar) {
            case 0:
                cjvar = 0;
                MyGameManger.bulletmat = 19;
                Laya.timer.once(1000, this, function () {
                    SoundMgr_1.default.instance.play_lmxg_BGM("lin");
                });
                break;
            case 1:
                cjvar = 1;
                MyGameManger.bulletmat = 18;
                Laya.timer.once(1000, this, function () {
                    SoundMgr_1.default.instance.play_lmxg_BGM("cun");
                });
                break;
            case 2:
                cjvar = 2;
                MyGameManger.bulletmat = 16;
                Laya.timer.once(1000, this, function () {
                    SoundMgr_1.default.instance.play_lmxg_BGM("sha");
                });
                break;
            default:
                cjvar = 3;
                MyGameManger.bulletmat = 17;
                Laya.timer.once(1000, this, function () {
                    SoundMgr_1.default.instance.play_lmxg_BGM("hai");
                });
                break;
        }
        var str1 = "subRes/LayaScene_CJ2/Conventional/CJ0" + cjvar + ".lh";
        var selfsce = this;
        if (this._bgcj != null) {
            this._bgcj.destroy(true);
            Laya.Resource.destroyUnusedResources(); //优化清除缓存;
        }
        Laya.Sprite3D.load(str1, Laya.Handler.create(this, function (sp) {
            selfsce._bgcj = selfsce._zhuscene.addChild(sp);
            selfsce._bgcj.active = true;
            var camera = MyGameManger._Instance._zhuscene.getChildByName("Main Camera");
            console.log("摄像机的位置：", camera.transform.localPosition);
            console.log("摄像机的角度：", camera.transform.localRotationEuler);
        }));
    };
    /**
     * 根据后台参数显示场景(参数：场景序号)
     */
    MyGameManger.prototype.LoaderParameter = function (scenenum) {
        switch (scenenum) {
            case 1:
                this.PeiZhione();
                break;
            case 2:
                this.PeiZhiTwo();
                break;
            case 3:
                this.PeiZhiThree();
                break;
            case 4:
                this.PeiZhiFore();
                break;
            case 5:
                this.PeiZhiFive();
                break;
            case 6:
                this.PeiZhiSix();
                break;
            case 7:
                this.PeiZhiSeven();
                break;
            case 8:
                this.PeiZhiEight();
                break;
            case 9:
                this.PeiZhiNine();
                break;
            case 10:
                this.PeiZhiTen();
                break;
            case 11:
                this.PeiZhiEleven();
                break;
            case 12:
                this.PeiZhiTwelve();
                break;
            case 13:
                this.PeiZhiThirteen();
                break;
            case 14:
                this.PeiZhiFourteen();
                break;
            case 15:
                this.PeiZhiFiveteen();
                break;
            case 16:
                this.PeiZhiSixteen();
                break;
            case 17:
                this.PeiZhiSceventeen();
                break;
            case 18:
                this.PeiZhiEightteen();
                break;
            case 19:
                this.PeiZhiNineteen();
                break;
            default:
                this.PeiZhiTwoteens();
                break;
        }
    };
    /**
     * 第一关配置
     */
    MyGameManger.prototype.PeiZhione = function () {
        var arrpre = this._guangpeizhi;
        MyGameManger.ejector.transform.position = this._ejectorpoint[0];
        switch (arrpre) {
            default:
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    if (gm.name == "2") {
                        gm.getComponent(JZNPC_1.default).ShouClore(1);
                        MyGameManger.mannum--;
                    }
                }
                break;
        }
    };
    /**
     * 第二关配置
     */
    MyGameManger.prototype.PeiZhiTwo = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ejector_rotatemove);
        MyGameManger.ejector.transform.position = this._ejectorpoint[1];
        if (User_1.default.getLeveNum() != 2) {
            var arrpre = this._guangpeizhi;
            switch (arrpre) {
                case "A":
                    break;
                case "B":
                    for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                        var gm = this.gmjzpool.getChildAt(index);
                        if (gm.name == "2") {
                            gm.getComponent(JZNPC_1.default).ShouClore(1);
                            MyGameManger.mannum--;
                        }
                    }
                    break;
                case "C":
                    for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                        var gm = this.gmjzpool.getChildAt(index);
                        if (gm.name == "2") {
                            gm.active = false;
                            MyGameManger.mannum--;
                        }
                    }
                    break;
                default:
                    var suiji = Math.floor(Math.random() * 6);
                    var i = 0;
                    for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                        var gm = this.gmjzpool.getChildAt(index);
                        if (gm.name == "2") {
                            if (suiji == i || (suiji + 1) == i || (suiji + 2) == i || (suiji + 3) == i || (suiji + 4) == i) {
                                gm.getComponent(JZNPC_1.default).ShouClore(1);
                                MyGameManger.mannum--;
                            }
                            i++;
                        }
                    }
                    break;
            }
        }
        else {
            for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                var gm = this.gmjzpool.getChildAt(index);
                if (gm.name == "2") {
                    gm.active = false;
                    MyGameManger.mannum--;
                }
            }
        }
    };
    /**
     * 第三关配置
     */
    MyGameManger.prototype.PeiZhiThree = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ejector_Sectormove);
        MyGameManger.ejector.transform.position = this._ejectorpoint[0];
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            default:
                break;
        }
    };
    /**
     * 第四关配置
     */
    MyGameManger.prototype.PeiZhiFore = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ejector_rotatemove);
        MyGameManger.ejector.transform.position = this._ejectorpoint[1];
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            case "A":
                break;
            case "B":
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    if (gm.name == "2") {
                        gm.getComponent(JZNPC_1.default).ShouClore(1);
                        MyGameManger.mannum--;
                    }
                }
                break;
            default:
                var suiji = Math.floor(Math.random() * 3);
                var i = 0;
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    if (gm.name == "2") {
                        if (suiji == i || (suiji + 1) == i) {
                            gm.getComponent(JZNPC_1.default).ShouClore(1);
                            MyGameManger.mannum--;
                        }
                        i++;
                    }
                }
                break;
        }
    };
    /**
     * 第五关配置
     */
    MyGameManger.prototype.PeiZhiFive = function () {
        MyGameManger.ejector.transform.position = this._ejectorpoint[0];
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            default:
                break;
        }
    };
    /**
     * 第六关配置
     */
    MyGameManger.prototype.PeiZhiSix = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ejector_Sectormove);
        MyGameManger.ejector.transform.position = this._ejectorpoint[0];
        MyGameManger._explode = 2.3;
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            case "A":
                break;
            case "B":
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    if (gm.name == "2") {
                        gm.getComponent(JZNPC_1.default).ShouClore(1);
                        MyGameManger.mannum--;
                    }
                }
                break;
            default:
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    if (gm.name == "3") {
                        gm.getComponent(JZNPC_1.default).ShouClore(1);
                        MyGameManger.mannum--;
                    }
                }
                break;
        }
    };
    /**
         * 第七关配置
         */
    MyGameManger.prototype.PeiZhiSeven = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ejector_Sectormove);
        MyGameManger.ejector.transform.position = this._ejectorpoint[0];
        MyGameManger._explode = 2.8;
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            default:
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    gm.getComponent(JZNPC_1.default).ShouClore(1);
                    MyGameManger.mannum--;
                }
                break;
        }
    };
    /**
     * 第八关配置
     */
    MyGameManger.prototype.PeiZhiEight = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ejector_rotatemove);
        MyGameManger.ejector.transform.position = this._ejectorpoint[1];
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            case "A":
                break;
            case "B":
                //var suiji=Math.floor(Math.random()*4);
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    if (gm.name == "2") {
                        gm.getComponent(JZNPC_1.default).ShouClore(1);
                        MyGameManger.mannum--;
                    }
                }
                break;
            default:
                var suiji = Math.floor(Math.random() * 6);
                var i = 0;
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    if (gm.name == "2") {
                        if (suiji == i || (suiji + 1) == i || (suiji + 2) == i || (suiji + 3) == i || (suiji + 4) == i || (suiji + 5) == i) {
                            gm.getComponent(JZNPC_1.default).ShouClore(1);
                            MyGameManger.mannum--;
                        }
                        i++;
                    }
                }
                break;
        }
    };
    /**
     * 第九关配置
     */
    MyGameManger.prototype.PeiZhiNine = function () {
        MyGameManger.ejector.transform.position = this._ejectorpoint[2];
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ejector_DaoSectormove);
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            case "A":
                break;
            default:
                var suiji = Math.floor(Math.random() * 3);
                var i = 0;
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    if (suiji == i || (suiji + 1) == i) {
                        gm.getComponent(JZNPC_1.default).ShouClore(1);
                        MyGameManger.mannum--;
                    }
                    i++;
                }
                break;
        }
    };
    /**
     * 第十关配置
     */
    MyGameManger.prototype.PeiZhiTen = function () {
        MyGameManger.ejector.transform.position = this._ejectorpoint[2];
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ejector_DaoSectormove);
        MyGameManger.ejector.transform.rotate(new Laya.Vector3(0, 0, 0));
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            case "A":
                break;
            default:
                for (var index = 0; index < this.laihui.numChildren; index++) {
                    var gm = this.laihui.getChildAt(index);
                    gm.getComponent(GMManager_1.default).ShouClore(1);
                    MyGameManger.mannum--;
                }
                break;
        }
    };
    /**
     * 第11关配置
     */
    MyGameManger.prototype.PeiZhiEleven = function () {
        MyGameManger.ejector.transform.position = this._ejectorpoint[0];
        //EventMgr.instance.dispatch(EventDef.ejector_rightmove);
        MyGameManger._explode = 2.6;
        for (var index = 0; index < this.gmjzpool.numChildren; index++) {
            var gm = this.gmjzpool.getChildAt(index);
            gm.active = false;
            MyGameManger.mannum--;
        }
        for (var index = 0; index < this.laihui.numChildren; index++) {
            var gm = this.laihui.getChildAt(index);
            gm.active = false;
            MyGameManger.mannum--;
        }
        for (var index = 0; index < this.gmsjpool.numChildren; index++) {
            var gm = this.gmsjpool.getChildAt(index);
            gm.active = false;
            MyGameManger.mannum--;
        }
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            case "A":
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    if (gm.name == "1") {
                        gm.active = true;
                        MyGameManger.mannum++;
                    }
                }
                break;
            case "B":
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    if (gm.name == "2" || gm.name == "1") {
                        gm.active = true;
                        MyGameManger.mannum++;
                    }
                }
                break;
            case "C":
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    gm.active = true;
                    MyGameManger.mannum++;
                }
                break;
            default:
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    gm.active = true;
                    MyGameManger.mannum++;
                }
                var valu1 = Math.floor(Math.random() * 5);
                if (valu1 > 3)
                    valu1 = 3;
                for (var index = 0; index < this.laihui.numChildren; index++) {
                    var gm = this.laihui.getChildAt(index);
                    gm.active = true;
                    if (index == valu1) {
                        gm.getComponent(GMManager_1.default).ShouClore(1);
                    }
                    else {
                        gm.getComponent(GMManager_1.default).ShouClore(0);
                        MyGameManger.mannum++;
                    }
                }
        }
    };
    /**
         * 第12关配置
         */
    MyGameManger.prototype.PeiZhiTwelve = function () {
        MyGameManger.ejector.transform.position = this._ejectorpoint[0];
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ejector_rightmove);
        MyGameManger._explode = 2.5;
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            case "A":
                break;
            case "B":
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    gm.active = true;
                    if (gm.name == "1") {
                    }
                    else {
                        gm.getComponent(JZNPC_1.default).ShouClore(1); //绿色
                        MyGameManger.mannum--;
                    }
                }
                break;
            default:
                var nva1 = Math.random() * 1000 % 5; //随机0-4的数字
                var nva2 = Math.random() * 1000 % 4 + nva1; //随机0-3的数字
                if (nva1 == nva2) {
                    nva2 += 2;
                }
                if (nva2 > 4) {
                    nva2 = nva2 - 4;
                }
                var len = [Math.floor(nva1), Math.floor(nva2)];
                len.sort();
                var i = 0;
                var ind = 0;
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    if (gm.name == "1") {
                        if (ind == len[i]) {
                            gm.getComponent(JZNPC_1.default).ShouClore(1); //绿色
                            MyGameManger.mannum--;
                            i++;
                            if (i > len.length)
                                i = 1;
                        }
                        ind++;
                    }
                    else {
                        gm.getComponent(JZNPC_1.default).ShouClore(1); //绿色
                        MyGameManger.mannum--;
                    }
                }
                break;
        }
    };
    /**
     * 第13关配置
     */
    MyGameManger.prototype.PeiZhiThirteen = function () {
        MyGameManger.ejector.transform.position = this._ejectorpoint[0];
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ejector_rightmove);
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            case "A":
                break;
            case "B":
                var suiji = Math.floor(Math.random() * 7);
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gmp = this.gmjzpool.getChildAt(index);
                    if (gmp.name == "A" + suiji || gmp.name == "B" + suiji || gmp.name == "C" + suiji) {
                        gmp.getComponent(JZNPC_1.default).ShouClore(1); //绿色
                        MyGameManger.mannum--;
                    }
                }
                break;
            default:
                var nva1 = Math.floor(Math.random() * 1000 % 5); //随机0-4的数字
                for (var index = 0; index < this.gmjzpool.numChildren / 3; index++) {
                    var gmp = this.gmjzpool.getChildByName("A" + index);
                    if (gmp) {
                        if (gmp.name == "A" + nva1 || gmp.name == "A" + (nva1 + 1) || gmp.name == "A" + (nva1 + 2)) {
                            gmp.getComponent(JZNPC_1.default).ShouClore(1); //绿色
                            MyGameManger.mannum--;
                        }
                    }
                }
                for (var index = 0; index < this.gmjzpool.numChildren / 3; index++) {
                    var gmp = this.gmjzpool.getChildByName("B" + index);
                    if (gmp) {
                        if (gmp.name == "B" + nva1 || gmp.name == "B" + (nva1 + 1) || gmp.name == "B" + (2 + nva1)) {
                            gmp.getComponent(JZNPC_1.default).ShouClore(1); //绿色
                            MyGameManger.mannum--;
                        }
                    }
                }
                for (var i = 0; i < this.gmjzpool.numChildren / 3; i++) {
                    var gmp = this.gmjzpool.getChildByName("C" + i);
                    if (gmp) {
                        if (gmp.name == "C" + nva1 || gmp.name == "C" + (nva1 + 1) || gmp.name == "C" + (2 + nva1)) {
                            gmp.getComponent(JZNPC_1.default).ShouClore(1); //绿色
                            MyGameManger.mannum--;
                        }
                    }
                }
                break;
        }
    };
    /**
 * 第14关配置
 */
    MyGameManger.prototype.PeiZhiFourteen = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ejector_rotatemove);
        MyGameManger.ejector.transform.position = this._ejectorpoint[1];
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            case "A":
                var suiji = Math.floor(Math.random() * 9);
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gmp = this.gmjzpool.getChildAt(index);
                    if (index == suiji || index == suiji + 2) {
                        gmp.getComponent(JZNPC_1.default).ShouClore(1); //绿色
                        MyGameManger.mannum--;
                    }
                }
            default:
                break;
        }
    };
    /**
     * 第15关配置
     */
    MyGameManger.prototype.PeiZhiFiveteen = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ejector_rotatemove);
        MyGameManger.ejector.transform.position = this._ejectorpoint[1];
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            case "A":
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    gm.getComponent(JZNPC_1.default).Isstart();
                }
                break;
            default:
                var sij = Math.floor(Math.random() * 10);
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    gm.getComponent(JZNPC_1.default).Isstart();
                    if (index == sij || index == sij + 2) {
                        gm.getComponent(JZNPC_1.default).ShouClore(1);
                        MyGameManger.mannum--;
                    }
                }
                break;
        }
    };
    /**
     * 第16关配置
     */
    MyGameManger.prototype.PeiZhiSixteen = function () {
        //EventMgr.instance.dispatch(EventDef.ejector_rotatemove);
        MyGameManger.ejector.transform.position = this._ejectorpoint[0];
        MyGameManger._explode = 3;
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            case "A":
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    gm.getComponent(JZNPC_1.default).Isstartyoutong();
                }
                break;
            default:
                var sij = Math.floor(Math.random() * 6);
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    gm.getComponent(JZNPC_1.default).Isstartyoutong();
                    if (index == sij || index == sij + 2) {
                        gm.getComponent(JZNPC_1.default).ShouClore(1);
                        MyGameManger.mannum--;
                    }
                }
                break;
        }
    };
    MyGameManger.prototype.PeiZhiSceventeen = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ejector_Sectormove);
        MyGameManger.ejector.transform.position = this._ejectorpoint[0];
        MyGameManger._explode = 2;
        MyGameManger.ejector.getComponent(EjectorManager_1.default)._daojiaodu = 20;
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            default:
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    gm.active = true;
                }
                var valu1 = Math.floor(Math.random() * 5);
                if (valu1 > 3)
                    valu1 = 3;
                for (var index = 0; index < this.laihui.numChildren; index++) {
                    var gm = this.laihui.getChildAt(index);
                    gm.active = true;
                    gm.getComponent(GMManager_1.default).ShouClore(1);
                    if (gm.name == "4") {
                        gm.getComponent(GMManager_1.default)._speed = 0.0015;
                    }
                    MyGameManger.mannum--;
                }
        }
    };
    MyGameManger.prototype.PeiZhiEightteen = function () {
        MyGameManger.ejector.transform.position = this._ejectorpoint[0];
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ejector_rightmove);
        MyGameManger._explode = 2.5;
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            case "A":
                break;
            case "B":
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    gm.active = true;
                    if (gm.name == "1") {
                    }
                    else {
                        gm.getComponent(JZNPC_1.default).ShouClore(1); //绿色
                        MyGameManger.mannum--;
                    }
                }
                break;
            default:
                var nva1 = Math.random() * 1000 % 5; //随机0-4的数字
                var nva2 = Math.random() * 1000 % 4 + nva1; //随机0-3的数字
                if (nva1 == nva2) {
                    nva2 += 2;
                }
                if (nva2 > 4) {
                    nva2 = nva2 - 4;
                }
                var len = [Math.floor(nva1), Math.floor(nva2)];
                len.sort();
                var i = 0;
                var ind = 0;
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    if (gm.name == "1") {
                        if (ind == len[i]) {
                            gm.getComponent(JZNPC_1.default).ShouClore(1); //绿色
                            MyGameManger.mannum--;
                            i++;
                            if (i > len.length)
                                i = 1;
                        }
                        ind++;
                    }
                    else {
                        gm.getComponent(JZNPC_1.default).ShouClore(1); //绿色
                        MyGameManger.mannum--;
                    }
                }
                break;
        }
    };
    MyGameManger.prototype.PeiZhiNineteen = function () {
        MyGameManger.ejector.transform.position = this._ejectorpoint[0];
        //EventMgr.instance.dispatch(EventDef.ejector_rightmove);
        MyGameManger._explode = 2.5;
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            default:
                break;
        }
    };
    MyGameManger.prototype.PeiZhiTwoteens = function () {
        MyGameManger.ejector.transform.position = this._ejectorpoint[0];
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ejector_Sectormove);
        MyGameManger._explode = 2.5;
        var arrpre = this._guangpeizhi;
        switch (arrpre) {
            default:
                for (var index = 0; index < this.gmjzpool.numChildren; index++) {
                    var gm = this.gmjzpool.getChildAt(index);
                    if (gm.name == "2") {
                        gm.getComponent(JZNPC_1.default).ShouClore(1); //绿色
                        MyGameManger.mannum--;
                    }
                }
                break;
        }
    };
    /**
     * 油桶爆炸,第十二关事件调用
     */
    MyGameManger.prototype.Explode = function (Vstr) {
        var scen_num = MyGameManger._guangqia;
        if (scen_num == 19) {
            this.ExplodeEight(Vstr);
        }
        else if (scen_num == 12 || scen_num == 18) {
            var newar = new Array();
            var youtv0 = MyGameManger.GetInstance()._youtong[0];
            var youtv1 = MyGameManger.GetInstance()._youtong[1];
            var youtv2 = MyGameManger.GetInstance()._youtong[2];
            //EventMgr.instance.dispatch(EventDef.Explode, this._youtong.name);
            for (var index = 0; index < MyGameManger.GetInstance()._youtong.length; index++) {
                var youtv = MyGameManger.GetInstance()._youtong[index];
                if (Vstr == youtv.name) {
                    if (index == 0) {
                        Laya.timer.once(300, this, function () {
                            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Explode, youtv1.name);
                            CrazyEffect_1.default.getInstance().GroldYouT(youtv1);
                            youtv1.destroy(true);
                            Laya.timer.once(300, this, function () {
                                EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Explode, youtv2.name);
                                CrazyEffect_1.default.getInstance().GroldYouT(youtv2);
                                youtv2.destroy(true);
                            });
                        });
                    }
                    if (index == 1) {
                        Laya.timer.once(300, this, function () {
                            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Explode, youtv0.name);
                            CrazyEffect_1.default.getInstance().GroldYouT(youtv0);
                            youtv0.destroy(true);
                            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Explode, youtv2.name);
                            CrazyEffect_1.default.getInstance().GroldYouT(youtv2);
                            youtv2.destroy(true);
                        });
                    }
                    if (index == 2) {
                        Laya.timer.once(300, this, function () {
                            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Explode, youtv1.name);
                            CrazyEffect_1.default.getInstance().GroldYouT(youtv1);
                            youtv1.destroy(true);
                            Laya.timer.once(300, this, function () {
                                EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Explode, youtv0.name);
                                CrazyEffect_1.default.getInstance().GroldYouT(youtv0);
                                youtv0.destroy(true);
                            });
                        });
                    }
                }
            }
        }
    };
    /**
     * 油桶爆炸,第十九关事件调用
     */
    MyGameManger.prototype.ExplodeEight = function (Vstr) {
        var newar = new Array();
        var youtv0 = MyGameManger.GetInstance()._youtong;
        //EventMgr.instance.dispatch(EventDef.Explode, this._youtong.name);
        for (var index = 0; index < MyGameManger.GetInstance()._youtong.length; index++) {
            var youtv = MyGameManger.GetInstance()._youtong[index];
            if (Vstr == youtv.name) {
                if (index == 0) {
                    Laya.timer.once(300, this, function () {
                        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Explode, youtv0[1].name);
                        CrazyEffect_1.default.getInstance().GroldYouT(youtv0[1]);
                        youtv0[1].destroy(true);
                        Laya.timer.once(300, this, function () {
                            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Explode, youtv0[2].name);
                            CrazyEffect_1.default.getInstance().GroldYouT(youtv0[2]);
                            youtv0[2].destroy(true);
                            Laya.timer.once(300, this, function () {
                                EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Explode, youtv0[3].name);
                                CrazyEffect_1.default.getInstance().GroldYouT(youtv0[3]);
                                youtv0[3].destroy(true);
                                Laya.timer.once(300, this, function () {
                                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Explode, youtv0[4].name);
                                    CrazyEffect_1.default.getInstance().GroldYouT(youtv0[4]);
                                    youtv0[4].destroy(true);
                                    Laya.timer.once(300, this, function () {
                                        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Explode, youtv0[5].name);
                                        CrazyEffect_1.default.getInstance().GroldYouT(youtv0[5]);
                                        youtv0[5].destroy(true);
                                    });
                                });
                            });
                        });
                    });
                }
            }
        }
    };
    /**
     * 进入下一关事件
     */
    MyGameManger.prototype.NextGuan = function () {
        //MyGameManger._garrindex++;
        //console.log("序号参数"+MyGameManger._garrindex);
        //user
    };
    /**
     * 输入序号判断是否有这个皮肤
     */
    MyGameManger.isShowpf = function (pf) {
        var va = User_1.default.getSkinArrNum().split(",");
        for (var i = 0; i < va.length; i++) {
            if (MyGameManger.PIFUBiao(pf) == va[i]) {
                return true;
            }
        }
        return false;
    };
    /**
     *
     * @param pf 输入序号返回皮肤对应字符
     */
    MyGameManger.PIFUBiao = function (pf) {
        var pif = "";
        switch (pf) {
            case 0:
                pif = "A";
                break;
            case 1:
                pif = "B";
                break;
            case 2:
                pif = "C";
                break;
            case 3:
                pif = "D";
                break;
            case 4:
                pif = "E";
                break;
            case 5:
                pif = "F";
                break;
            case 6:
                pif = "G";
                break;
            case 7:
                pif = "H";
                break;
            case 8:
                pif = "I";
                break;
            case 9:
                pif = "J";
                break;
            case 10:
                pif = "K";
                break;
            default:
                pif = "A";
                break;
        }
        return pif;
    };
    MyGameManger.renmoban = null; //人物皮肤模板
    return MyGameManger;
}(Laya.Script3D));
exports.default = MyGameManger;
var StateEnum;
(function (StateEnum) {
    StateEnum[StateEnum["weikaiju"] = 0] = "weikaiju";
    StateEnum[StateEnum["Game"] = 1] = "Game";
    StateEnum[StateEnum["over"] = 2] = "over";
})(StateEnum = exports.StateEnum || (exports.StateEnum = {}));
},{"../Event/EventDef":5,"../Event/EventMgr":6,"../Mgr/GameMgr":10,"../Mgr/SoundMgr":11,"../User/User":40,"./BulletPool":16,"./CrazyEffect":17,"./EjectorManager":18,"./GMManager":19,"./JZNPC":20,"./RandowmMove":23}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var Utilit_1 = require("../Utilit");
var MyGameManger_1 = require("./MyGameManger");
var CrazyEffect_1 = require("./CrazyEffect");
var VibrateMgr_1 = require("../Mgr/VibrateMgr");
var User_1 = require("../User/User");
var GameMgr_1 = require("../Mgr/GameMgr");
var RandowmMove = /** @class */ (function (_super) {
    __extends(RandowmMove, _super);
    function RandowmMove() {
        var _this = _super.call(this) || this;
        _this.genhuan = false; //
        _this.dieDirection = null; //死亡后退后方向
        return _this;
    }
    RandowmMove.prototype.onAwake = function () {
    };
    RandowmMove.prototype.onEnable = function () {
        this._gm = this.owner;
        this.roleAni = this.owner.getComponent(Laya.Animator);
        this._direction = null;
        this.isdie = false;
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.isstart, this, this.Isstart);
        this.mi = 0;
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Explode, this, this.Explode);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.ShouClore, this, this.OnShouClore);
    };
    /**
    * 显示颜色
    */
    RandowmMove.prototype.ShouClore = function (num_mi) {
        if (this._gm) {
            var bgbox = this._gm.getChildByName("MESH_Char_001");
            var mesh = bgbox.skinnedMeshRenderer.material;
            if (num_mi == 0) {
                var n = 0;
                n = User_1.default.getSkinNum();
                var isb = MyGameManger_1.default.isShowpf(n);
                if (isb != true) {
                    n = 0;
                }
                bgbox.skinnedMeshRenderer.material = GameMgr_1.default.OnLoadmat(n); //mengmianmat[n];
                //mesh.albedoColorG = 0.22745;
                //mesh.albedoColorR = 1;
                //mesh.albedoColorB = 0.35294;
                //mesh.albedoColorA = 1;
                this.mi = 0;
            }
            else {
                bgbox.skinnedMeshRenderer.material = GameMgr_1.default.lvsemat;
                //mesh.albedoColorG = 0.8314;
                //mesh.albedoColorR = 0.341;
                //mesh.albedoColorB = 0.2745;
                this.mi = 1;
            }
        }
    };
    RandowmMove.prototype.ZeroPoint = function () {
        var _move1 = new Laya.Vector3(2, 0, 5.5);
        this._movepoint.push(_move1);
        var _move2 = new Laya.Vector3(-1.6, 0, 3);
        this._movepoint.push(_move2);
        var _move3 = new Laya.Vector3(-2, 0, 2.3);
        this._movepoint.push(_move3);
        var _move4 = new Laya.Vector3(1.7, 0, 2);
        this._movepoint.push(_move4);
    };
    RandowmMove.prototype.onepoint = function () {
        var _move1 = new Laya.Vector3(-1, 0, 5);
        this._movepoint.push(_move1);
        var _move2 = new Laya.Vector3(-1.2, 0, 2.1);
        this._movepoint.push(_move2);
        var _move3 = new Laya.Vector3(1.8, 0, 2.3);
        this._movepoint.push(_move3);
        var _move4 = new Laya.Vector3(1.7, 0, 4.8);
        this._movepoint.push(_move4);
    };
    RandowmMove.prototype.Twepoint = function () {
        var _move1 = new Laya.Vector3(1.6, 0, 4.5);
        this._movepoint.push(_move1);
        var _move2 = new Laya.Vector3(-1.9, 0, 4.3);
        this._movepoint.push(_move2);
        var _move3 = new Laya.Vector3(-2.1, 0, 2.3);
        this._movepoint.push(_move3);
        var _move4 = new Laya.Vector3(1.9, 0, 2.2);
        this._movepoint.push(_move4);
    };
    RandowmMove.prototype.ThreePoint = function () {
        var _move1 = new Laya.Vector3(-1.6, 0, 4.4);
        this._movepoint.push(_move1);
        var _move2 = new Laya.Vector3(1.9, 0, 5);
        this._movepoint.push(_move2);
        var _move3 = new Laya.Vector3(2.1, 0, 2.3);
        this._movepoint.push(_move3);
        var _move4 = new Laya.Vector3(-1.8, 0, 2.4);
        this._movepoint.push(_move4);
    };
    RandowmMove.prototype.onDisable = function () {
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.isstart, this, this.Isstart);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Explode, this, this.Explode);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.ShouClore, this, this.OnShouClore);
    };
    RandowmMove.prototype.OnShouClore = function () {
        if (this.mi == 0) {
            var n = 0;
            n = User_1.default.getSkinNum();
            var isb = MyGameManger_1.default.isShowpf(n);
            if (isb != true) {
                n = 0;
            }
            var bgbox = this._gm.getChildByName("MESH_Char_001");
            bgbox.skinnedMeshRenderer.material = GameMgr_1.default.OnLoadmat(n); //mengmianmat[n];
        }
    };
    RandowmMove.prototype.onUpdate = function () {
        if (this._direction != null && MyGameManger_1.default.state == MyGameManger_1.StateEnum.Game) {
            this._gm.transform.position = new Laya.Vector3(this._gm.transform.position.x + this._direction.x * 0.001 * Laya.timer.delta, 0, this._gm.transform.position.z + this._direction.z * 0.001 * Laya.timer.delta);
            var r = Utilit_1.default.getRotationByDirOn3DSpace(new Laya.Point(this._direction.x, this._direction.z));
            //人物平缓转向
            var next = Utilit_1.default.lerpEulerAngle(this._gm.transform.localRotationEuler.y, r, Laya.timer.delta * 0.025 * 360);
            this._gm.transform.localRotationEuler = new Laya.Vector3(0, next, 0); //人物会达到的角度
            if (Laya.Vector3.distance(this._gm.transform.position, this._movepoint[this._numpoint]) < 0.05) {
                if (this.genhuan == false) {
                    this.XiageMubiao();
                }
            }
        }
        if (this.dieDirection != null) {
            this._gm.transform.position = new Laya.Vector3(this._gm.transform.position.x + this.dieDirection.x * Laya.timer.delta * 0.002, 0, this._gm.transform.position.z + this.dieDirection.z * Laya.timer.delta * 0.002);
        }
    };
    /**
     * 死亡退后
     */
    RandowmMove.prototype.OnDie = function (val) {
        if (this.isdie == true)
            return;
        this.IsOver();
        var boxcllider = this._gm.getComponent(Laya.PhysicsComponent);
        boxcllider.enabled = false;
        var num = Math.floor(Math.random() * 4);
        if (num > 3 || num < 1) {
            num = 3;
        }
        this.roleAni.play("die" + num);
        this.isdie = true;
        this.dieDirection = val;
        this._direction = null;
        var bgbox = this._gm.getChildByName("MESH_Char_001");
        var mesh = bgbox.skinnedMeshRenderer.material;
        //this._gm.transform.lookAt(val,new Laya.Vector3(0,0,0),false);
        //this._gm.transform.localRotationEulerY+=180;
        var self = this;
        Laya.Tween.to(mesh, { albedoColorB: 0.4, albedoColorG: 0.4, albedoColorR: 0.4 }, 1200, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
            Laya.Tween.to(self._gm.transform, { localPositionY: -0.1 }, 6000, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
                self._gm.destroy(true);
            }));
        }));
        Laya.timer.once(250, this, function () {
            this.dieDirection = null;
        });
    };
    /**
     * 更换下个目标移动
     */
    RandowmMove.prototype.XiageMubiao = function () {
        this.genhuan = true;
        this._numpoint++;
        if (this._numpoint > 3)
            this._numpoint = 0;
        Laya.Vector3.subtract(this._movepoint[this._numpoint], this._gm.transform.position, this._movejishi);
        this._direction = this._movejishi;
        Laya.Vector3.normalize(this._direction, this._direction);
        Laya.timer.once(500, this, function () {
            this.genhuan = false;
        });
    };
    /**
     * 开始移动
     */
    RandowmMove.prototype.Isstart = function () {
        this.roleAni.play("pao");
        this._movepoint = new Array();
        switch (this._gmnum) {
            case 0:
                this.ZeroPoint();
                break;
            case 1:
                this.onepoint();
                break;
            case 2:
                this.Twepoint();
                break;
            default:
                this.ThreePoint();
                break;
        }
        this._movejishi = new Laya.Vector3(0, 0, 0);
        this._numpoint = 0;
        Laya.Vector3.subtract(this._movepoint[this._numpoint], this._gm.transform.position, this._movejishi);
        this._direction = this._movejishi;
        Laya.Vector3.normalize(this._direction, this._direction);
    };
    /**
     * 油桶爆炸,事件调用
     */
    RandowmMove.prototype.Explode = function (Vstr) {
        for (var index = 0; index < MyGameManger_1.default.GetInstance()._youtong.length; index++) {
            if (Vstr == MyGameManger_1.default.GetInstance()._youtong[index].name) {
                var distancenum = Laya.Vector3.distance(MyGameManger_1.default.GetInstance()._youtong[index].transform.position, this._gm.transform.position);
                if (Math.abs(distancenum) < MyGameManger_1.default._explode) {
                    var vectorcenum = new Laya.Vector3(0, 0, 0);
                    Laya.Vector3.subtract(this._gm.transform.position, MyGameManger_1.default.GetInstance()._youtong[index].transform.position, vectorcenum);
                    this.OnDie(vectorcenum);
                }
            }
        }
    };
    /**
     * 判断是否结束游戏
     */
    RandowmMove.prototype.IsOver = function () {
        if (this.mi == 1) {
            VibrateMgr_1.default.ibrate_lmxg_Long();
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.GameOver, false);
            CrazyEffect_1.default.getInstance().GreenDie(this._gm);
        }
        else {
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.DieOne);
            CrazyEffect_1.default.getInstance().Reddia(this._gm);
        }
    };
    return RandowmMove;
}(Laya.Script));
exports.default = RandowmMove;
},{"../Event/EventDef":5,"../Event/EventMgr":6,"../Mgr/GameMgr":10,"../Mgr/VibrateMgr":12,"../User/User":40,"../Utilit":41,"./CrazyEffect":17,"./MyGameManger":22}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ScalingAni = /** @class */ (function (_super) {
    __extends(ScalingAni, _super);
    function ScalingAni() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ScalingAni.prototype.onEnable = function () {
        this._picture = this.owner;
        this.caling = true;
    };
    ScalingAni.prototype.onUpdate = function () {
        if (this.caling) {
            this._picture.scaleX -= Laya.timer.delta * 0.0004;
            this._picture.scaleY -= Laya.timer.delta * 0.0004;
            if (this._picture.scaleX < 0.9) {
                this._picture.scaleX = 0.9;
                this._picture.scaleY = 0.9;
                this.caling = false;
            }
        }
        else {
            this._picture.scaleX += Laya.timer.delta * 0.0004;
            this._picture.scaleY += Laya.timer.delta * 0.0004;
            if (this._picture.scaleX > 1) {
                this._picture.scaleX = 1;
                this._picture.scaleY = 1;
                this.caling = true;
            }
        }
    };
    ScalingAni.prototype.ScalingAnimatormin = function () {
        Laya.Tween.to(this._picture, { scaleX: 5 }, 52000, Laya.Ease, Laya.Handler.create(this, this.ScalingAnimatormax));
    };
    ScalingAni.prototype.ScalingAnimatormax = function () {
        Laya.Tween.to(this._picture, { scaleX: 1, scaleY: 1 }, 5000, Laya.Ease, Laya.Handler.create(this, this.ScalingAnimatormin));
    };
    ScalingAni.prototype.onDisable = function () {
    };
    return ScalingAni;
}(Laya.Script));
exports.default = ScalingAni;
},{}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CryptoJS = require("./aes.js");
var AesTools = /** @class */ (function () {
    function AesTools() {
    }
    //加密
    AesTools.encrypt = function (str) {
        var key = CryptoJS.enc.Utf8.parse(AesTools.KEY); // 秘钥
        var iv = CryptoJS.enc.Utf8.parse(AesTools.IV); //向量iv
        var encrypted = CryptoJS.AES.encrypt(str, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
        return encrypted.toString();
    };
    //解密
    AesTools.decrypt = function (str) {
        var key = CryptoJS.enc.Utf8.parse(AesTools.KEY); // 秘钥
        var iv = CryptoJS.enc.Utf8.parse(AesTools.IV); //向量iv
        var decrypted = CryptoJS.AES.decrypt(str, key, { iv: iv, padding: CryptoJS.pad.Pkcs7 });
        return decrypted.toString(CryptoJS.enc.Utf8);
    };
    AesTools.KEY = 'b#63fFJ6AvkK3YT*';
    AesTools.IV = 'J$f4DU%sNL73M&Go';
    return AesTools;
}());
exports.default = AesTools;
},{"./aes.js":28}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NetConfig_1 = require("./NetConfig");
var User_1 = require("../User/User");
var AesTools_1 = require("./AesTools");
var requestData = /** @class */ (function () {
    function requestData() {
        this.meth = "post";
        this.url = "";
        this.onSuccess = null;
        this.onFail = null;
        this.data = {};
    }
    return requestData;
}());
exports.requestData = requestData;
var HttpUnit = /** @class */ (function () {
    function HttpUnit() {
    }
    HttpUnit.request = function (req) {
        if (req.url.indexOf("https://") > -1 ||
            req.url.indexOf("http://") > -1) {
            req.url = req.url;
        }
        else {
            req.url = NetConfig_1.default.serverUrl + req.url;
        }
        var completeFunc = function (res) {
        };
        var errorFunc = function (res) {
        };
    };
    //todo:这里添加你们和服务器相互的接口
    HttpUnit.login = function (onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.Login;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    HttpUnit.saveGameData = function (gameData, onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.SaveGameData;
        req.data.gameData = gameData;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    HttpUnit.getGameData = function (onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.GetUser;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    /**
     * IP屏蔽方法，需要在NetConfig类中设置IpBlock的接口地址
     * onSuccess方法返回参数的范例为 Object {code: 0, msg: "准一线", time: "1571034447", data: null}
     * @static
     * @memberof HttpUnit
     */
    HttpUnit.GetIpBlock = function (onSuccess, onFail) {
        if (-1 != NetConfig_1.default.gameid) {
            var req = new requestData();
            req.url = NetConfig_1.default.IpBlock;
            req.onSuccess = onSuccess;
            req.onFail = onFail;
            HttpUnit.request(req);
        }
    };
    return HttpUnit;
}());
exports.default = HttpUnit;
},{"../User/User":40,"./AesTools":25,"./NetConfig":27}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NetConfig = /** @class */ (function () {
    function NetConfig() {
    }
    NetConfig.state = 0;
    NetConfig.gameid = 34;
    NetConfig.serverUrl = "https://sysxue.5iape.com";
    NetConfig.Login = "/api/login/login/wxclogin";
    NetConfig.SaveGameData = "/api/lmxgg/index/savecd";
    NetConfig.GetUser = "/api/lmxgg/index/getuser";
    /* 用来对IP地址进行屏蔽的接口地址，可以使用接口的返回值让某些广告逻辑在微信的审核地区(广州)发生变化 */
    NetConfig.IpBlock = "https://sysxue.5iape.com/api/share/ip_select";
    return NetConfig;
}());
exports.default = NetConfig;
},{}],28:[function(require,module,exports){
var CryptoJS = CryptoJS || function (u, p) {
  var d = {}, l = d.lib = {}, s = function () { }, t = l.Base = { extend: function (a) { s.prototype = this; var c = new s; a && c.mixIn(a); c.hasOwnProperty("init") || (c.init = function () { c.$super.init.apply(this, arguments) }); c.init.prototype = c; c.$super = this; return c }, create: function () { var a = this.extend(); a.init.apply(a, arguments); return a }, init: function () { }, mixIn: function (a) { for (var c in a) a.hasOwnProperty(c) && (this[c] = a[c]); a.hasOwnProperty("toString") && (this.toString = a.toString) }, clone: function () { return this.init.prototype.extend(this) } },
  r = l.WordArray = t.extend({
    init: function (a, c) { a = this.words = a || []; this.sigBytes = c != p ? c : 4 * a.length }, toString: function (a) { return (a || v).stringify(this) }, concat: function (a) { var c = this.words, e = a.words, j = this.sigBytes; a = a.sigBytes; this.clamp(); if (j % 4) for (var k = 0; k < a; k++)c[j + k >>> 2] |= (e[k >>> 2] >>> 24 - 8 * (k % 4) & 255) << 24 - 8 * ((j + k) % 4); else if (65535 < e.length) for (k = 0; k < a; k += 4)c[j + k >>> 2] = e[k >>> 2]; else c.push.apply(c, e); this.sigBytes += a; return this }, clamp: function () {
      var a = this.words, c = this.sigBytes; a[c >>> 2] &= 4294967295 <<
        32 - 8 * (c % 4); a.length = u.ceil(c / 4)
    }, clone: function () { var a = t.clone.call(this); a.words = this.words.slice(0); return a }, random: function (a) { for (var c = [], e = 0; e < a; e += 4)c.push(4294967296 * u.random() | 0); return new r.init(c, a) }
  }), w = d.enc = {}, v = w.Hex = {
    stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++) { var k = c[j >>> 2] >>> 24 - 8 * (j % 4) & 255; e.push((k >>> 4).toString(16)); e.push((k & 15).toString(16)) } return e.join("") }, parse: function (a) {
      for (var c = a.length, e = [], j = 0; j < c; j += 2)e[j >>> 3] |= parseInt(a.substr(j,
        2), 16) << 24 - 4 * (j % 8); return new r.init(e, c / 2)
    }
  }, b = w.Latin1 = { stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++)e.push(String.fromCharCode(c[j >>> 2] >>> 24 - 8 * (j % 4) & 255)); return e.join("") }, parse: function (a) { for (var c = a.length, e = [], j = 0; j < c; j++)e[j >>> 2] |= (a.charCodeAt(j) & 255) << 24 - 8 * (j % 4); return new r.init(e, c) } }, x = w.Utf8 = { stringify: function (a) { try { return decodeURIComponent(escape(b.stringify(a))) } catch (c) { throw Error("Malformed UTF-8 data"); } }, parse: function (a) { return b.parse(unescape(encodeURIComponent(a))) } },
  q = l.BufferedBlockAlgorithm = t.extend({
    reset: function () { this._data = new r.init; this._nDataBytes = 0 }, _append: function (a) { "string" == typeof a && (a = x.parse(a)); this._data.concat(a); this._nDataBytes += a.sigBytes }, _process: function (a) { var c = this._data, e = c.words, j = c.sigBytes, k = this.blockSize, b = j / (4 * k), b = a ? u.ceil(b) : u.max((b | 0) - this._minBufferSize, 0); a = b * k; j = u.min(4 * a, j); if (a) { for (var q = 0; q < a; q += k)this._doProcessBlock(e, q); q = e.splice(0, a); c.sigBytes -= j } return new r.init(q, j) }, clone: function () {
      var a = t.clone.call(this);
      a._data = this._data.clone(); return a
    }, _minBufferSize: 0
  }); l.Hasher = q.extend({
    cfg: t.extend(), init: function (a) { this.cfg = this.cfg.extend(a); this.reset() }, reset: function () { q.reset.call(this); this._doReset() }, update: function (a) { this._append(a); this._process(); return this }, finalize: function (a) { a && this._append(a); return this._doFinalize() }, blockSize: 16, _createHelper: function (a) { return function (b, e) { return (new a.init(e)).finalize(b) } }, _createHmacHelper: function (a) {
      return function (b, e) {
        return (new n.HMAC.init(a,
          e)).finalize(b)
      }
    }
  }); var n = d.algo = {}; return d
}(Math);
(function () {
  var u = CryptoJS, p = u.lib.WordArray; u.enc.Base64 = {
    stringify: function (d) { var l = d.words, p = d.sigBytes, t = this._map; d.clamp(); d = []; for (var r = 0; r < p; r += 3)for (var w = (l[r >>> 2] >>> 24 - 8 * (r % 4) & 255) << 16 | (l[r + 1 >>> 2] >>> 24 - 8 * ((r + 1) % 4) & 255) << 8 | l[r + 2 >>> 2] >>> 24 - 8 * ((r + 2) % 4) & 255, v = 0; 4 > v && r + 0.75 * v < p; v++)d.push(t.charAt(w >>> 6 * (3 - v) & 63)); if (l = t.charAt(64)) for (; d.length % 4;)d.push(l); return d.join("") }, parse: function (d) {
      var l = d.length, s = this._map, t = s.charAt(64); t && (t = d.indexOf(t), -1 != t && (l = t)); for (var t = [], r = 0, w = 0; w <
        l; w++)if (w % 4) { var v = s.indexOf(d.charAt(w - 1)) << 2 * (w % 4), b = s.indexOf(d.charAt(w)) >>> 6 - 2 * (w % 4); t[r >>> 2] |= (v | b) << 24 - 8 * (r % 4); r++ } return p.create(t, r)
    }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
  }
})();
(function (u) {
  function p(b, n, a, c, e, j, k) { b = b + (n & a | ~n & c) + e + k; return (b << j | b >>> 32 - j) + n } function d(b, n, a, c, e, j, k) { b = b + (n & c | a & ~c) + e + k; return (b << j | b >>> 32 - j) + n } function l(b, n, a, c, e, j, k) { b = b + (n ^ a ^ c) + e + k; return (b << j | b >>> 32 - j) + n } function s(b, n, a, c, e, j, k) { b = b + (a ^ (n | ~c)) + e + k; return (b << j | b >>> 32 - j) + n } for (var t = CryptoJS, r = t.lib, w = r.WordArray, v = r.Hasher, r = t.algo, b = [], x = 0; 64 > x; x++)b[x] = 4294967296 * u.abs(u.sin(x + 1)) | 0; r = r.MD5 = v.extend({
    _doReset: function () { this._hash = new w.init([1732584193, 4023233417, 2562383102, 271733878]) },
    _doProcessBlock: function (q, n) {
      for (var a = 0; 16 > a; a++) { var c = n + a, e = q[c]; q[c] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360 } var a = this._hash.words, c = q[n + 0], e = q[n + 1], j = q[n + 2], k = q[n + 3], z = q[n + 4], r = q[n + 5], t = q[n + 6], w = q[n + 7], v = q[n + 8], A = q[n + 9], B = q[n + 10], C = q[n + 11], u = q[n + 12], D = q[n + 13], E = q[n + 14], x = q[n + 15], f = a[0], m = a[1], g = a[2], h = a[3], f = p(f, m, g, h, c, 7, b[0]), h = p(h, f, m, g, e, 12, b[1]), g = p(g, h, f, m, j, 17, b[2]), m = p(m, g, h, f, k, 22, b[3]), f = p(f, m, g, h, z, 7, b[4]), h = p(h, f, m, g, r, 12, b[5]), g = p(g, h, f, m, t, 17, b[6]), m = p(m, g, h, f, w, 22, b[7]),
        f = p(f, m, g, h, v, 7, b[8]), h = p(h, f, m, g, A, 12, b[9]), g = p(g, h, f, m, B, 17, b[10]), m = p(m, g, h, f, C, 22, b[11]), f = p(f, m, g, h, u, 7, b[12]), h = p(h, f, m, g, D, 12, b[13]), g = p(g, h, f, m, E, 17, b[14]), m = p(m, g, h, f, x, 22, b[15]), f = d(f, m, g, h, e, 5, b[16]), h = d(h, f, m, g, t, 9, b[17]), g = d(g, h, f, m, C, 14, b[18]), m = d(m, g, h, f, c, 20, b[19]), f = d(f, m, g, h, r, 5, b[20]), h = d(h, f, m, g, B, 9, b[21]), g = d(g, h, f, m, x, 14, b[22]), m = d(m, g, h, f, z, 20, b[23]), f = d(f, m, g, h, A, 5, b[24]), h = d(h, f, m, g, E, 9, b[25]), g = d(g, h, f, m, k, 14, b[26]), m = d(m, g, h, f, v, 20, b[27]), f = d(f, m, g, h, D, 5, b[28]), h = d(h, f,
          m, g, j, 9, b[29]), g = d(g, h, f, m, w, 14, b[30]), m = d(m, g, h, f, u, 20, b[31]), f = l(f, m, g, h, r, 4, b[32]), h = l(h, f, m, g, v, 11, b[33]), g = l(g, h, f, m, C, 16, b[34]), m = l(m, g, h, f, E, 23, b[35]), f = l(f, m, g, h, e, 4, b[36]), h = l(h, f, m, g, z, 11, b[37]), g = l(g, h, f, m, w, 16, b[38]), m = l(m, g, h, f, B, 23, b[39]), f = l(f, m, g, h, D, 4, b[40]), h = l(h, f, m, g, c, 11, b[41]), g = l(g, h, f, m, k, 16, b[42]), m = l(m, g, h, f, t, 23, b[43]), f = l(f, m, g, h, A, 4, b[44]), h = l(h, f, m, g, u, 11, b[45]), g = l(g, h, f, m, x, 16, b[46]), m = l(m, g, h, f, j, 23, b[47]), f = s(f, m, g, h, c, 6, b[48]), h = s(h, f, m, g, w, 10, b[49]), g = s(g, h, f, m,
            E, 15, b[50]), m = s(m, g, h, f, r, 21, b[51]), f = s(f, m, g, h, u, 6, b[52]), h = s(h, f, m, g, k, 10, b[53]), g = s(g, h, f, m, B, 15, b[54]), m = s(m, g, h, f, e, 21, b[55]), f = s(f, m, g, h, v, 6, b[56]), h = s(h, f, m, g, x, 10, b[57]), g = s(g, h, f, m, t, 15, b[58]), m = s(m, g, h, f, D, 21, b[59]), f = s(f, m, g, h, z, 6, b[60]), h = s(h, f, m, g, C, 10, b[61]), g = s(g, h, f, m, j, 15, b[62]), m = s(m, g, h, f, A, 21, b[63]); a[0] = a[0] + f | 0; a[1] = a[1] + m | 0; a[2] = a[2] + g | 0; a[3] = a[3] + h | 0
    }, _doFinalize: function () {
      var b = this._data, n = b.words, a = 8 * this._nDataBytes, c = 8 * b.sigBytes; n[c >>> 5] |= 128 << 24 - c % 32; var e = u.floor(a /
        4294967296); n[(c + 64 >>> 9 << 4) + 15] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360; n[(c + 64 >>> 9 << 4) + 14] = (a << 8 | a >>> 24) & 16711935 | (a << 24 | a >>> 8) & 4278255360; b.sigBytes = 4 * (n.length + 1); this._process(); b = this._hash; n = b.words; for (a = 0; 4 > a; a++)c = n[a], n[a] = (c << 8 | c >>> 24) & 16711935 | (c << 24 | c >>> 8) & 4278255360; return b
    }, clone: function () { var b = v.clone.call(this); b._hash = this._hash.clone(); return b }
  }); t.MD5 = v._createHelper(r); t.HmacMD5 = v._createHmacHelper(r)
})(Math);
(function () {
  var u = CryptoJS, p = u.lib, d = p.Base, l = p.WordArray, p = u.algo, s = p.EvpKDF = d.extend({ cfg: d.extend({ keySize: 4, hasher: p.MD5, iterations: 1 }), init: function (d) { this.cfg = this.cfg.extend(d) }, compute: function (d, r) { for (var p = this.cfg, s = p.hasher.create(), b = l.create(), u = b.words, q = p.keySize, p = p.iterations; u.length < q;) { n && s.update(n); var n = s.update(d).finalize(r); s.reset(); for (var a = 1; a < p; a++)n = s.finalize(n), s.reset(); b.concat(n) } b.sigBytes = 4 * q; return b } }); u.EvpKDF = function (d, l, p) {
    return s.create(p).compute(d,
      l)
  }
})();
CryptoJS.lib.Cipher || function (u) {
  var p = CryptoJS, d = p.lib, l = d.Base, s = d.WordArray, t = d.BufferedBlockAlgorithm, r = p.enc.Base64, w = p.algo.EvpKDF, v = d.Cipher = t.extend({
    cfg: l.extend(), createEncryptor: function (e, a) { return this.create(this._ENC_XFORM_MODE, e, a) }, createDecryptor: function (e, a) { return this.create(this._DEC_XFORM_MODE, e, a) }, init: function (e, a, b) { this.cfg = this.cfg.extend(b); this._xformMode = e; this._key = a; this.reset() }, reset: function () { t.reset.call(this); this._doReset() }, process: function (e) { this._append(e); return this._process() },
    finalize: function (e) { e && this._append(e); return this._doFinalize() }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function (e) { return { encrypt: function (b, k, d) { return ("string" == typeof k ? c : a).encrypt(e, b, k, d) }, decrypt: function (b, k, d) { return ("string" == typeof k ? c : a).decrypt(e, b, k, d) } } }
  }); d.StreamCipher = v.extend({ _doFinalize: function () { return this._process(!0) }, blockSize: 1 }); var b = p.mode = {}, x = function (e, a, b) {
    var c = this._iv; c ? this._iv = u : c = this._prevBlock; for (var d = 0; d < b; d++)e[a + d] ^=
      c[d]
  }, q = (d.BlockCipherMode = l.extend({ createEncryptor: function (e, a) { return this.Encryptor.create(e, a) }, createDecryptor: function (e, a) { return this.Decryptor.create(e, a) }, init: function (e, a) { this._cipher = e; this._iv = a } })).extend(); q.Encryptor = q.extend({ processBlock: function (e, a) { var b = this._cipher, c = b.blockSize; x.call(this, e, a, c); b.encryptBlock(e, a); this._prevBlock = e.slice(a, a + c) } }); q.Decryptor = q.extend({
    processBlock: function (e, a) {
      var b = this._cipher, c = b.blockSize, d = e.slice(a, a + c); b.decryptBlock(e, a); x.call(this,
        e, a, c); this._prevBlock = d
    }
  }); b = b.CBC = q; q = (p.pad = {}).Pkcs7 = { pad: function (a, b) { for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, l = [], n = 0; n < c; n += 4)l.push(d); c = s.create(l, c); a.concat(c) }, unpad: function (a) { a.sigBytes -= a.words[a.sigBytes - 1 >>> 2] & 255 } }; d.BlockCipher = v.extend({
    cfg: v.cfg.extend({ mode: b, padding: q }), reset: function () {
      v.reset.call(this); var a = this.cfg, b = a.iv, a = a.mode; if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor; else c = a.createDecryptor, this._minBufferSize = 1; this._mode = c.call(a,
        this, b && b.words)
    }, _doProcessBlock: function (a, b) { this._mode.processBlock(a, b) }, _doFinalize: function () { var a = this.cfg.padding; if (this._xformMode == this._ENC_XFORM_MODE) { a.pad(this._data, this.blockSize); var b = this._process(!0) } else b = this._process(!0), a.unpad(b); return b }, blockSize: 4
  }); var n = d.CipherParams = l.extend({ init: function (a) { this.mixIn(a) }, toString: function (a) { return (a || this.formatter).stringify(this) } }), b = (p.format = {}).OpenSSL = {
    stringify: function (a) {
      var b = a.ciphertext; a = a.salt; return (a ? s.create([1398893684,
        1701076831]).concat(a).concat(b) : b).toString(r)
    }, parse: function (a) { a = r.parse(a); var b = a.words; if (1398893684 == b[0] && 1701076831 == b[1]) { var c = s.create(b.slice(2, 4)); b.splice(0, 4); a.sigBytes -= 16 } return n.create({ ciphertext: a, salt: c }) }
  }, a = d.SerializableCipher = l.extend({
    cfg: l.extend({ format: b }), encrypt: function (a, b, c, d) { d = this.cfg.extend(d); var l = a.createEncryptor(c, d); b = l.finalize(b); l = l.cfg; return n.create({ ciphertext: b, key: c, iv: l.iv, algorithm: a, mode: l.mode, padding: l.padding, blockSize: a.blockSize, formatter: d.format }) },
    decrypt: function (a, b, c, d) { d = this.cfg.extend(d); b = this._parse(b, d.format); return a.createDecryptor(c, d).finalize(b.ciphertext) }, _parse: function (a, b) { return "string" == typeof a ? b.parse(a, this) : a }
  }), p = (p.kdf = {}).OpenSSL = { execute: function (a, b, c, d) { d || (d = s.random(8)); a = w.create({ keySize: b + c }).compute(a, d); c = s.create(a.words.slice(b), 4 * c); a.sigBytes = 4 * b; return n.create({ key: a, iv: c, salt: d }) } }, c = d.PasswordBasedCipher = a.extend({
    cfg: a.cfg.extend({ kdf: p }), encrypt: function (b, c, d, l) {
      l = this.cfg.extend(l); d = l.kdf.execute(d,
        b.keySize, b.ivSize); l.iv = d.iv; b = a.encrypt.call(this, b, c, d.key, l); b.mixIn(d); return b
    }, decrypt: function (b, c, d, l) { l = this.cfg.extend(l); c = this._parse(c, l.format); d = l.kdf.execute(d, b.keySize, b.ivSize, c.salt); l.iv = d.iv; return a.decrypt.call(this, b, c, d.key, l) }
  })
}();
(function () {
  for (var u = CryptoJS, p = u.lib.BlockCipher, d = u.algo, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = 0; 256 > c; c++)a[c] = 128 > c ? c << 1 : c << 1 ^ 283; for (var e = 0, j = 0, c = 0; 256 > c; c++) { var k = j ^ j << 1 ^ j << 2 ^ j << 3 ^ j << 4, k = k >>> 8 ^ k & 255 ^ 99; l[e] = k; s[k] = e; var z = a[e], F = a[z], G = a[F], y = 257 * a[k] ^ 16843008 * k; t[e] = y << 24 | y >>> 8; r[e] = y << 16 | y >>> 16; w[e] = y << 8 | y >>> 24; v[e] = y; y = 16843009 * G ^ 65537 * F ^ 257 * z ^ 16843008 * e; b[k] = y << 24 | y >>> 8; x[k] = y << 16 | y >>> 16; q[k] = y << 8 | y >>> 24; n[k] = y; e ? (e = z ^ a[a[a[G ^ z]]], j ^= a[a[j]]) : e = j = 1 } var H = [0, 1, 2, 4, 8,
    16, 32, 64, 128, 27, 54], d = d.AES = p.extend({
      _doReset: function () {
        for (var a = this._key, c = a.words, d = a.sigBytes / 4, a = 4 * ((this._nRounds = d + 6) + 1), e = this._keySchedule = [], j = 0; j < a; j++)if (j < d) e[j] = c[j]; else { var k = e[j - 1]; j % d ? 6 < d && 4 == j % d && (k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255]) : (k = k << 8 | k >>> 24, k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255], k ^= H[j / d | 0] << 24); e[j] = e[j - d] ^ k } c = this._invKeySchedule = []; for (d = 0; d < a; d++)j = a - d, k = d % 4 ? e[j] : e[j - 4], c[d] = 4 > d || 4 >= j ? k : b[l[k >>> 24]] ^ x[l[k >>> 16 & 255]] ^ q[l[k >>>
          8 & 255]] ^ n[l[k & 255]]
      }, encryptBlock: function (a, b) { this._doCryptBlock(a, b, this._keySchedule, t, r, w, v, l) }, decryptBlock: function (a, c) { var d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d; this._doCryptBlock(a, c, this._invKeySchedule, b, x, q, n, s); d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d }, _doCryptBlock: function (a, b, c, d, e, j, l, f) {
        for (var m = this._nRounds, g = a[b] ^ c[0], h = a[b + 1] ^ c[1], k = a[b + 2] ^ c[2], n = a[b + 3] ^ c[3], p = 4, r = 1; r < m; r++)var q = d[g >>> 24] ^ e[h >>> 16 & 255] ^ j[k >>> 8 & 255] ^ l[n & 255] ^ c[p++], s = d[h >>> 24] ^ e[k >>> 16 & 255] ^ j[n >>> 8 & 255] ^ l[g & 255] ^ c[p++], t =
          d[k >>> 24] ^ e[n >>> 16 & 255] ^ j[g >>> 8 & 255] ^ l[h & 255] ^ c[p++], n = d[n >>> 24] ^ e[g >>> 16 & 255] ^ j[h >>> 8 & 255] ^ l[k & 255] ^ c[p++], g = q, h = s, k = t; q = (f[g >>> 24] << 24 | f[h >>> 16 & 255] << 16 | f[k >>> 8 & 255] << 8 | f[n & 255]) ^ c[p++]; s = (f[h >>> 24] << 24 | f[k >>> 16 & 255] << 16 | f[n >>> 8 & 255] << 8 | f[g & 255]) ^ c[p++]; t = (f[k >>> 24] << 24 | f[n >>> 16 & 255] << 16 | f[g >>> 8 & 255] << 8 | f[h & 255]) ^ c[p++]; n = (f[n >>> 24] << 24 | f[g >>> 16 & 255] << 16 | f[h >>> 8 & 255] << 8 | f[k & 255]) ^ c[p++]; a[b] = q; a[b + 1] = s; a[b + 2] = t; a[b + 3] = n
      }, keySize: 8
    }); u.AES = p._createHelper(d)
})();

module.exports = CryptoJS;
},{}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("./AppConfig");
var OPPOAPI = /** @class */ (function () {
    function OPPOAPI() {
    }
    Object.defineProperty(OPPOAPI, "BannerInstance", {
        get: function () {
            return this._banner;
        },
        enumerable: true,
        configurable: true
    });
    OPPOAPI.Login = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].login({
                success: function (res) {
                    var token = res.data.token;
                    onSuccess(token);
                    console.log("OPPO 登陆成功,获取到 token : " + token);
                    for (var key in res) {
                        console.log(key, res[key]);
                    }
                },
                fail: function (res) {
                    console.log("OPPO 登陆失败", res);
                    for (var key in res) {
                        console.log(key, res[key]);
                    }
                }
            });
        }
    };
    OPPOAPI.initAdService = function (onSuccess, onFail, onComplete) {
        Laya.Browser.window["qg"].initAdService({
            appId: AppConfig_1.default.AppID,
            isDebug: false,
            success: function (res) {
                console.log("oppo initAdService success");
                if (onSuccess) {
                    onSuccess(res);
                }
            },
            fail: function (res) {
                console.log("oppo initAdService fail: ", res.code, res.msg);
                if (onFail) {
                    onFail(res);
                }
            },
            complete: function (res) {
                console.log("oppo initAdService complete");
                if (onComplete) {
                    onComplete(res);
                }
            }
        });
    };
    OPPOAPI.showRewardedVideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQGMiniGame) {
            var videoAd = Laya.Browser.window["qg"].createRewardedVideoAd({
                posId: OPPOAPI.adUnitId,
            });
            videoAd.onLoad(function () {
                console.log("oppo 视频广告加载完成");
                videoAd.show();
            });
            videoAd.onVideoStart(function () {
                console.log("oppo 视频广告开始播放");
            });
            videoAd.onClose(function (res) {
                if (res.isEnded) {
                    console.log("oppo 视频广告观看 完成");
                    onAdClose(true);
                }
                else {
                    console.log("oppo 视频广告观看 未完成");
                    onAdClose(false);
                }
                videoAd.destroy();
            });
            videoAd.onError(function (err) {
                console.log("oppo 视频广告获取失败", err);
                videoAd.destroy();
                onFailed();
            });
            videoAd.load();
        }
        else {
            onAdClose(true);
        }
    };
    OPPOAPI.navigateToMiniProgram = function (pkgName, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onQGMiniGame) {
            console.log("OPPO 跳转游戏： " + pkgName);
            Laya.Browser.window["qg"].navigateToMiniGame({
                pkgName: pkgName,
                path: path,
                extraData: {
                    from: AppConfig_1.default.AppID
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    OPPOAPI.showInterstitialAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQGMiniGame) {
            var insertAd = qg.createInsertAd({
                posId: OPPOAPI.InsAdUnitId
            });
            insertAd.load();
            insertAd.onLoad(function () {
                console.log("插屏广告加载完成");
                insertAd.show();
            });
            insertAd.onShow(function () {
                console.log("插屏广告显示成功");
            });
            insertAd.onError(function (err) {
                console.log("插屏广告拉取失败", err);
                insertAd.destroy();
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    OPPOAPI.showBannaer = function () {
        if (OPPOAPI._banner) {
            OPPOAPI._banner.show();
            return;
        }
        var bannerAd = qg.createBannerAd({
            posId: OPPOAPI.bannerAdUnitId
        });
        bannerAd.show();
        OPPOAPI._banner = bannerAd;
    };
    OPPOAPI.hideBanner = function () {
        if (OPPOAPI._banner) {
            OPPOAPI._banner.hide();
        }
    };
    OPPOAPI.getLaunchOptionsSync = function () {
        return {};
    };
    OPPOAPI.share = function (complate, titel, imageUrl) {
        complate(false);
    };
    OPPOAPI.createDesktopIcon = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].hasShortcutInstalled({
                success: function (res) {
                    if (res == false) {
                        Laya.Browser.window["qg"].installShortcut({
                            success: function () {
                                if (onSuccess) {
                                    onSuccess();
                                }
                            },
                            fail: function (err) {
                                if (onFail) {
                                    onFail();
                                }
                                console.log("创建桌面图标失败！！！！", err);
                                for (var key in err) {
                                    console.log(key, err);
                                }
                            },
                            complete: function () {
                            }
                        });
                    }
                    else {
                        console.log("桌面图标已存在！！！！");
                    }
                },
                fail: function (err) {
                    if (onFail) {
                        onFail();
                    }
                    console.log("判断桌面图标是否存在失败！！！", err);
                    for (var key in err) {
                        console.log(key, err);
                    }
                },
                complete: function () {
                }
            });
        }
        else {
            if (onFail) {
                onFail();
            }
        }
    };
    OPPOAPI.adUnitId = "134292";
    OPPOAPI.bannerAdUnitId = "134291";
    OPPOAPI.InsAdUnitId = "134294";
    OPPOAPI.OpenScreenAdUnitId = "134293";
    OPPOAPI._banner = null;
    return OPPOAPI;
}());
exports.default = OPPOAPI;
},{"./AppConfig":2}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppConfig_1 = require("../AppConfig");
var User_1 = require("../User/User");
var Utilit_1 = require("../Utilit");
var ALD_1 = require("../ALD");
var WXAPI_1 = require("../WXAPI");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var Share_lmxg_Ad = /** @class */ (function () {
    function Share_lmxg_Ad() {
    }
    Share_lmxg_Ad.refresh_lmxg_Ad = function (complate) {
        Share_lmxg_Ad.get_lmxg_AdPosData(function (res) {
            if (1 == res.code) {
                console.log("获取分享广告数据成功");
                Share_lmxg_Ad._adPosition = res.result;
                if (complate) {
                    complate(true);
                }
            }
            else {
                console.log("获取分享广告数据失败 ： " + res.msg);
                if (complate) {
                    complate(false);
                }
            }
        }, function (res) {
            console.log("获取分享广告数据失败");
            if (complate) {
                complate(false);
            }
        });
    };
    Share_lmxg_Ad.get_lmxg_ADVs = function (locationid, complate, useRandom, useLocalRandom) {
        if (!Share_lmxg_Ad.isNeed_lmxg_ShowAd()) {
            complate(null);
            return;
        }
        useRandom = null == useRandom ? Share_lmxg_Ad.UseRandomAdPos : useRandom;
        useLocalRandom = null == useLocalRandom ? true : useRandom;
        if (useRandom) {
            locationid = Share_lmxg_Ad.getRandomADPosID();
        }
        var datas = Share_lmxg_Ad._adv[locationid];
        if (datas) {
            // for (var i = datas.length - 1; i >= 0; --i)  
            // {
            //     var randomIndex = Math.floor(Math.random() * datas.length);
            //     var curValue = datas[i];
            //     var randomValue = datas[randomIndex];
            //     datas[randomIndex] = curValue;
            //     datas[i] = randomValue;
            // }
            complate(datas);
        }
        else {
            Share_lmxg_Ad.get_lmxg_ADVData(locationid, function (res) {
                if (1 == res.code) {
                    Share_lmxg_Ad._adv[locationid] = res.result;
                    datas = Share_lmxg_Ad._adv[locationid];
                    if (datas && Utilit_1.default.isIphone()) {
                        for (var i = 0; i < datas.length; ++i) {
                            var data = datas[i];
                            for (var j = 0; j < Share_lmxg_Ad._iphoneIgnoreAppIds.length; ++j) {
                                if (data.appid == Share_lmxg_Ad._iphoneIgnoreAppIds[j]) {
                                    datas.splice(i, 1);
                                    --i;
                                    break;
                                }
                            }
                        }
                    }
                    if (datas && useLocalRandom) {
                        for (var i = datas.length - 1; i >= 0; --i) {
                            var randomIndex = Math.floor(Math.random() * datas.length);
                            var curValue = datas[i];
                            var randomValue = datas[randomIndex];
                            datas[randomIndex] = curValue;
                            datas[i] = randomValue;
                        }
                    }
                    if (complate) {
                        complate(datas);
                    }
                }
                else {
                    if (complate) {
                        complate(null);
                    }
                }
            }, function (res) {
                if (complate) {
                    complate(null);
                }
            });
        }
    };
    Share_lmxg_Ad.report_lmxg_UserClick = function (advid) {
        Share_lmxg_Ad.reqUserClick(advid, function (res) {
            if (1 == res.code) {
                console.log("点击广告上报成功");
            }
            else {
                console.log("点击广告上报失败");
            }
        }, function (res) {
            console.log("点击广告上报失败");
        });
    };
    Share_lmxg_Ad.getRandomADPosID = function () {
        return Share_lmxg_Ad.AdLocationids[Math.floor(Math.random() * Share_lmxg_Ad.AdLocationids.length)];
    };
    Share_lmxg_Ad.request = function (req) {
        if (req.url.indexOf("https://") > -1 ||
            req.url.indexOf("http://") > -1) {
            req.url = req.url;
        }
        else {
            req.url = Share_lmxg_Ad.mainUrl + req.url;
        }
        var completeFunc = function (res) {
        };
        var errorFunc = function (res) {
        };
    };
    Share_lmxg_Ad.get_lmxg_AdPosData = function (onSuccess, onFail) {
        var req = new HttpUnit_1.requestData();
        req.url = Share_lmxg_Ad.getAdPostion;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        req.data.softid = AppConfig_1.default.AppID;
        req.meth = "get";
        Share_lmxg_Ad.request(req);
    };
    Share_lmxg_Ad.reqUserClick = function (advid, onSuccess, onFail) {
        var req = new HttpUnit_1.requestData();
        req.url = Share_lmxg_Ad.userClick;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        req.data.softid = AppConfig_1.default.AppID;
        req.data.uid = User_1.default.openId;
        req.data.advid = advid;
        Share_lmxg_Ad.request(req);
    };
    Share_lmxg_Ad.get_lmxg_ADVData = function (locationid, onSuccess, onFail) {
        var req = new HttpUnit_1.requestData();
        req.url = Share_lmxg_Ad.getAdv;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        req.data.softid = AppConfig_1.default.AppID;
        req.data.locationid = locationid;
        req.data.preview = 0;
        Share_lmxg_Ad.request(req);
    };
    /**
         * 随机跳转的方法，会从广告列表中随机得到一个AppId并且跳转,输入的参数为概率，大小在0-1之间
         * 如果概率大于1，则自动将其除以100，所以千万注意！
         *
         * @static
         * @param {number} [rate=1]
         * @memberof ShareAd
         */
    Share_lmxg_Ad.Random_lmxg_Jump = function (rate) {
        if (rate === void 0) { rate = 1; }
        console.log("随机跳转,rate：" + rate);
        if (rate > 1) {
            rate = rate / 100;
        }
        var rd = Math.random();
        if (rd <= rate) {
            var adLocationID = Share_lmxg_Ad.LoopAdLocationID;
            var Locations = [
                Share_lmxg_Ad.LoopAdLocationID,
                Share_lmxg_Ad.InsertAdLocationID,
                Share_lmxg_Ad.BannerAdLocationID,
                Share_lmxg_Ad.AniAdLocationID,
            ];
            if (Share_lmxg_Ad.UseRandomAdPos) {
                for (var i = 0; i < Share_lmxg_Ad.AdLocationids.length; ++i) {
                    Locations.push(Share_lmxg_Ad.AdLocationids[i]);
                }
            }
            adLocationID = Locations[Math.floor(Math.random() * Locations.length)];
            var datas = Share_lmxg_Ad.get_lmxg_ADVs(adLocationID, function (datas) {
                if (datas) {
                    var rd_1 = Math.floor(datas.length * Math.random());
                    var data_1 = datas[rd_1];
                    console.log("跳转游戏： " + data_1.title);
                    WXAPI_1.default.navigateToMiniProgram(data_1.appid, data_1.url, function (res) {
                        console.log("跳转成功");
                        Share_lmxg_Ad.report_lmxg_UserClick(data_1.appid);
                        ALD_1.default.aldSendReportAdClickSuccess(data_1);
                    }, function (res) {
                        console.log("跳转失败");
                        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                        if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                            console.log("用户取消跳转");
                            ALD_1.default.aldSendReportAdClickFail(data_1);
                        }
                    }, function (res) {
                        console.log("跳转完成");
                    });
                }
            }, true);
        }
    };
    Share_lmxg_Ad.isNeed_lmxg_ShowAd = function () {
        var mailiang = AppSwitchConfig_1.default.getInstance().getAppSwitchData().mailiang;
        var mailianglist = AppSwitchConfig_1.default.getInstance().getAppSwitchData().mailianglist;
        if (1 == mailiang) {
            if (Laya.Browser.onMiniGame) {
                var flag = WXAPI_1.default.getLaunchOptionsSync().query['chid'];
                if (null != flag && null != mailianglist && mailianglist.length > 0) {
                    for (var i = 0; i < mailianglist.length; ++i) {
                        if (flag == mailianglist[i]) {
                            return false;
                        }
                    }
                }
            }
            else if (Laya.Browser.onQGMiniGame) {
                return false;
            }
        }
        return true;
    };
    Share_lmxg_Ad.mainUrl = "https://swwww.mrkzx.cn";
    Share_lmxg_Ad.getAdPostion = "/v1.1/api/getAdPosition.html"; //获取广告位列表
    Share_lmxg_Ad.getAdv = "/v1.1/api/getAdv.html"; //获取第三方广告列表
    Share_lmxg_Ad.userClick = "/v1.1/api/userclick.html"; //用户点击上报
    Share_lmxg_Ad.LoopAdLocationID = 172;
    Share_lmxg_Ad.BannerAdLocationID = 174;
    Share_lmxg_Ad.InsertAdLocationID = 173;
    Share_lmxg_Ad.AniAdLocationID = 175;
    Share_lmxg_Ad.UseRandomAdPos = false;
    Share_lmxg_Ad.AdLocationids = [
        172, 173
    ];
    Share_lmxg_Ad._adPosition = {};
    Share_lmxg_Ad._adv = {};
    Share_lmxg_Ad._iphoneIgnoreAppIds = [
        "wx887a573910b69793",
        "wx9540f9021d5f809d",
        "wxeb93c1298ec7c62b",
        "wxe372a630ec9ebe44",
        "wx2d2acce3c45f4ddf",
        "wx8e142a9ae9318118"
    ];
    return Share_lmxg_Ad;
}());
exports.default = Share_lmxg_Ad;
},{"../ALD":1,"../AppConfig":2,"../Config/AppSwitchConfig":4,"../Event/EventDef":5,"../Event/EventMgr":6,"../Net/HttpUnit":26,"../User/User":40,"../Utilit":41,"../WXAPI":54}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var WXAPI_1 = require("../../WXAPI");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var OPPOAPI_1 = require("../../OPPOAPI");
var Banner_lmxg_AdView = /** @class */ (function (_super) {
    __extends(Banner_lmxg_AdView, _super);
    function Banner_lmxg_AdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPosID = ShareAd_1.default.BannerAdLocationID;
        _this._data = null;
        _this._wxBanner = null;
        return _this;
    }
    Banner_lmxg_AdView.prototype.onAwake = function () {
        this._displaySp = this.owner.getChildByName("Display");
        if (null == this._displaySp) {
            this._displaySp = this.owner;
        }
    };
    Banner_lmxg_AdView.prototype.onEnable = function () {
        this._displaySp.on(Laya.Event.CLICK, this, this.on_lmxg_SpClick);
        var banner = AppSwitchConfig_1.default.getInstance().getAppSwitchData().banner;
        if (0 == banner) {
            this.refresh_lmxg_BannerDis();
        }
        else if (1 == banner) {
            this.refreshWX_lmxg_Banner();
        }
    };
    Banner_lmxg_AdView.prototype.onDisable = function () {
        this._displaySp.off(Laya.Event.CLICK, this, this.on_lmxg_SpClick);
        this.clear_lmxg_WXBaner();
    };
    Banner_lmxg_AdView.prototype.refresh_lmxg_BannerDis = function () {
        var self = this;
        ShareAd_1.default.get_lmxg_ADVs(this.AdPosID, function (datas) {
            if (datas && datas.length > 0) {
                var data = datas[Math.floor(Math.random() * datas.length)];
                self._displaySp.loadImage(data.logo, Laya.Handler.create(self, function () {
                    if (!self._displaySp.destroyed) {
                        self._displaySp.width = 750;
                        self._displaySp.height = 256;
                    }
                }));
                self._data = data;
            }
        }, false);
    };
    Banner_lmxg_AdView.prototype.on_lmxg_SpClick = function () {
        var data = this._data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_lmxg_UserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_lmxg_UserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    Banner_lmxg_AdView.prototype.refreshWX_lmxg_Banner = function () {
        if (!Laya.Browser.onMiniGame || !this.owner.visible)
            return;
        this.clear_lmxg_WXBaner();
        var self = this;
        var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
        var sw = sysInfo.screenWidth;
        var sh = sysInfo.screenHeight;
        var pos = this._displaySp.localToGlobal(new Laya.Point(0, 0));
        var left = pos.x / Laya.stage.width * sw;
        var top = pos.y / Laya.stage.height * sh;
        var width = this.WXBannerWidth ? this.WXBannerWidth / Laya.stage.width * sw : sw;
        this._wxBanner = Laya.Browser.window["wx"].createBannerAd({
            adUnitId: WXAPI_1.default.bannerAdUnitId,
            adIntervals: 30,
            style: {
                left: left,
                top: top,
                width: width,
            }
        });
        self._wxBanner.onLoad(function (res) {
            console.log("WXBanner广告 加载完成");
            console.log(res);
        });
        this._wxBanner.onError(function (err) {
            console.log("WXBanner广告 加载失败");
            console.log(err);
            self.refresh_lmxg_BannerDis();
            self.clear_lmxg_WXBaner();
        });
        this._wxBanner.onResize(function (res) {
            console.log(self._wxBanner.style.realWidth, self._wxBanner.style.realHeight);
        });
        self._wxBanner.show();
    };
    Banner_lmxg_AdView.prototype.clear_lmxg_WXBaner = function () {
        if (this._wxBanner) {
            this._wxBanner.destroy();
        }
        this._wxBanner = null;
    };
    return Banner_lmxg_AdView;
}(Laya.Script));
exports.default = Banner_lmxg_AdView;
},{"../../ALD":1,"../../Config/AppSwitchConfig":4,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../OPPOAPI":29,"../../WXAPI":54,"../ShareAd":30}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var LoopAdBox_1 = require("./LoopAdBox");
var CrazyLoopAdView = /** @class */ (function (_super) {
    __extends(CrazyLoopAdView, _super);
    function CrazyLoopAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPosID = 173;
        _this._scrollForward = true;
        return _this;
    }
    CrazyLoopAdView.prototype.onAwake = function () {
        this._list = this.owner.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.on_lmxg_ListRender, null, false);
        this._list.vScrollBarSkin = "";
    };
    CrazyLoopAdView.prototype.onEnable = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.get_lmxg_ADVs(this.AdPosID, function (datas) {
            if (self.owner && !_this.owner.destroyed) {
                if (datas && datas.length > 0 && datas.length < 50) {
                    _this.owner.visible = true;
                    var temp = [];
                    var counter = 0;
                    //var randomIndex = Math.floor(Math.random()*datas.length);
                    //counter=randomIndex;
                    for (var i = 0; i < datas.length; ++i) {
                        if (counter >= datas.length) {
                            counter = 0;
                        }
                        temp.push(datas[counter]);
                        ++counter;
                    }
                    var groupLen = datas.length;
                    // for (var i = 0; i < temp.length; ++i) 
                    // {
                    //     var group = Math.floor(i / groupLen);
                    //     var startIndex = group * groupLen;
                    //     var randomIndex = Math.floor(Math.random() * groupLen) + startIndex;
                    //     var curValue = temp[i];
                    //     var randomValue = temp[randomIndex];
                    //     temp[randomIndex] = curValue;
                    //     temp[i] = randomValue;
                    // }
                    _this._list.array = temp;
                }
                else {
                    _this._list.array = datas;
                    _this.owner.visible = false;
                }
            }
        }, null, false);
    };
    CrazyLoopAdView.prototype.onDisable = function () {
    };
    CrazyLoopAdView.prototype.onUpdate = function () {
        if (this._scrollForward) {
            this._list.scrollBar.value += 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value >= this._list.scrollBar.max) {
                this._scrollForward = false;
            }
        }
        else {
            this._list.scrollBar.value -= 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value <= 0) {
                this._scrollForward = true;
            }
        }
    };
    CrazyLoopAdView.prototype.on_lmxg_ListRender = function (cell, index) {
        var data = this._list.array[index];
        var loopAdBox = cell.getComponent(LoopAdBox_1.default);
        loopAdBox.set_lmxg_Data(data);
    };
    return CrazyLoopAdView;
}(Laya.Script));
exports.default = CrazyLoopAdView;
},{"../ShareAd":30,"./LoopAdBox":34}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var LoopAdBox_1 = require("./LoopAdBox");
var Horizontal_lmxg_LoopAdView = /** @class */ (function (_super) {
    __extends(Horizontal_lmxg_LoopAdView, _super);
    function Horizontal_lmxg_LoopAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPosID = ShareAd_1.default.LoopAdLocationID;
        _this._scrollForward = true;
        return _this;
    }
    Horizontal_lmxg_LoopAdView.prototype.onAwake = function () {
        this._list = this.owner.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._list.hScrollBarSkin = "";
    };
    Horizontal_lmxg_LoopAdView.prototype.onEnable = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.get_lmxg_ADVs(this.AdPosID, function (datas) {
            if (self.owner && !self.owner.destroyed) {
                if (datas && datas.length > 0 && datas.length < 50) {
                    var temp = [];
                    var counter = 0;
                    var randomIndex = Math.floor(Math.random() * datas.length);
                    counter = randomIndex;
                    for (var i = 0; i < 50; ++i) {
                        if (counter >= datas.length) {
                            counter = 0;
                        }
                        temp.push(datas[counter]);
                        ++counter;
                    }
                    var groupLen = datas.length;
                    // for (var i = 0; i < temp.length; ++i) 
                    // {
                    //     var group = Math.floor(i / groupLen);
                    //     var startIndex = group * groupLen;
                    //     var randomIndex = Math.floor(Math.random() * groupLen) + startIndex;
                    //     var curValue = temp[i];
                    //     var randomValue = temp[randomIndex];
                    //     temp[randomIndex] = curValue;
                    //     temp[i] = randomValue;
                    // }
                    _this._list.array = temp;
                }
                else {
                    _this._list.array = datas;
                }
            }
        });
    };
    Horizontal_lmxg_LoopAdView.prototype.onDisable = function () {
    };
    Horizontal_lmxg_LoopAdView.prototype.onUpdate = function () {
        if (this._scrollForward) {
            this._list.scrollBar.value += 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value >= this._list.scrollBar.max) {
                this._scrollForward = false;
            }
        }
        else {
            this._list.scrollBar.value -= 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value <= 0) {
                this._scrollForward = true;
            }
        }
    };
    Horizontal_lmxg_LoopAdView.prototype.onListRender = function (cell, index) {
        var data = this._list.array[index];
        var loopAdBox = cell.getComponent(LoopAdBox_1.default);
        loopAdBox.set_lmxg_Data(data);
    };
    return Horizontal_lmxg_LoopAdView;
}(Laya.Script));
exports.default = Horizontal_lmxg_LoopAdView;
},{"../ShareAd":30,"./LoopAdBox":34}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI_1 = require("../../WXAPI");
var ShareAd_1 = require("../ShareAd");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var Loop_lmxg_AdBox = /** @class */ (function (_super) {
    __extends(Loop_lmxg_AdBox, _super);
    function Loop_lmxg_AdBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._data = null;
        _this._originW = 150;
        _this._originH = 150;
        _this._fontSize = 25;
        return _this;
    }
    Loop_lmxg_AdBox.prototype.onAwake = function () {
        this._display_lmxg_Sp = this.owner.getChildByName("Display");
        this._originW = this._display_lmxg_Sp.width;
        this._originH = this._display_lmxg_Sp.height;
        this._dis_lmxg_Text = this.owner.getChildByName("TitelText");
        this._dis_lmxg_Text.text = "";
        this._fontSize = this._dis_lmxg_Text.fontSize;
    };
    Loop_lmxg_AdBox.prototype.onEnable = function () {
        this._display_lmxg_Sp.on(Laya.Event.CLICK, this, this.on_lmxg_SpClick);
    };
    Loop_lmxg_AdBox.prototype.onDisable = function () {
        this._display_lmxg_Sp.off(Laya.Event.CLICK, this, this.on_lmxg_SpClick);
    };
    Loop_lmxg_AdBox.prototype.set_lmxg_Data = function (data) {
        if (data) {
            var self = this;
            this._display_lmxg_Sp.loadImage(data.logo, Laya.Handler.create(this, function () {
                if (!self._display_lmxg_Sp.destroyed) {
                    self._display_lmxg_Sp.width = self._originW;
                    self._display_lmxg_Sp.height = self._originH;
                }
            }));
            var str = String(data.title);
            var num = str.length;
            num = Math.max(5, num);
            //var fontSize = Math.floor((5 / num) * this._fontSize);
            this._dis_lmxg_Text.fontSize = 20; // fontSize;
            this._dis_lmxg_Text.text = str;
            this._data = data;
        }
    };
    Loop_lmxg_AdBox.prototype.on_lmxg_SpClick = function () {
        var data = this._data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_lmxg_UserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_lmxg_UserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    return Loop_lmxg_AdBox;
}(Laya.Script));
exports.default = Loop_lmxg_AdBox;
},{"../../ALD":1,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../OPPOAPI":29,"../../WXAPI":54,"../ShareAd":30}],35:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var LoopAdBox_1 = require("./LoopAdBox");
var Loop_lmxg_AdView = /** @class */ (function (_super) {
    __extends(Loop_lmxg_AdView, _super);
    function Loop_lmxg_AdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPos_lmxg_ID = ShareAd_1.default.LoopAdLocationID;
        _this._scrollForward = true;
        return _this;
    }
    Loop_lmxg_AdView.prototype.onAwake = function () {
        this._list = this.owner.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.on_lmxg_ListRender, null, false);
        this._list.vScrollBarSkin = "";
    };
    Loop_lmxg_AdView.prototype.onEnable = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.get_lmxg_ADVs(this.AdPos_lmxg_ID, function (datas) {
            if (self.owner && !_this.owner.destroyed) {
                if (datas && datas.length > 0 && datas.length < 50) {
                    _this.owner.visible = true;
                    var temp = [];
                    var counter = 0;
                    //
                    var randomIndex = Math.floor(Math.random() * datas.length);
                    counter = randomIndex;
                    for (var i = 0; i < 50; ++i) {
                        if (counter >= datas.length) {
                            counter = 0;
                        }
                        temp.push(datas[counter]);
                        ++counter;
                    }
                    var groupLen = datas.length;
                    // for (var i = 0; i < temp.length; ++i) 
                    // {
                    //     var group = Math.floor(i / groupLen);
                    //     var startIndex = group * groupLen;
                    //     var randomIndex = Math.floor(Math.random() * groupLen) + startIndex;
                    //     var curValue = temp[i];
                    //     var randomValue = temp[randomIndex];
                    //     temp[randomIndex] = curValue;
                    //     temp[i] = randomValue;
                    // }
                    _this._list.array = temp;
                }
                else {
                    _this._list.array = datas;
                    _this.owner.visible = false;
                }
            }
        });
    };
    Loop_lmxg_AdView.prototype.onDisable = function () {
    };
    Loop_lmxg_AdView.prototype.onUpdate = function () {
        if (this._scrollForward) {
            this._list.scrollBar.value += 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value >= this._list.scrollBar.max) {
                this._scrollForward = false;
            }
        }
        else {
            this._list.scrollBar.value -= 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value <= 0) {
                this._scrollForward = true;
            }
        }
    };
    Loop_lmxg_AdView.prototype.on_lmxg_ListRender = function (cell, index) {
        var data = this._list.array[index];
        var loopAdBox = cell.getComponent(LoopAdBox_1.default);
        loopAdBox.set_lmxg_Data(data);
    };
    return Loop_lmxg_AdView;
}(Laya.Script));
exports.default = Loop_lmxg_AdView;
},{"../ShareAd":30,"./LoopAdBox":34}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LoopAdView_1 = require("./LoopAdView");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var Pop_lmxg_AdView = /** @class */ (function (_super) {
    __extends(Pop_lmxg_AdView, _super);
    function Pop_lmxg_AdView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Pop_lmxg_AdView.prototype.onAwake = function () {
        this._bg = this.owner.getChildByName("BG");
        this._pop_lmxg_Btn = this._bg.getChildByName("PopADBtn");
        this._outimg = this._pop_lmxg_Btn.getChildByName("outimg");
        this._intimg = this._pop_lmxg_Btn.getChildByName("PopIn");
        this._loopAd = this._bg.getChildByName("LoopAD").getComponent(LoopAdView_1.default);
        this._loopAd.AdPos_lmxg_ID = 44;
        this._intimg.visible = false;
    };
    Pop_lmxg_AdView.prototype.onEnable = function () {
        this._pop_lmxg_Btn.on(Laya.Event.CLICK, this, this.on_lmxg_PopBtnClick);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.AD_OnShareAdFail, this, this.on_lmxg_ShareAdFail);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.ReturnBanner, this, this.oncebianclick);
    };
    Pop_lmxg_AdView.prototype.onDisable = function () {
        this._pop_lmxg_Btn.off(Laya.Event.CLICK, this, this.on_lmxg_PopBtnClick);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.AD_OnShareAdFail, this, this.on_lmxg_ShareAdFail);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.ReturnBanner, this, this.oncebianclick);
    };
    Pop_lmxg_AdView.prototype.oncebianclick = function () {
        // EventMgr.instance.dispatch(EventDef.AD_OnShareAdFail);
        //Laya.timer.once(800,this,function(){
        this.on_lmxg_PopBtnClick();
        //EventMgr.instance.dispatch(EventDef.Bannle,1);
        //});
    };
    Pop_lmxg_AdView.prototype.on_lmxg_PopBtnClick = function () {
        if (this._bg.x > 0) {
            this.pop_lmxg_Down();
        }
        else {
            this.pop_lmxg_Up();
        }
    };
    Pop_lmxg_AdView.prototype.pop_lmxg_Down = function () {
        this._outimg.visible = true;
        this._intimg.visible = false;
        Laya.Tween.to(this._bg, { x: 0 }, 250, Laya.Ease.circIn, Laya.Handler.create(this, function () {
        }), null, true);
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Bannle, 0);
    };
    Pop_lmxg_AdView.prototype.pop_lmxg_Up = function () {
        this._outimg.visible = false;
        this._intimg.visible = true;
        Laya.Tween.to(this._bg, { x: this._bg.width }, 250, Laya.Ease.circIn, Laya.Handler.create(this, function () {
        }), null, true);
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Bannle, 1);
    };
    Pop_lmxg_AdView.prototype.on_lmxg_ShareAdFail = function () {
        this.pop_lmxg_Up();
    };
    return Pop_lmxg_AdView;
}(Laya.Script));
exports.default = Pop_lmxg_AdView;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"./LoopAdView":35}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var WXAPI_1 = require("../../WXAPI");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var Single_lmxg_AdView = /** @class */ (function (_super) {
    __extends(Single_lmxg_AdView, _super);
    function Single_lmxg_AdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPos_lmxg_ID = ShareAd_1.default.LoopAdLocationID;
        _this._ani_lmxg_Forward = false;
        _this._data = null;
        _this._fontSize = 25;
        _this._origin_lmxg_Size = 1;
        _this._originW = 150;
        _this._originH = 150;
        return _this;
    }
    Single_lmxg_AdView.prototype.onAwake = function () {
        this._owner_lmxg_Sprite = this.owner;
        this._display_lmxg_Sp = this.owner.getChildByName("Display");
        this._originW = this._display_lmxg_Sp.width;
        this._originH = this._display_lmxg_Sp.height;
        this._dis_lmxg_Text = this.owner.getChildByName("TitelText");
        this._dis_lmxg_Text.text = "";
        this._fontSize = this._dis_lmxg_Text.fontSize;
        this._origin_lmxg_Size = this._display_lmxg_Sp.scaleX;
        this._displaySppar = this.owner;
    };
    Single_lmxg_AdView.prototype.onEnable = function () {
        this.refresh_lmxg_ADVDis();
        Laya.timer.loop(1800, this, this.refresh_lmxg_ADVDis);
        this._owner_lmxg_Sprite.on(Laya.Event.CLICK, this, this.on_lmxg_SpClick);
    };
    Single_lmxg_AdView.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
        this._owner_lmxg_Sprite.off(Laya.Event.CLICK, this, this.on_lmxg_SpClick);
    };
    Single_lmxg_AdView.prototype.refresh_lmxg_ADVDis = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.get_lmxg_ADVs(this.AdPos_lmxg_ID, function (datas) {
            if (self.owner && !self.owner.destroyed) {
                if (datas && datas.length > 0) {
                    self.owner.visible = true;
                    var data = datas[Math.floor(Math.random() * datas.length)];
                    self._display_lmxg_Sp.loadImage(data.logo, Laya.Handler.create(self, function () {
                        if (!self._display_lmxg_Sp.destroyed) {
                            self._display_lmxg_Sp.width = self._originW;
                            self._display_lmxg_Sp.height = self._originH;
                            self._display_lmxg_Sp.scale(self._origin_lmxg_Size, self._origin_lmxg_Size);
                        }
                    }));
                    var str = String(data.title);
                    var num = str.length;
                    var fontSize = Math.floor((5 / num) * _this._fontSize);
                    self._dis_lmxg_Text.fontSize = 25; //fontSize;
                    self._dis_lmxg_Text.text = str;
                    self._data = data;
                }
                else {
                    _this.owner.visible = false;
                }
            }
        });
    };
    Single_lmxg_AdView.prototype.onUpdate = function () {
        this.display_lmxg_Ani();
    };
    Single_lmxg_AdView.prototype.display_lmxg_Ani = function () {
        if (!this._ani_lmxg_Forward) {
            var scale = this._displaySppar.scaleX - Laya.timer.delta / 3000 * 1;
            scale = Math.max(scale, 0);
            this._displaySppar.scale(scale, scale);
            if (this._displaySppar.scaleX <= 0.95 * this._origin_lmxg_Size) {
                this._ani_lmxg_Forward = true;
            }
        }
        else {
            var scale = this._displaySppar.scaleX + Laya.timer.delta / 3000 * 1;
            scale = Math.min(scale, 1 * this._origin_lmxg_Size);
            this._displaySppar.scale(scale, scale);
            if (this._displaySppar.scaleX >= this._origin_lmxg_Size) {
                this._ani_lmxg_Forward = false;
            }
        }
    };
    Single_lmxg_AdView.prototype.on_lmxg_SpClick = function () {
        var data = this._data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_lmxg_UserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_lmxg_UserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    return Single_lmxg_AdView;
}(Laya.Script));
exports.default = Single_lmxg_AdView;
},{"../../ALD":1,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../OPPOAPI":29,"../../WXAPI":54,"../ShareAd":30}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var WXAPI_1 = require("../../WXAPI");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var Single_lmxg_AniADView = /** @class */ (function (_super) {
    __extends(Single_lmxg_AniADView, _super);
    function Single_lmxg_AniADView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPos_lmxg_ID = ShareAd_1.default.AniAdLocationID;
        _this._data = null;
        return _this;
    }
    Single_lmxg_AniADView.prototype.onAwake = function () {
        this._owner_lmxg_Sprite = this.owner;
        this._animation = this.owner.getChildByName("Animation");
        this.nametext = this.owner.getChildByName("nane_Text");
    };
    Single_lmxg_AniADView.prototype.onEnable = function () {
        this.refresh_lmxg_ADVDis();
        this._owner_lmxg_Sprite.on(Laya.Event.CLICK, this, this.on_lmxg_SpClick);
    };
    Single_lmxg_AniADView.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
        this._owner_lmxg_Sprite.off(Laya.Event.CLICK, this, this.on_lmxg_SpClick);
    };
    Single_lmxg_AniADView.prototype.refresh_lmxg_ADVDis = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.get_lmxg_ADVs(this.AdPos_lmxg_ID, function (datas) {
            if (datas && datas.length > 0) {
                self._owner_lmxg_Sprite.visible = true;
                var data = datas[Math.floor(Math.random() * datas.length)];
                self._animation.loadAtlas(data.atlas, Laya.Handler.create(self, function () {
                    self._animation.play(0, true);
                }));
                self._data = data;
                self.nametext.text = data.title;
                _this._animation.scaleX = 0.73;
                _this._animation.scaleY = 0.73;
            }
            else {
                self._owner_lmxg_Sprite.visible = false;
            }
        }, false);
    };
    Single_lmxg_AniADView.prototype.on_lmxg_SpClick = function () {
        var data = this._data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_lmxg_UserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_lmxg_UserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    return Single_lmxg_AniADView;
}(Laya.Script));
exports.default = Single_lmxg_AniADView;
},{"../../ALD":1,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../OPPOAPI":29,"../../WXAPI":54,"../ShareAd":30}],39:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var WXAPI_1 = require("../../WXAPI");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var OPPOAPI_1 = require("../../OPPOAPI");
var WudianBanner_lmxg_AdView = /** @class */ (function (_super) {
    __extends(WudianBanner_lmxg_AdView, _super);
    function WudianBanner_lmxg_AdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPos_lmxg_ID = ShareAd_1.default.BannerAdLocationID;
        _this._data = null;
        _this._wxBanner = null;
        return _this;
    }
    WudianBanner_lmxg_AdView.prototype.onAwake = function () {
        this._displaySp = this.owner.getChildByName("Display");
        this._displaySp.visible = false;
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.AD_WudianBanner_Show, this, this.Show_lmxg_Banner);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.AD_WudianBanner_Hide, this, this.HideBanner);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.AD_WudianBanner_PreLoad, this, this.Preload_lmxg_Banner);
    };
    WudianBanner_lmxg_AdView.prototype.onEnable = function () {
        this.Preload_lmxg_Banner();
    };
    WudianBanner_lmxg_AdView.prototype.Preload_lmxg_Banner = function () {
        if (this.owner.visible == false)
            return;
        var banner = AppSwitchConfig_1.default.getInstance().getAppSwitchData().banner;
        if (1 == banner && Laya.Browser.onMiniGame) {
            this.refreshWXBanner();
        }
        else {
            this.refreshBannerDis();
        }
    };
    WudianBanner_lmxg_AdView.prototype.Show_lmxg_Banner = function () {
        if (this.owner.visible == false)
            return;
        console.log("showBanner");
        var banner = AppSwitchConfig_1.default.getInstance().getAppSwitchData().banner;
        if (1 == banner && Laya.Browser.onMiniGame && this._wxBanner) {
            console.log("WxshowBanner");
            this._wxBanner.show();
        }
        else if (this._data != null) {
            this._displaySp.visible = true;
            this._displaySp.on(Laya.Event.CLICK, this, this.onSpClick);
        }
    };
    WudianBanner_lmxg_AdView.prototype.HideBanner = function () {
        this._displaySp.off(Laya.Event.CLICK, this, this.onSpClick);
        this._displaySp.visible = false;
        this.clearWXBaner();
    };
    WudianBanner_lmxg_AdView.prototype.onDestroy = function () {
        this.HideBanner();
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.AD_WudianBanner_Show, this, this.Show_lmxg_Banner);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.AD_WudianBanner_Hide, this, this.HideBanner);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.AD_WudianBanner_PreLoad, this, this.Preload_lmxg_Banner);
    };
    // onDisable(): void {
    //     this._displaySp.off(Laya.Event.CLICK, this, this.onSpClick);
    //     this.clearWXBaner();
    // }
    WudianBanner_lmxg_AdView.prototype.refreshBannerDis = function () {
        var self = this;
        ShareAd_1.default.get_lmxg_ADVs(this.AdPos_lmxg_ID, function (datas) {
            if (datas && datas.length > 0) {
                var data = datas[Math.floor(Math.random() * datas.length)];
                self._displaySp.loadImage(data.logo, Laya.Handler.create(self, function () {
                    if (!self._displaySp.destroyed) {
                        self._displaySp.width = 750;
                        self._displaySp.height = 256;
                        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_WudianBanner_LoadComplete);
                    }
                }));
                self._data = data;
            }
        }, false);
    };
    WudianBanner_lmxg_AdView.prototype.onSpClick = function () {
        var data = this._data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_lmxg_UserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_lmxg_UserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    WudianBanner_lmxg_AdView.prototype.refreshWXBanner = function () {
        if (!Laya.Browser.onMiniGame)
            return;
        this.clearWXBaner();
        var self = this;
        var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
        var sw = sysInfo.screenWidth;
        var sh = sysInfo.screenHeight;
        var pos = this._displaySp.localToGlobal(new Laya.Point(0, 0));
        var left = pos.x / Laya.stage.width * sw;
        var top = pos.y / Laya.stage.height * sh;
        var width = this.WXBannerWidth ? this.WXBannerWidth / Laya.stage.width * sw : sw;
        this._wxBanner = Laya.Browser.window["wx"].createBannerAd({
            adUnitId: WXAPI_1.default.bannerAdUnitId,
            adIntervals: 30,
            style: {
                left: left,
                top: top,
                width: width,
            }
        });
        self._wxBanner.onLoad(function (res) {
            console.log("误点Banner广告 加载完成");
            console.log(res);
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_WudianBanner_LoadComplete);
        });
        this._wxBanner.onError(function (err) {
            console.log("误点Banner广告 加载失败");
            console.log(err);
            self.refreshBannerDis();
            self.clearWXBaner();
        });
        this._wxBanner.onResize(function (res) {
            console.log(self._wxBanner.style.realWidth, self._wxBanner.style.realHeight);
        });
        self._wxBanner.hide();
    };
    WudianBanner_lmxg_AdView.prototype.clearWXBaner = function () {
        if (this._wxBanner) {
            this._wxBanner.destroy();
        }
        this._wxBanner = null;
    };
    return WudianBanner_lmxg_AdView;
}(Laya.Script));
exports.default = WudianBanner_lmxg_AdView;
},{"../../ALD":1,"../../Config/AppSwitchConfig":4,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../OPPOAPI":29,"../../WXAPI":54,"../ShareAd":30}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
//游戏数据,为保持版本兼容，建议不要删除和修改字段名
var UserGameData = /** @class */ (function () {
    function UserGameData() {
        if(localStorage.getItem("CS_Level")){
            this.levelNum = parseInt(localStorage.getItem("CS_Level"));
        }
        else {this.levelNum = 1; 
            localStorage.setItem("CS_Level",1);
        }//当前关卡
        if(localStorage.getItem("CS_Money")){
            this.moneyNum = parseInt(localStorage.getItem("CS_Money"));
        }
        else {this.moneyNum = 0;
            localStorage.setItem("CS_Money",0);
        } //金币数量
        this.crystalNum = 0; //钻石数量
        this.SkinkNum = 0; //当前玩家的皮肤 
        this.SkinkArrJ = "A"; //当前玩家解锁到的皮肤
    }
    return UserGameData;
}());
exports.UserGameData = UserGameData;
var User = /** @class */ (function (_super) {
    __extends(User, _super);
    function User() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    User.getSaveData = function () {
        return JSON.stringify(User._gameData);
    };
    User.testInitUser = function () {
        if(localStorage.getItem("CS_Level")){
            User._gameData.levelNum = parseInt(localStorage.getItem("CS_Level"));
        }
        else {
            this.levelNum = 1;
            localStorage.setItem("CS_Level",1);
        } //当前关卡
        if(localStorage.getItem("CS_Money")){
           User._gameData.moneyNum = parseInt(localStorage.getItem("CS_Money"));
        }
        else {this.moneyNum = 0;
            localStorage.setItem("CS_Money",0);
        }
        User._gameData.crystalNum = 10000000;
        User._gameData.SkinkNum = 0;
        User._gameData.SkinkArrJ = "A";
    };
    User.setSkinNum = function (_skinNum) {
        User._gameData.SkinkNum += _skinNum;
        if (User._gameData.SkinkNum < 0)
            User._gameData.SkinkNum = 10;
        if (User._gameData.SkinkNum > 10)
            User._gameData.SkinkNum = 0;
    };
    User.getSkinNum = function () {
        var a = User._gameData.SkinkNum;
        //console.log("当前的皮肤1111:",a);
        if (a > 10 || a < 0) {
            a = 0;
        }
        //console.log("当前的皮肤222:",a);
        return a;
    };
    //皮肤数加1
    User.setSkinArrNum = function (va) {
        User._gameData.SkinkArrJ += "," + va;
    };
    User.getSkinArrNum = function () {
        return User._gameData.SkinkArrJ;
    };
    User.initiUser = function (data) {
        if (data && 0 != data) {
            User._gameData.levelNum = data.levelNum;
            User._gameData.moneyNum = data.moneyNum;
            User._gameData.crystalNum = data.crystalNum;
            if (data.SkinkNum != null) {
                User._gameData.SkinkNum = data.SkinkNum;
            }
            else {
                User._gameData.SkinkNum = 0;
            }
            if (data.SkinkArrJ != null) {
                User._gameData.SkinkArrJ = data.SkinkArrJ;
            }
            else {
                User._gameData.SkinkArrJ = "A";
            }
        }
        else {
            //todo：处理没有获取到玩家数据的情况
        }
    };
    User.setLeveNum = function (levelNum) {
        User._gameData.levelNum += levelNum;
        localStorage.setItem("CS_Level",User._gameData.levelNum);
    };
    User.getLeveNum = function () {
        var level = 1;
        if(localStorage.getItem("CS_Level")){
            level = parseInt(localStorage.getItem("CS_Level"));
        }
        return level;
    };
    User.addMoney = function (add) {
        add = Math.ceil(add);
        var last = User._gameData.moneyNum;
        User._gameData.moneyNum += add;
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserMoneyChange, {
            curr: User._gameData.moneyNum,
            last: last
        });
        localStorage.setItem("CS_Money",User._gameData.moneyNum);
    };
    User.subMoney = function (sub) {
        sub = Math.ceil(sub);
        var last = User._gameData.moneyNum;
        User._gameData.moneyNum -= sub;
        if (User._gameData.moneyNum < 0) {
            User._gameData.moneyNum = 0;
        }
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserMoneyChange, {
            curr: User._gameData.moneyNum,
            last: last
        });
        localStorage.setItem("CS_Money",User._gameData.moneyNum);
    };
    User.getMoney = function () {
        var money = 0;
        if(localStorage.getItem("CS_Money")){
            money = parseInt(localStorage.getItem("CS_Money"));
        }
        return money;
    };
    User.addCrystal = function (add) {
        add = Math.ceil(add);
        var last = User._gameData.crystalNum;
        User._gameData.crystalNum += add;
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserCrystalChange, {
            curr: User._gameData.crystalNum,
            last: last
        });
    };
    User.subCrystal = function (sub) {
        sub = Math.ceil(sub);
        var last = User._gameData.crystalNum;
        User._gameData.crystalNum -= sub;
        if (User._gameData.crystalNum < 0) {
            User._gameData.crystalNum = 0;
        }
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserCrystalChange, {
            curr: User._gameData.crystalNum,
            last: last
        });
    };
    User.getCrystal = function () {
        return User._gameData.crystalNum;
    };
    User.code = "";
    User.openId = "";
    User.token = null;
    User.nickName = "";
    User.gender = 0;
    User.isLogin = false;
    User._gameData = new UserGameData();
    return User;
}(Laya.Script));
exports.default = User;
},{"../Event/EventDef":5,"../Event/EventMgr":6}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Utilit = /** @class */ (function () {
    function Utilit() {
    }
    Utilit.Lerp = function (form, to, delta) {
        if (form == to)
            return to;
        if (form > to) {
            var next = form - delta;
            if (next <= to)
                return to;
            return next;
        }
        else if (form < to) {
            var next = form + delta;
            if (next >= to)
                return to;
            return next;
        }
    };
    Utilit.lerpEulerAngle = function (form, to, delta) {
        var form = form % 360;
        form = form >= 0 ? form : (360 + form);
        var to = to % 360;
        to = to >= 0 ? to : (360 + to);
        var dis = Math.abs(to - form);
        if (dis > 180) {
            if (form < to)
                to = to - 360;
            else if (form > to)
                to = to + 360;
        }
        var next = Utilit.Lerp(form, to, delta);
        return next;
    };
    Utilit.getRotationByDir = function (v) {
        var dotValue = (v.x * Utilit.poinDown.x) + (v.y * Utilit.poinDown.y);
        var cos = dotValue / (v.distance(0, 0) * Utilit.poinDown.distance(0, 0));
        var radian = Math.acos(cos);
        var rotation = radian / (2 * Math.PI) * 360;
        if (v.x < 0) {
            rotation = -rotation;
        }
        return rotation;
    };
    Utilit.getRotationByDirOn3DSpace = function (v) {
        var dotValue = (v.x * Utilit.poinUp.x) + (v.y * Utilit.poinUp.y);
        var cos = dotValue / (v.distance(0, 0) * Utilit.poinUp.distance(0, 0));
        var radian = Math.acos(cos);
        var rotation = radian / (2 * Math.PI) * 360;
        if (v.x < 0) {
            rotation = rotation + (180 - rotation) * 2;
        }
        return rotation;
    };
    Utilit.getDirByRotation = function (rotation) {
        var radian = (rotation - 90) * Math.PI / 180; // -90 是转换到场景坐标系
        var x = Math.cos(radian);
        var y = Math.sin(radian);
        var point = new Laya.Point(x, y);
        point.normalize();
        return point;
    };
    Utilit.getDirDirAngle = function (dir1, dir2) {
        var dotValue = (dir1.x * dir2.x) + (dir1.y * dir2.y);
        var cos = dotValue / (dir1.distance(0, 0) * dir2.distance(0, 0));
        var radian = Math.acos(cos);
        var angle = radian / (2 * Math.PI) * 360;
        return angle;
    };
    Utilit.getDirScalarLength = function (dir) {
        var sl = Math.sqrt(dir.x * dir.x + dir.y * dir.y);
        return sl;
    };
    Utilit.setSpOnParentCenter = function (sp) {
        if (null == sp.parent)
            return;
        var psp = sp.parent;
        var x = 0;
        var y = 0;
        var x = x - sp.width / 2 * sp.scaleX + psp.width / 2;
        var y = y - sp.height / 2 * sp.scaleY + psp.height / 2;
        sp.x = x;
        sp.y = y;
    };
    Utilit.getPointToLineDistance = function (x, y, LineStart, LineEnd) {
        var toStartDir = new Laya.Point(x - LineStart.x, y - LineStart.y);
        var toEndDir = new Laya.Point(x - LineEnd.x, y - LineEnd.y);
        var lineDir = new Laya.Point(LineEnd.x - LineStart.y, LineEnd.y - LineStart.y);
        var dotToStartDir = (lineDir.x * toStartDir.x) + (lineDir.y * toStartDir.y);
        if (dotToStartDir <= 0) {
            return toStartDir.distance(0, 0);
        }
        var dotToEndDir = (lineDir.x * toEndDir.x) + (lineDir.y * toEndDir.y);
        if (dotToEndDir <= 0) {
            return toEndDir.distance(0, 0);
        }
        var toStartDis = toStartDir.distance(0, 0);
        var lineDirDis = lineDir.distance(0, 0);
        var cos = dotToStartDir / (toStartDis * lineDirDis);
        var radians = Math.acos(cos);
        var dis = Math.sin(radians) * toStartDis;
        return dis;
    };
    Utilit.isIphoneX = function () {
        if (!Laya.Browser.onIPhone)
            return false;
        if ((Laya.Browser.width == 2436 && Laya.Browser.height == 1125)
            || (Laya.Browser.height == 2436 && Laya.Browser.width == 1125)) {
            return true;
        }
        return false;
    };
    Utilit.isIphone = function () {
        return Laya.Browser.onIPhone;
    };
    Utilit.getChild = function (node, name) {
        for (var i = 0; i < node.numChildren; ++i) {
            var child = node.getChildAt(i);
            if (child.name == name) {
                return child;
            }
            else {
                var target = Utilit.getChild(child, name);
                if (target)
                    return target;
            }
        }
        return null;
    };
    Utilit.OriginStageWidth = 1334;
    Utilit.OriginStageHeight = 750;
    Utilit.grayscaleMat = [0.3086, 0.6094, 0.0820, 0, 0,
        0.3086, 0.6094, 0.0820, 0, 0,
        0.3086, 0.6094, 0.0820, 0, 0,
        0, 0, 0, 1, 0];
    Utilit.grayscaleFilter = new Laya.ColorFilter(Utilit.grayscaleMat);
    Utilit.poinDown = new Laya.Point(0, -1);
    Utilit.poinUp = new Laya.Point(0, 1);
    return Utilit;
}());
exports.default = Utilit;
},{}],42:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundMgr_1 = require("../Mgr/SoundMgr");
var Button_lmxg_Anim = /** @class */ (function (_super) {
    __extends(Button_lmxg_Anim, _super);
    function Button_lmxg_Anim() {
        var _this = _super.call(this) || this;
        _this.useSound = true;
        return _this;
    }
    Button_lmxg_Anim.prototype.onAwake = function () {
        this.owner.on(Laya.Event.MOUSE_DOWN, this, this.onDown);
        this.owner.on(Laya.Event.MOUSE_UP, this, this.onUp);
        this.owner.on(Laya.Event.MOUSE_OUT, this, this.onUp);
    };
    Button_lmxg_Anim.prototype.onDisable = function () {
        this.owner.offAll();
        Laya.Tween.clearAll(this);
    };
    Button_lmxg_Anim.prototype.onDown = function () {
        Laya.Tween.to(this.owner, { scaleX: 0.9, scaleY: 0.9 }, 50);
        if (this.useSound) {
            SoundMgr_1.default.instance.play_lmxg_Sound("anniu");
        }
    };
    Button_lmxg_Anim.prototype.onUp = function () {
        Laya.Tween.to(this.owner, { scaleX: 1, scaleY: 1 }, 50);
    };
    return Button_lmxg_Anim;
}(Laya.Script));
exports.default = Button_lmxg_Anim;
},{"../Mgr/SoundMgr":11}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var EventDef_1 = require("../../Event/EventDef");
var EventMgr_1 = require("../../Event/EventMgr");
var CachedWXBannerAd_1 = require("../../CachedWXBannerAd");
var ALD_1 = require("../../ALD");
/**
 * 狂点窗口使用范例如下
    //首先判断狂点功能开关WudianMgr.WudianFlag是否打开，如果没打开就直接跳过整个逻辑
    WudianMgr.GetIpBlockState();//在游戏里初始化的时候调用这个方法初始化Ip屏蔽flag
    //将这段代码插入需要调用狂点窗口的地方
    let data : any = {};
    //狂点逻辑完成后的回调方法
    data.Complete = function(){
        console.log("狂点按钮结束");//在这里写入狂点窗口结束后需要调用的逻辑，例如弹出结算页面
    }
    // 完成点击之后获得的奖励数量，依照各项目不同自行实现
    data.PrizeCount = 30;
    // 在调用窗口前必须关闭当前正在显示的官方Banner广告，这个窗口才能正常运行，具体的逻辑各人需自行实现
    // 而且关闭官方Banner可以稍微提早一些，避免频繁调用出错或者不稳定
    Event_PK_Mgr.instance.dispatch(Event_PK_Def.AD_CloseBanner, true);//这句代码是我用来关闭官方Banner，各项目自行实现
    ViewMgr.instance.openView(ViewDef.ClickGetPrize,data);
 *
 * @export
 * @class ClickGetPrize
 * @extends {ViewBase}
 */
var ClickGetPrize = /** @class */ (function (_super) {
    __extends(ClickGetPrize, _super);
    function ClickGetPrize() {
        var _this = _super.call(this) || this;
        _this._totalClickTimer = 22; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._needClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this._bannerClickTime = 7; //点多少次开始显示bannerr套路用户，可微调    
        return _this;
    }
    ClickGetPrize.prototype.onAwake = function () {
        this._click_Btn = this.owner.getChildByName("Click_Btn");
        this._click_Btn.on(Laya.Event.CLICK, this, this.ButtonClicked);
        this._arrow_Img = this._click_Btn.getChildByName("Arrow_Img");
        this._bg = this.owner.getChildByName("BG");
        this._open_Btn = this._bg.getChildByName("Open_Btn");
        this._getPrize_View = this.owner.getChildByName("GetPrize_View");
        this._prizeCount_Text = this._getPrize_View.getChildByName("PrizeCount_Text");
        this._confirm_Btn = this._getPrize_View.getChildByName("Confirm_Btn");
        this._getPrize_View.visible = false;
        this._clickTime_PBar = this._bg.getChildByName("ClickTime_PBar");
        this._clickTime_PBar$Bar = this._clickTime_PBar.getChildByName("ClickTime_PBar$Bar");
        this._clickBarOriginalWidth = this._clickTime_PBar$Bar.width;
        this._bannerAd_View = this.owner.getChildByName("BannerAd_View");
        this._clickTime_PBar$Bar.width = 0;
        this._clickTime = 0;
        this._totalClickTime = 0;
        //EventMgr.instance.regOnceEvent(EventDef.AD_WudianBanner_LoadComplete, this, this.WudianLoadComplete);
        this.timer = Date.now();
        this.isbannertrue = false;
    };
    ClickGetPrize.prototype.onUpdate = function () {
        /* 箭头上下移动 */
        if (this._arrowUp) {
            this._arrow_Img.top += Laya.timer.delta / 5;
            if (this._arrow_Img.top > -140) {
                this._arrowUp = false;
            }
        }
        else {
            this._arrow_Img.top -= Laya.timer.delta / 5;
            if (this._arrow_Img.top < -180) {
                this._arrowUp = true;
            }
        }
        /* 按钮不按，进度条自动退回 */
        if (!this._bannerClicked) {
            var spd = 2 + (this._clickTime_PBar$Bar.width / this._clickBarOriginalWidth) * 6;
            if (this._clickTime_PBar$Bar.width >= spd) {
                this._clickTime_PBar$Bar.width -= spd;
            }
            if ((this._clickTime_PBar$Bar.width / this._clickBarOriginalWidth) + 0.1 < (this._clickTime / this._needClickTime)) {
                this._clickTime--;
            }
        }
        //console.log("this._clickTime_PBar$Bar.width---:",this._clickTime_PBar$Bar. visible);
        // else {
        //     if (this._clickTime_PBar$Bar.width <= this._clickBarOriginalWidth) {
        //         this._clickTime_PBar$Bar.width += 2;
        //         if (this._clickTime_PBar$Bar.width > this._clickBarOriginalWidth) {
        //             this._clickTime_PBar$Bar.width = this._clickBarOriginalWidth
        //         }
        //     }
        // }
    };
    /**
     * 打开Banner
     *
     * @param {*} [data]
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.openView = function (data) {
        this._compeletFunction = data.Complete;
        this._prizeCount = data.PrizeCount;
        _super.prototype.openView.call(this, data);
    };
    /**
     * 用户成功获得奖励
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.OpenPrizeWindow = function () {
        this._bg.visible = false;
        var self = this;
        this._prizeCount_Text.text = this._prizeCount.toString();
        this._getPrize_View.visible = true;
        /* 确认按钮 */
        this._confirm_Btn.once(Laya.Event.CLICK, this, function () {
            if (self._compeletFunction) {
                self._compeletFunction();
            }
            self.closeView();
        });
    };
    /**
     * 误点预加载完成
     *
     * @memberof ClickGetPrize
     */
    // WudianLoadComplete() {
    //     console.log("WudianBanner预加载完毕");
    //     this._wudianLoadFlag = true;
    // }
    /**
     * 将Banner显示
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.ShowBanner = function () {
        //console.log("AD_WudianBanner_Show");
        if (this.isbannertrue == false) {
            CachedWXBannerAd_1.default.show();
            console.log("误点显示banner广告");
            this.isbannertrue = true;
        }
    };
    /**
     * 狂点按钮逻辑
     *
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.ButtonClicked = function () {
        this._clickTime++;
        this._totalClickTime++;
        //nanner一直没加载成功,保持进度条
        if (this._clickTime > this._needClickTime) {
            this._clickTime = this._needClickTime;
        }
        if (this._clickTime >= this._bannerClickTime /*&& this._wudianLoadFlag*/) {
            if (this._clickTime >= this._needClickTime) {
                this._clickTime = this._needClickTime - 1;
            }
            this._bannerClicked = true;
            console.log("误点Banner套路启动");
            //用户连点，出banner
            this.ShowBanner();
            Laya.timer.once(2000, this, function () {
                this.BannerClicked();
            });
        }
        //用户一直没被套路到，让他继续玩
        else if (this._totalClickTime > this._totalClickTimer) {
            console.log("用户一直没点到，放他一马", this._totalClickTime);
            this.BannerClicked();
        }
        var progress = (this._clickTime / this._needClickTime) * this._clickBarOriginalWidth;
        this._clickTime_PBar$Bar.width = progress;
    };
    /**
     * Banner已经点击之后，让用户获得奖励
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.BannerClicked = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_WudianBanner_Hide);
        this._bannerClicked = true;
        this._clickTime = this._needClickTime;
        this._clickTime_PBar$Bar.width = this._clickBarOriginalWidth;
        this._click_Btn.visible = false;
        this._open_Btn.visible = true;
        // this._bannerAd_View.visible = false;
        // this._bannerAd_View.active = false;
        this.OpenPrizeWindow();
    };
    ClickGetPrize.prototype.onDestroy = function () {
        _super.prototype.onDestroy.call(this);
        CachedWXBannerAd_1.default.hide();
        this.timer = Date.now() - this.timer;
        ALD_1.default.aldSendOnlySingleReport(ALD_1.ALDEventDef.StayComplateClickGetPrizeTime, this.timer);
    };
    return ClickGetPrize;
}(ViewBase_1.default));
exports.default = ClickGetPrize;
},{"../../ALD":1,"../../CachedWXBannerAd":3,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../View/ViewBase":53}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BannerAdView_1 = require("../../ShareAd/View/BannerAdView");
var CachedWXBannerAd_1 = require("../../CachedWXBannerAd");
var UniversalBottomZone = /** @class */ (function (_super) {
    __extends(UniversalBottomZone, _super);
    function UniversalBottomZone() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UniversalBottomZone.prototype.onAwake = function () {
        this._ownerSprite = this.owner;
        this._autoZone = this._ownerSprite.getChildByName("AutoZone");
        this._loopADZone = this._ownerSprite.getChildByName("LoopAD");
        this._bannerADZone = this._ownerSprite.getChildByName("BannerAD");
        this._bannerAd = this._bannerADZone.getComponent(BannerAdView_1.default);
        this._bannerADZone.visible = false;
    };
    UniversalBottomZone.prototype.onEnable = function () {
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            this._autoZone.bottom = this._loopADZone.height + 60 + this._bannerADZone.height;
            this._loopADZone.bottom = this._bannerADZone.height + 50;
            this._bannerADZone.visible = true;
            //CachedWXBannerAd.show();
        }
        else {
            this._loopADZone.bottom = 0;
            //this._autoZone.bottom =0;
            this._bannerADZone.visible = false;
        }
    };
    UniversalBottomZone.prototype.onDisable = function () {
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            CachedWXBannerAd_1.default.hide();
        }
    };
    return UniversalBottomZone;
}(Laya.Script));
exports.default = UniversalBottomZone;
},{"../../CachedWXBannerAd":3,"../../ShareAd/View/BannerAdView":31}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var MyGameManger_1 = require("../../MyScripts/MyGameManger");
var ViewMgr_2 = require("../../Mgr/ViewMgr");
var ALD_1 = require("../../ALD");
var GameMgr_1 = require("../../Mgr/GameMgr");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var CrazyMoreGame = /** @class */ (function (_super) {
    __extends(CrazyMoreGame, _super);
    function CrazyMoreGame() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._returnMain = null;
        _this._MoreGameReturn_Btn = null;
        _this._Bg = null;
        _this.gogame = null;
        _this.banle = null;
        return _this;
    }
    ; //控制bannle广告的父节点
    CrazyMoreGame.prototype.onAwake = function () {
        this._MoreGameReturn_Btn = this.owner.getChildByName("MoreGameReturn_Btn");
        //this._Bg= this.owner.getChildByName("Bg") as Laya.Sprite;
        this.gogame = this.owner.getChildByName("gogeme");
        this.gogame.visible = false;
        //this._returnMain.visible=false;
        //this._MoreGameReturn_Btn.visible=false;
        // let interstitialAd = null // 创建插屏广告实例，提前初始化 
        // if (wx.createInterstitialAd){ 
        //     interstitialAd = WXAPI.createInterstitialAd({
        //          adUnitId: 'adunit-8fc8d6caecc46344' }) } // 在适合的场景显示插屏广告 
        // if (interstitialAd) { interstitialAd.show().catch((err) => { console.error(err) }) }
        //this.banle=this.owner.getChildByName("banle") as Laya.Clip;
        //this.banle.visible=false;
        this._MoreGameReturn_Btn.visible = false;
        this.banlebool = false;
        var self = this;
        Laya.timer.once(400, this, function () {
            if (self._data.isbtnshow == true) {
                var timera = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnDelayTime - 0.4;
                if (timera < 0) {
                    timera = 0;
                }
                Laya.timer.once(timera * 1000, this, function () {
                    self.gogame.visible = true;
                    var wei = Laya.stage.height * 0.75;
                    self.gogame.y = wei;
                });
                ALD_1.default.aldSendOnlySingleReport(ALD_1.ALDEventDef.EnterGameOverMoreGame);
            }
            else {
                self._MoreGameReturn_Btn.visible = true;
            }
        });
    };
    CrazyMoreGame.prototype.addEvent = function () {
        this._MoreGameReturn_Btn.on(Laya.Event.CLICK, this, this.onReturnMainClick);
        this.gogame.on(Laya.Event.CLICK, this, this.ongogameClick);
        //Event_bzxn_Mgr.instance.regEvemt(EventDef.Bannle, this, this.onShowBannler);//注册点击事件
    };
    CrazyMoreGame.prototype.remove_bzxn_Event = function () {
        //this._MoreGameReturn_Btn.off(Laya.Event.CLICK,this,this.onReturnMainClick);
        //this._MoreGameReturn_Btn.off(Laya.Event.CLICK,this,this.onMoreGameReturnClick);
        this.gogame.off(Laya.Event.CLICK, this, this.ongogameClick);
        //Event_bzxn_Mgr.instance.removeEvent(EventDef.Bannle, this, this.onShowBannler);//注册点击事件
    };
    /**
     * 返回主界面
     */
    CrazyMoreGame.prototype.onReturnMainClick = function () {
        ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.CrazyMoreGame);
        ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.MyHomePage);
        //let appSwitchData = AppSwitchConfig.getInstance().getAppSwitchData();
        //ShareAd.RandomJump(appSwitchData.cancelAd);
    };
    /**
     * 继续游
     */
    CrazyMoreGame.prototype.ongogameClick = function () {
        this.gogame.visible = false;
        MyGameManger_1.default.GetInstance().OnlodeScene(function () {
            ViewMgr_2.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.CrazyMoreGame);
                ViewMgr_2.default.instance.openView(ViewMgr_1.View_lmxg_Def.GameOverView);
        });
        //this.GoDaQuan();
    };
    /**
   * 显示bannle广告
   */
    CrazyMoreGame.prototype.onShowBannler = function () {
        console.log("显示广告");
        if (this.banlebool == false) {
            this.banle.visible = true;
            this.banlebool = true;
        }
        else {
            this.banle.visible = false;
            this.banlebool = false;
        }
    };
    return CrazyMoreGame;
}(ViewBase_1.default));
exports.default = CrazyMoreGame;
},{"../../ALD":1,"../../Config/AppSwitchConfig":4,"../../Mgr/GameMgr":10,"../../Mgr/ViewMgr":13,"../../MyScripts/MyGameManger":22,"../ViewBase":53}],46:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var User_1 = require("../../User/User");
var MyGameManger_1 = require("../../MyScripts/MyGameManger");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var GameMgr_1 = require("../../Mgr/GameMgr");
var CachedWXBannerAd_1 = require("../../CachedWXBannerAd");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var WXAPI_1 = require("../../WXAPI");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var ALD_1 = require("../../ALD");
var GameOverView = /** @class */ (function (_super) {
    __extends(GameOverView, _super);
    function GameOverView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._morebtn = null;
        _this._next = null;
        _this._onceagain = null;
        _this._win = null;
        _this._lose = null;
        _this._zon = null;
        return _this;
        // /**
        //  * 显示bannle广告
        //  */
        // onShowBannler() {
        //     console.log("显示广告");
        //     if (this.banlebool == false) {
        //         this.banle.visible = true;
        //         this.banlebool = true;
        //     }
        //     else {
        //         this.banle.visible = false;
        //         this.banlebool = false;
        //     }
        // }
    }
    GameOverView.prototype.onAwake = function () {
        this._zon = this.owner.getChildByName("zon");
        this.sangetbtn = this.owner.getChildByName("sanGetbtn");
        if (GameMgr_1.default.winfalag) {
            this.sangetbtn.visible = true;
        }
        else{
            this.sangetbtn.visible = false;
        }
        this.shipinimg = this.sangetbtn.getChildByName("ship");
        this._morebtn = this.owner.getChildByName("zon").getChildByName("morebtn");
        this._next = this.owner.getChildByName("zon").getChildByName("next");
        this._onceagain = this.owner.getChildByName("zon").getChildByName("onceagain");
        this._win = this.owner.getChildByName("win");
        this._lose = this.owner.getChildByName("lose");
        this._lose.visible = false;
        this._next.visible = false;
        this._win.visible = false;
        this._onceagain.visible = false;
        Laya.timer.once(200, this, this.ShowBtn);
        this.isbanl = false;
        this.ifbanf = false;
        var appSwitchData = AppSwitchConfig_1.default.getInstance().getAppSwitchData();
        ShareAd_1.default.Random_lmxg_Jump(appSwitchData.cancelAd);
        this._bannerADZone = this.owner.getChildByName("BannerAD");
        if (WudianMgr_1.default.WudianFlag) {
            this._bannerADZone.visible = false;
            this._zon.bottom = 50;
        }
    };
    // onEnable(){
    //     super.onEnable();
    //     console.log("CHUFA:"+this._data);
    //     this.ShowBtn();
    // }
    GameOverView.prototype.ShowBtn = function () {
        if (GameMgr_1.default.winfalag == true) {
            this._win.visible = true;
            //this._lose.visible=false;
            //this._morebtn.visible=false;
            this._next.visible = true;
        }
        else {
            //this._win.visible=false;
            this._lose.visible = true;
            this._onceagain.visible = true;
            //this._next.visible=false;
        }
    };
    GameOverView.prototype.addEvent = function () {
        this._morebtn.on(Laya.Event.CLICK, this, this.onMoreBtn);
        this._next.on(Laya.Event.CLICK, this, this.onNextBtn);
        this._onceagain.on(Laya.Event.CLICK, this, this.onOnceagain);
        this.sangetbtn.on(Laya.Event.CLICK, this, this.onSanGetClick);
    };
    GameOverView.prototype.removeEvent = function () {
        this._morebtn.off(Laya.Event.CLICK, this, this.onMoreBtn);
        this._next.off(Laya.Event.CLICK, this, this.onNextBtn);
        this._onceagain.off(Laya.Event.CLICK, this, this.onOnceagain);
        this.sangetbtn.off(Laya.Event.CLICK, this, this.onSanGetClick);
        if (WudianMgr_1.default.WudianFlag) {
            CachedWXBannerAd_1.default.hide();
        }
    };
    GameOverView.prototype.onSanGetClick = function () {
        var _this = this;
        this.sangetbtn.visible = false;
        sessionStorage.setItem("moneytoadd",(parseInt(sessionStorage.getItem("moneytoadd")) * 3));
    };
    GameOverView.prototype.onMoreBtn = function () {
        User_1.default.addMoney(parseInt(sessionStorage.getItem("moneytoadd")));
        if (this.onbtnCLick() == true || this.ifbanf == true)
            return;
        this._morebtn.visible = false;
        this._onceagain.visible = false;
        this._next.visible = false;
        var data = {};
        data.isbtnshow = false;
        ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.NewLoadingView);
        ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.GetInterface);
        ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.GameOverView);
        MyGameManger_1.default.GetInstance().OnlodeScene(function () {
            ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.NewLoadingView);
            ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.MyHomePage);
        });
        // console.log("游戏状态：" + MyGameManger_1.default.state);
         // MyGameManger_1.default.state = MyGameManger_1.StateEnum.weikaiju;
         // EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ReturnBanner);
    };
    GameOverView.prototype.onNextBtn = function () {
        User_1.default.addMoney(parseInt(sessionStorage.getItem("moneytoadd")));
        if (this.onbtnCLick() == true || this.ifbanf == true)
            return;
        this._next.visible = false;
        this._morebtn.visible = false;
        // View_lmxg_Mgr.instance.close_lmxg_View(View_lmxg_Def.GameOverView);
        // View_lmxg_Mgr.instance.openView(View_lmxg_Def.GameView);
        // MyGameManger.state = StateEnum.Game;
        // EventMgr.instance.dispatch(EventDef.isstart);//开启人物移动
        this.GoDaQuan();
    };
    GameOverView.prototype.onOnceagain = function () {
        if (this.onbtnCLick() == true || this.ifbanf == true)
            return;
        this._onceagain.visible = false;
        this._morebtn.visible = false;
        GameMgr_1.default.getInstance().saveGameData(); //游戏存档
        // View_lmxg_Mgr.instance.close_lmxg_View(View_lmxg_Def.GameOverView);
        // View_lmxg_Mgr.instance.openView(View_lmxg_Def.GameView);
        // MyGameManger.state = StateEnum.Game;
        // EventMgr.instance.dispatch(EventDef.isstart);//开启人物移动
        this.GoDaQuan();
    };
    GameOverView.prototype.onbtnCLick = function () {
        //let mainSwitch = AppSwitchConfig.getInstance().getAppSwitchData().wudian == 1;
        if (WudianMgr_1.default.WudianFlag) {
            if (this.isbanl == false) {
                this.isbanl = true;
                this.ifbanf = true;
                var sef = this;
                var bannshow = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannshow * 1000, this, function () {
                    CachedWXBannerAd_1.default.show();
                    //sef._bannerADZone.visible = true;
                });
                var btnmove = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                Laya.timer.once(btnmove * 1000, this, function () {
                    var con = sef.owner.getChildByName("zon");
                    sef._zon.bottom = 350;
                    sef.ifbanf = false;
                });
                console.log("时间1111：", bannshow);
                console.log("时间111122222：", btnmove);
                return true;
            }
        }
        return false;
    };
    GameOverView.prototype.GoDaQuan = function () {
        ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.NewLoadingView);
        ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.GetInterface);
        ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.GameOverView);
        MyGameManger_1.default.GetInstance().OnlodeScene(function () {
            ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.NewLoadingView);
            ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.GameView);
            MyGameManger_1.default.state = MyGameManger_1.StateEnum.Game;
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.isstart); 
        });
    };
    return GameOverView;
}(ViewBase_1.default));
exports.default = GameOverView;
},{"../../ALD":1,"../../CachedWXBannerAd":3,"../../Config/AppSwitchConfig":4,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Mgr/GameMgr":10,"../../Mgr/ViewMgr":13,"../../Mgr/WudianMgr":14,"../../MyScripts/MyGameManger":22,"../../ShareAd/ShareAd":30,"../../User/User":40,"../../WXAPI":54,"../ViewBase":53}],47:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var User_1 = require("../../User/User");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var MyGameManger_1 = require("../../MyScripts/MyGameManger");
var CrazyEffect_1 = require("../../MyScripts/CrazyEffect");
var SoundMgr_1 = require("../../Mgr/SoundMgr");
var GameMgr_1 = require("../../Mgr/GameMgr");
var VibrateMgr_1 = require("../../Mgr/VibrateMgr");
var ALD_1 = require("../../ALD");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var GameView = /** @class */ (function (_super) {
    __extends(GameView, _super);
    function GameView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._setbutton = null;
        _this._moregame = null;
        _this._gameclick = null;
        _this._fenxinagclick = null;
        _this._jinbi = null;
        _this._level = null;
        _this._progress = null;
        _this.mArmature = null;
        _this.tishistr = ["Save green & destroy red"];
        _this.strnum = 0;
        return _this;
    }
    GameView.prototype.onAwake = function () {
        this._bannerADZone = this.owner.getChildByName("LoopAD");
        this._bannerADZone.visible = false;
        this._gameclick = this.owner.getChildByName("nullspace");
        this.panl = this.owner.getChildByName("panl");
        this._jinbi = this.owner.getChildByName("bgjin").getChildByName("jinText");
        this._jinbi.text = User_1.default.getMoney().toString();
        this._level = this.owner.getChildByName("guanshu").getChildByName("dqguan");
        this._level.text = User_1.default.getLeveNum().toString();
        this._progress = this.owner.getChildByName("progress");
        this._progress.text = "";
        this._allnum = MyGameManger_1.default.mannum;
        this.panl.visible = false;
        this.tishi = this.panl.getChildAt(0);
        this._pan = this.owner.getChildByName("pan");
        this._pan.visible = false;
        this._pand = this.owner.getChildByName("pandian");
        this._skipbtn = this.owner.getChildByName("skipbtn");
        this._homebtn = this.owner.getChildByName("homebtn");
        // //console.log("旋转zhi6："+this._suijiclick.rotation);
        //this.banle=this.owner.getChildByName("banle") as Laya.Clip;
        //this.banle.visible=false;
        this.banlebool = false;
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.ShouClore);
        if (User_1.default.getLeveNum() == 1) {
            MyGameManger_1.default.state = MyGameManger_1.StateEnum.weikaiju;
            this.panl.visible = true;
            var _name = "subRes/spine/NewProject.sk";
            this.mArmature = new Laya.Skeleton();
            this.mArmature.scale(1, 1);
            this.owner.addChild(this.mArmature);
            var view = this.owner;
            this.mArmature.pos(view.width * 0.5, view.height * 0.5);
            this.ShowZi();
            var self = this;
            this.mArmature.load(_name, Laya.Handler.create(this, function (res) {
                //res.lock = true;
            }));
            Laya.timer.once(1000, this, function () {
                self.panl.visible = false;
                MyGameManger_1.default.state = MyGameManger_1.StateEnum.Game;
                self.mArmature.removeSelf();
            });
        }
        ALD_1.default.aldSendOnlySingleReport(ALD_1.ALDEventDef.EnterBattleView);
    };
    GameView.prototype.ShowZi = function () {
        if (this.strnum < this.tishistr.length) {
            var _varstr = "";
            for (var i = 0; i < (this.strnum + 1); i++) {
                _varstr += this.tishistr[i];
            }
            this.strnum++;
            this.tishi.text = _varstr;
            Laya.timer.once(250, this, this.ShowZi);
        }
    };
    GameView.prototype.addEvent = function () {
        var suijiad = AppSwitchConfig_1.default.getInstance().getAppSwitchData().indexAdClick;
        ShareAd_1.default.Random_lmxg_Jump(suijiad);
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            this._bannerADZone.visible = true;
        }
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Bannle, this, this.onShowBannler); //注册点击事件
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.GameOver, this, this.GameOver);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.DieOne, this, this.Progress);
        this._pand.on(Laya.Event.MOUSE_DOWN, this, this.Mosedown);
        this._pand.on(Laya.Event.MOUSE_UP, this, this.Moseup);
        this._skipbtn.on(Laya.Event.CLICK, this, this.onSkipBtn);
        this._homebtn.on(Laya.Event.CLICK, this, this.onHomeBtn);
    };
    GameView.prototype.Mosedown = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.onMoDown);
    };
    GameView.prototype.Moseup = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.onMoUp);
    };

    GameView.prototype.removeEvent = function () {
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Bannle, this, this.onShowBannler); //注册点击事件
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.GameOver, this, this.GameOver);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.DieOne, this, this.Progress);
        this._pand.off(Laya.Event.MOUSE_DOWN, this, this.Mosedown);
        this._pand.off(Laya.Event.MOUSE_UP, this, this.Moseup);
        this._skipbtn.off(Laya.Event.CLICK, this, this.onskipbtn);
        this._homebtn.off(Laya.Event.CLICK, this, this.onhomebtn);
    };
    GameView.prototype.onHomeBtn = function () {
        ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.NewLoadingView);
        ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.GameView);
        MyGameManger_1.default.GetInstance().OnlodeScene(function () {
            ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.NewLoadingView);
            ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.MyHomePage);
        });
    };
    GameView.prototype.onSkipBtn = function () {
        ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.NewLoadingView);
        ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.GameView);
        User_1.default.setLeveNum(1);
        GameMgr_1.default._guanqiapz = "";
        GameMgr_1.default.getInstance().saveGameData();
        GameMgr_1.default.hhanum++;
        MyGameManger_1.default.GetInstance().OnlodeScene(function () {
            ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.NewLoadingView);
            ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.GameView);
            MyGameManger_1.default.state = MyGameManger_1.StateEnum.Game;
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.isstart); 
        });
    };
    /**
     * 游戏结束
     */
    GameView.prototype.GameOver = function () {
        if (MyGameManger_1.default.state == MyGameManger_1.StateEnum.Game) {
            MyGameManger_1.default.state = MyGameManger_1.StateEnum.over;
            SoundMgr_1.default.instance.play_lmxg_Sound("lose");
            var data_1 = {};
            data_1.isbtnshow = true;
            GameMgr_1.default.winfalag = false;
            Laya.timer.once(3600, this, function () {
                    ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.GameView);
                    ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.GetInterface);
                    setTimeout(()=>{ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.GameOverView);},500);
            });
        }
    };
    /**
     * 游戏进度
     */
    GameView.prototype.Progress = function () {
        if (MyGameManger_1.default.state == MyGameManger_1.StateEnum.Game) {
            //console.log("剩余人数："+MyGameManger.mannum);
            MyGameManger_1.default.mannum--;
            VibrateMgr_1.default.vibrate_lmxg_Short();
            var num = 100 - MyGameManger_1.default.mannum / this._allnum * 100;
            //this._progress.text=Math.floor(num)+"%";
            if (MyGameManger_1.default.mannum == 0) {
                GameMgr_1.default.winfalag = true;
                SoundMgr_1.default.instance.play_lmxg_Sound("win");
                CrazyEffect_1.default.getInstance().Win();
                MyGameManger_1.default.state = MyGameManger_1.StateEnum.over;
                Laya.timer.once(1500, this, function () {
                    var data = {};
                    data.isbtnshow = true;
                    //过关调用的代码
                    User_1.default.setLeveNum(1);
                    GameMgr_1.default._guanqiapz = "";
                    GameMgr_1.default.getInstance().saveGameData();
                    GameMgr_1.default.hhanum++;
                    //View_lmxg_Mgr.instance.openView(View_lmxg_Def.GameOverView,data); 
                    ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.GameView);
                    ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.GetInterface);
                    setTimeout(()=>{ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.GameOverView);},500);
                });
            }
        }
    };
    /**
         * 显示bannle广告
         */
    GameView.prototype.onShowBannler = function (num) {
        if (num == 1) {
            this._pan.visible = true;
        }
        else {
            this._pan.visible = false;
        }
    };
    return GameView;
}(ViewBase_1.default));
exports.default = GameView;
},{"../../ALD":1,"../../Config/AppSwitchConfig":4,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Mgr/GameMgr":10,"../../Mgr/SoundMgr":11,"../../Mgr/VibrateMgr":12,"../../Mgr/ViewMgr":13,"../../MyScripts/CrazyEffect":17,"../../MyScripts/MyGameManger":22,"../../ShareAd/ShareAd":30,"../../User/User":40,"../ViewBase":53}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var User_1 = require("../../User/User");
var WXAPI_1 = require("../../WXAPI");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var GameMgr_1 = require("../../Mgr/GameMgr");
var ALD_1 = require("../../ALD");
var GetInterfaceView = /** @class */ (function (_super) {
    __extends(GetInterfaceView, _super);
    function GetInterfaceView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GetInterfaceView.prototype.onAwake = function () {
        this.jinbinum = 0;
        this._my = this.owner;
        this.getbtn = this._my.getChildByName("Getbtn");
        this.jinbishi = this._my.getChildByName("jinbi");
        this.lvle = this.owner.getChildByName("guan");
        this.lvle.text = User_1.default.getLeveNum().toString();
        this.lvle.visible = false;
        this.getbtn.visible = false;
        if (GameMgr_1.default.winfalag) {
            this.jinbinum = 20;
            sessionStorage.setItem("moneytoadd",this.jinbinum);
            this.lvle.text = (User_1.default.getLeveNum() - 1).toString();
            this.jinbishi.text = (this.jinbinum).toString();
        }
        else{
            this.jinbishi.visible = false;
        }
        ALD_1.default.aldSendOnlySingleReport(ALD_1.ALDEventDef.EnterGameComplateView);
    };
    GetInterfaceView.prototype.onUpdate = function () {
            this.jinbishi.text = (parseInt(sessionStorage.getItem("moneytoadd"))).toString();
    };
    GetInterfaceView.prototype.addEvent = function () {
        var timera = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnDelayTime;
        Laya.timer.once(1000 * timera, this, function () {
            this.getbtn.visible = true;
        });
        this.getbtn.on(Laya.Event.CLICK, this, this.onGetClick);
    };
    GetInterfaceView.prototype.removeEvent = function () {
        this.getbtn.off(Laya.Event.CLICK, this, this.onGetClick);
    };
    GetInterfaceView.prototype.onGetClick = function () {
        this.getbtn.visible = false;
        User_1.default.addMoney(this.jinbinum);
        ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.GetInterface);
        ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.GameOverView);
    };
    return GetInterfaceView;
}(ViewBase_1.default));
exports.default = GetInterfaceView;
},{"../../ALD":1,"../../Config/AppSwitchConfig":4,"../../Mgr/GameMgr":10,"../../Mgr/ViewMgr":13,"../../User/User":40,"../../WXAPI":54,"../ViewBase":53}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var ALD_1 = require("../../ALD");
var LoadingView = /** @class */ (function (_super) {
    __extends(LoadingView, _super);
    function LoadingView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._processWidth = 0;
        _this.bilv = undefined;
        return _this;
    }
    LoadingView.prototype.onAwake = function () {
         this._bg = this.owner.getChildByName("Bg");
        // this._processBarBg = this._bg.getChildByName("processBarBg");
        // this.jiazaiimg = this._bg.getChildByName("jiazai");
        // if (this._processBarBg) {
        //     this._processBar = this._processBarBg.getChildByName("processBar");
        //     this._processWidth = this._processBar.width;
        // }
        // else {
        //     this._processBar = this._bg.getChildByName("processBar");
        //     this._processWidth = Laya.stage.width;
        // }
        // var aspectRatio = Laya.stage.width / Laya.stage.height;
        // if (aspectRatio < 0.5) {
        //     this._processBarBg.top = 1200;
        //     this.jiazaiimg.top = 1130;
        // }
        // this.bilv = (Laya.stage.width / this._bg.width) * this._bg.height;
        // ALD_1.default.aldSendOnlySingleReport(ALD_1.ALDEventDef.EnterLoading);
    };
    LoadingView.prototype.onEnable = function () {
        // _super.prototype.onEnable.call(this);
        // this._processBar.width = 0;
    };
    LoadingView.prototype.addEvent = function () {
        //_super.prototype.addEvent.call(this);
    };
    LoadingView.prototype.removeEvent = function () {
        //_super.prototype.removeEvent.call(this);
    };
    LoadingView.prototype.onUpdate = function () {
        // this._bg.width = Laya.stage.width;
        // //this._bg.height = Laya.stage.height;
        // this._bg.height = this.bilv;
        // if (!this._processBarBg) {
        //     this._processWidth = Laya.stage.width;
        // }
        // if (this._processBar.width < this._processBarBg.width) {
        //     this._processBar.width += 13 * Laya.timer.delta / 100;
        // }
    };
    LoadingView.prototype.setProcess = function (process) {
        // if (process < 0)
        //     process = 0;
        // if (process > 1)
        //     process = 1;
        // var width = this._processWidth * process;
        // if (width < 1)
        //     width = 1;
        // if (width > this._processBar.width) {
        //     this._processBar.width = width;
        // }
    };
    return LoadingView;
}(ViewBase_1.default));
exports.default = LoadingView;
},{"../../ALD":1,"../ViewBase":53}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var User_1 = require("../../User/User");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var WXAPI_1 = require("../../WXAPI");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var MyGameManger_1 = require("../../MyScripts/MyGameManger");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var ALD_1 = require("../../ALD");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var MyHomePage = /** @class */ (function (_super) {
    __extends(MyHomePage, _super);
    function MyHomePage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._setbutton = null;
        _this._moregame = null;
        _this._startclick = null;
        _this._suijibtn = null;
        _this._jinbi = null;
        _this._level = null;
        _this.lunbo = null;
        return _this;
    }
    ; //控制轮播广告的父节点
    MyHomePage.prototype.onAwake = function () {
        this._startclick = this.owner.getChildByName("BottomZone").getChildByName("AutoZone").getChildByName("dianjitu");
        this._startclick.visible = false;
        this._setbutton = this.owner.getChildByName("setbutton");
        this._moregame = this.owner.getChildByName("BottomZone").getChildByName("AutoZone").getChildByName("moregame");
        this._suijibtn = this.owner.getChildByName("nullspace");
        this._pifu = this.owner.getChildByName("BottomZone").getChildByName("AutoZone").getChildByName("pifu");
        this.lunbo = this.owner.getChildByName("BottomZone").getChildByName("LoopAD");
        this._jinbi = this.owner.getChildByName("bgjin").getChildByName("jinText");
        this._jinbi.text = User_1.default.getMoney().toString();
        //console.log("金币："+User.getMoney().toString())
        this._level = this.owner.getChildByName("guanshu").getChildByName("dqguan");
        this._level.text = User_1.default.getLeveNum().toString();
        //this._bannerADZone = this.owner.getChildByName("BannerAD") as Laya.UIComponent; 
        //this._bannerADZone.visible = true;
        this._pan = this.owner.getChildByName("pan");
        this._pan.visible = false;
        //Laya.timer.once(500,this,this.onMoreClick);
        this._pifu.on(Laya.Event.CLICK, this, this.onPifuClick);
    };
    MyHomePage.prototype.addEvent = function () {
        var suijiad = AppSwitchConfig_1.default.getInstance().getAppSwitchData().indexAdClick;
        ShareAd_1.default.Random_lmxg_Jump(suijiad);
        this._moregame.on(Laya.Event.CLICK, this, this.onstartclick);
        //this._startclick.on(Laya.Event.CLICK, this, this.onstartclick);
        this._suijibtn.on(Laya.Event.CLICK, this, this.onSuiJiClick);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Bannle, this, this.onShowBannler); //注册点击事件
        ALD_1.default.aldSendOnlySingleReport(ALD_1.ALDEventDef.EnterMainView);
        //         ALD.aldSendOnlySingleReport(ALDEventDef.EnterComplateClickGetPrizeScene,{
        //     "场景值" : WXAPI.getLaunchOptionsSync().scene
        // });
    };
    MyHomePage.prototype.GetJin = function () {
    };
    MyHomePage.prototype.removeEvent = function () {
        //this._setbutton.off(Laya.Event.CLICK,this,this.onSetButtonClick);
        this._moregame.off(Laya.Event.CLICK, this, this.onMoreClick);
        this._startclick.off(Laya.Event.CLICK, this, this.onstartclick);
        this._suijibtn.off(Laya.Event.CLICK, this, this.onSuiJiClick);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Bannle, this, this.onShowBannler); //注册点击事件
        this._pifu.off(Laya.Event.CLICK, this, this.onPifuClick);
    };
    MyHomePage.prototype.onPifuClick = function () {
        this.closeView();
        ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.Skin);
    };
    MyHomePage.prototype.onSetButtonClick = function () {
        this.closeView();
    };
    /**
     *点击开始
     */
    MyHomePage.prototype.onstartclick = function () {
        //this.closeView();
        //View_lmxg_Mgr.instance.openView(View_lmxg_Def.Skin,true);
        //ALD_1.default.aldSendOnlySingleReport(ALD_1.ALDEventDef.ClickGameStart);
        this.GoDaQuan();
    };
    MyHomePage.prototype.onMoreClick = function () {
        this.closeView();
        var data = {};
        data.isbtnshow = false;
        ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.CrazyMoreGame, data);
    };
    MyHomePage.prototype.onSuiJiClick = function () {
        var suijiad = AppSwitchConfig_1.default.getInstance().getAppSwitchData().indexAdClick;
        console.log("随机参数" + suijiad);
        if (suijiad != 0) {
            ShareAd_1.default.Random_lmxg_Jump(100);
        }
    };
    /**
     * 显示bannle广告
     */
    MyHomePage.prototype.onShowBannler = function (num) {
        if (num == 1) {
            this._pan.visible = true;
        }
        else {
            this._pan.visible = false;
        }
    };
    /**
     * 显示侧边栏广告背景
     */
    MyHomePage.prototype.ShowPanl = function (xian) {
        if (xian == true) {
            this._pan.visible = true;
        }
        else {
            this._pan.visible = false;
        }
    };
    MyHomePage.prototype.GoDaQuan = function () {
            ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.MyHomePage);
            ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.GameView);
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.isstart); //开启人物移动
            MyGameManger_1.default.state = MyGameManger_1.StateEnum.Game;
    };
    return MyHomePage;
}(ViewBase_1.default));
exports.default = MyHomePage;
},{"../../ALD":1,"../../Config/AppSwitchConfig":4,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Mgr/ViewMgr":13,"../../Mgr/WudianMgr":14,"../../MyScripts/MyGameManger":22,"../../ShareAd/ShareAd":30,"../../User/User":40,"../../WXAPI":54,"../ViewBase":53}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var User_1 = require("../../User/User");
var WXAPI_1 = require("../../WXAPI");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var MyGameManger_1 = require("../../MyScripts/MyGameManger");
var ALD_1 = require("../../ALD");
var SkinView = /** @class */ (function (_super) {
    __extends(SkinView, _super);
    function SkinView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._zuojiantou = null;
        _this._youjiantou = null;
        _this._jiesuo = null;
        _this._shouye = null;
        _this.skin = null;
        _this.start = null; //点击直接开始游戏
        _this.skinstrs = ["蓝星队长", "粉红紧身衣", "绅士装", "沙滩休闲", "太空服", "西装革履", "小蜘蛛", "马拟奥", "马褂小哥", "钢铁怪侠", "狂蟒突击队"];
        _this._pifustr = null;
        return _this;
    }
    SkinView.prototype.onAwake = function () {
        this._bannerADZone = this.owner.getChildByName("LoopAD");
        //this._bannerADZone.visible = false;
        this._pifustr = this.owner.getChildByName("pifustar");
        this.skinname = this.owner.getChildByName("skinname");
        this._zuojiantou = this.owner.getChildByName("zuojiantou");
        this._youjiantou = this.owner.getChildByName("youjiantou");
        this._jiesuo = this.owner.getChildByName("jiesuo");
        this._shouye = this.owner.getChildByName("shouye");
        this.skin = this.owner.getChildByName("skin");
        this.start = this.owner.getChildByName("start");
        this.start.visible = false;
        this._pifustr.visible = false;
        this.falg = false;
        this.owner.getChildByName("bgjin").visible =true;
        this._jinbi = this.owner.getChildByName("bgjin").getChildByName("jinText");
        this._jinbi.text = User_1.default.getMoney().toString();
        MyGameManger_1.default.ShowRen(true);
        Laya.timer.once(300, this, function () {
            this.getskins();
            if (this._data == true) {
                //this.start.visible=true;
                this._shouye.visible = false;
            }
        });
    };
    SkinView.prototype.addEvent = function () {
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            this._bannerADZone.visible = true;
        }
        this._zuojiantou.on(Laya.Event.CLICK, this, this.onZuoClick);
        this._youjiantou.on(Laya.Event.CLICK, this, this.onYouClick);
        this._jiesuo.on(Laya.Event.CLICK, this, this.onJieSuoClick);
        this._shouye.on(Laya.Event.CLICK, this, this.onShouYeClick);
        this.start.on(Laya.Event.CLICK, this, this.onStartYeClick);
        this._pifustr.on(Laya.Event.CLICK, this, this.onStartYeClick);
    };
    SkinView.prototype.removeEvent = function () {
        this._zuojiantou.off(Laya.Event.CLICK, this, this.onZuoClick);
        this._youjiantou.off(Laya.Event.CLICK, this, this.onYouClick);
        this._jiesuo.off(Laya.Event.CLICK, this, this.onJieSuoClick);
        this._shouye.off(Laya.Event.CLICK, this, this.onShouYeClick);
        this.start.off(Laya.Event.CLICK, this, this.onStartYeClick);
        this._pifustr.off(Laya.Event.CLICK, this, this.onStartYeClick);
        MyGameManger_1.default.ShowRen(false);
        MyGameManger_1.default.CamerPoint();
        if (MyGameManger_1.default.isShowpf(User_1.default.getSkinNum()) == false) {
            User_1.default.setSkinNum(100);
        }
    };
    SkinView.prototype.getskins = function () {
        this.skinname.text = this.ShowName(User_1.default.getSkinNum()); //this.skinstrs[User.getSkinNum()];
        MyGameManger_1.default.ShowSkin();
        if (MyGameManger_1.default.isShowpf(User_1.default.getSkinNum()) == true) {
            this._jiesuo.visible = false;
            this._pifustr.visible = true;
        }
        else {
            this._jiesuo.visible = true;
            this._pifustr.visible = false;
        }
        // if(this.shouci==false){
        //     this.shouci=true;
        // }
    };
    SkinView.prototype.onZuoClick = function () {
        User_1.default.setSkinNum(-1);
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.SHOWjiesuo);
        this.getskins();
        //Laya.loader.load("subRes/skin/" + this.skinstrs[User.getSkinNum()] + ".png", Laya.Handler.create(this, this.getskins));
    };
    SkinView.prototype.onYouClick = function () {
        User_1.default.setSkinNum(1);
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.SHOWjiesuo);
        this.getskins();
        //Laya.loader.load("subRes/skin/" + this.skinstrs[User.getSkinNum()] + ".png", Laya.Handler.create(this, this.getskins));
    };
    SkinView.prototype.onJieSuoClick = function () {
        var _this = this;
        var _valnu = User_1.default.getSkinNum();
        if (_valnu < 4) {
            WXAPI_1.default.showRewardedVideoAd(function (res) {
                if (res == true) //观看视频成功后
                 {
                    _this._jiesuo.visible = false;
                    _this._pifustr.visible = true;
                    var str = MyGameManger_1.default.PIFUBiao(User_1.default.getSkinNum());
                    User_1.default.setSkinArrNum(str);
                }
            }, function (res2) { });
        }
        else {
            var jin = User_1.default.getMoney();
            var haojin = (User_1.default.getSkinNum() - 3) * 100;
            if (jin >= haojin) {
                this._jiesuo.visible = false;
                this._pifustr.visible = true;
                var str = MyGameManger_1.default.PIFUBiao(User_1.default.getSkinNum());
                User_1.default.setSkinArrNum(str);
                User_1.default.subMoney(haojin);
            }
        }
    };
    /**
     * 返回首页按钮
     */
    SkinView.prototype.onShouYeClick = function () {
        ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.Skin);
        ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.MyHomePage);
    };
    SkinView.prototype.onStartYeClick = function () {
        this.closeView();
        ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.GameView);
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.isstart); //开启人物移动
        MyGameManger_1.default.state = MyGameManger_1.StateEnum.Game;
        //this.GoDaQuan();
    };
    SkinView.prototype.GoDaQuan = function () {
        ViewMgr_1.default.instance.close_lmxg_View(ViewMgr_1.View_lmxg_Def.Skin);
        if (WudianMgr_1.default.WudianFlag) {
            ALD_1.default.aldSendOnlySingleReport(ALD_1.ALDEventDef.EnterStartClickGetPrize);
            ALD_1.default.aldSendOnlySingleReport(ALD_1.ALDEventDef.EnterStartClickGetPrizeScene, {
                "场景值": WXAPI_1.default.getLaunchOptionsSync().scene
            });
            var data_1 = {};
            var vl = Math.random(); //0-1的浮点数
            vl = (Math.floor(vl * 25)); //将小数转为整数
            data_1.PrizeCount = vl;
            //狂点逻辑完成后的回调方法
            data_1.Complete = function () {
                User_1.default.addMoney(data_1.PrizeCount);
                console.log("狂点按钮结束"); //在这里写入狂点窗口结束后需要调用的逻辑，例如弹出结算页面
                ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.GameView);
                EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.isstart); //开启人物移动
                MyGameManger_1.default.state = MyGameManger_1.StateEnum.Game;
            };
            // 完成点击之后获得的奖励数量，依照各项目不同自行实现
            ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.ClickGetPrize, data_1);
        }
        else {
            ViewMgr_1.default.instance.openView(ViewMgr_1.View_lmxg_Def.GameView);
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.isstart); //开启人物移动
            MyGameManger_1.default.state = MyGameManger_1.StateEnum.Game;
        }
    };
    SkinView.prototype.ShowName = function (xu) {
        var a = "";
        switch (xu) {
            case 0:
                a = "Captain Blue Star";
                break;
            case 1:
                a = "Pink Tights";
                break;
            case 2:
                a = "Gentleman's Clothing";
                break;
            case 3:
                a = "Beach Leisure";
                break;
            case 4:
                a = "Space Suit";
                break;
            case 5:
                a = "Suits & Leather Shoes";
                break;
            case 6:
                a = "Little BratX";
                break;
            case 7:
                a = "Malio";
                break;
            case 8:
                a = "Mandarin Kacket";
                break;
            case 9:
                a = "Little Kid V";
                break;
            case 10:
                a = "Anaconda Commando";
                break;
            default:
                a = "Captain Blue Star";
                break;
        }
        return a;
    };
    return SkinView;
}(ViewBase_1.default));
exports.default = SkinView;
},{"../../ALD":1,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Mgr/ViewMgr":13,"../../Mgr/WudianMgr":14,"../../MyScripts/MyGameManger":22,"../../User/User":40,"../../WXAPI":54,"../ViewBase":53}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TwinkleSprite = /** @class */ (function (_super) {
    __extends(TwinkleSprite, _super);
    function TwinkleSprite() {
        var _this = _super.call(this) || this;
        /** @prop {name:TwinkleSpeed, tips:"闪动速度", type:Number, default:1000}*/
        _this.TwinkleSpeed = 1000;
        /** @prop {name:TwinkleMinSize, tips:"最小缩放", type:Number, default:0.95}*/
        _this.TwinkleMinSize = 0.95;
        /** @prop {name:TwinkleMaxSize, tips:"最大缩放", type:Number, default:1.05}*/
        _this.TwinkleMaxSize = 1.05;
        _this._aniForward = false;
        _this._fontSize = 25;
        _this._originSize = 1;
        return _this;
    }
    TwinkleSprite.prototype.onAwake = function () {
        this._displaySp = this.owner;
        this._disText = this.owner.getChildByName("TitelText");
        this._originSize = this._displaySp.scaleX;
        if (this._disText != null) {
            this._disText.text = "";
            this._fontSize = this._disText.fontSize;
        }
    };
    TwinkleSprite.prototype.onEnable = function () {
        this._displaySp.scale(this._originSize, this._originSize);
    };
    TwinkleSprite.prototype.onDisable = function () {
    };
    TwinkleSprite.prototype.onUpdate = function () {
        this.displayAni();
    };
    TwinkleSprite.prototype.displayAni = function () {
        if (!this._aniForward) {
            var scale = this._displaySp.scaleX - Laya.timer.delta / this.TwinkleSpeed;
            scale = Math.max(scale, this.TwinkleMinSize * this._originSize);
            this._displaySp.scale(scale, scale);
            if (this._displaySp.scaleX <= this.TwinkleMinSize * this._originSize) {
                this._aniForward = true;
            }
        }
        else {
            var scale = this._displaySp.scaleX + Laya.timer.delta / this.TwinkleSpeed;
            scale = Math.min(scale, this.TwinkleMaxSize * this._originSize);
            this._displaySp.scale(scale, scale);
            if (this._displaySp.scaleX >= this.TwinkleMaxSize * this._originSize) {
                this._aniForward = false;
            }
        }
    };
    return TwinkleSprite;
}(Laya.Script));
exports.default = TwinkleSprite;
},{}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("../Mgr/ViewMgr");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
//界面基类，所有功能模块界面继承于这个类。这种类型的界面不能嵌套。
var ViewBase = /** @class */ (function (_super) {
    __extends(ViewBase, _super);
    function ViewBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onCloseEvent = null;
        _this.onOpenEvent = null;
        _this._viewBase = true;
        _this._viewDef = ViewMgr_1.View_lmxg_Def.None;
        _this._data = {};
        return _this;
    }
    ViewBase.prototype.onAwake = function () {
        //删除时自动释放
        this.owner.autoDestroyAtClosed = true;
        this.owner.height = Laya.stage.height;
    };
    ViewBase.prototype.onEnable = function () {
        this.addEvent();
    };
    ViewBase.prototype.onDisable = function () {
        this.removeEvent();
    };
    ViewBase.prototype.onDestroy = function () {
        this.removeEvent();
    };
    ViewBase.prototype.openView = function (data) {
        this._data = data;
        this.show();
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnViewOpen, { view: this._viewDef });
        if (this.onOpenEvent) {
            this.onOpenEvent();
        }
    };
    ViewBase.prototype.addEvent = function () {
    };
    ViewBase.prototype.removeEvent = function () {
        Laya.timer.clearAll(this);
    };
    ViewBase.prototype.closeView = function () {
        ViewMgr_1.default.instance.close_lmxg_View(this._viewDef);
    };
    ViewBase.prototype.hide = function () {
        this.owner.visible = false;
        this.onHide();
    };
    ViewBase.prototype.show = function () {
        this.owner.visible = true;
        this.onShow();
    };
    ViewBase.prototype.viewIsHide = function () {
        return this.owner.alpha == 0;
    };
    ViewBase.prototype.onHide = function () { };
    ViewBase.prototype.onShow = function () { };
    ViewBase.prototype.onClose = function () {
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnViewClose, { view: this._viewDef });
        if (this.onCloseEvent) {
            this.onCloseEvent();
        }
    };
    return ViewBase;
}(Laya.Script));
exports.default = ViewBase;
},{"../Event/EventDef":5,"../Event/EventMgr":6,"../Mgr/ViewMgr":13}],54:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI = /** @class */ (function () {
    function WXAPI() {
    }
    WXAPI.wxLogin = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window.wx.login({
                success: function (res) {
                    if (res.code) {
                        var code = res.code;
                        onSuccess(code);
                        console.log("登陆成功,获取到code : " + code);
                    }
                }
            });
        }
    };
    WXAPI.onRewardedVideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    WXAPI.onRewardedVideoAdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (WXAPI._onRewardedVideoAdFailed) {
            WXAPI._onRewardedVideoAdFailed();
        }
    };
    WXAPI.onRewardedVideoAdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (WXAPI._onRewardedVideoAdClose) {
                WXAPI._onRewardedVideoAdClose(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (WXAPI._onRewardedVideoAdClose) {
                WXAPI._onRewardedVideoAdClose(false);
            }
        }
    };
    WXAPI.regRewardedVideoAdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(WXAPI.onRewardedVideoAdLoad);
        rewardedVideoAd.onError(WXAPI.onRewardedVideoAdError);
        rewardedVideoAd.onClose(WXAPI.onRewardedVideoAdClose);
        WXAPI._isRegRewardedVideoAdEvent = true;
    };
    WXAPI.showRewardedVideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onMiniGame) {
            WXAPI._onRewardedVideoAdClose = onAdClose;
            WXAPI._onRewardedVideoAdFailed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["wx"].createRewardedVideoAd({
                adUnitId: WXAPI.adUnitId,
            });
            if (!WXAPI._isRegRewardedVideoAdEvent) {
                WXAPI.regRewardedVideoAdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------
    WXAPI.navigateToMiniProgram = function (appId, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onMiniGame) {
            console.log("跳转游戏： " + appId);
            Laya.Browser.window["wx"].navigateToMiniProgram({
                appId: appId,
                path: path,
                extraData: {
                    foo: 'bar'
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    WXAPI.share = function (complate, titel, imageUrl) {
        var _this = this;
        if (Laya.Browser.onMiniGame) {
            WXAPI._onShow = function () {
                Laya.Browser.window["wx"].offShow(WXAPI._onShow);
                WXAPI._onShow = null;
                var c = Date.now() - _this._lastShareTime;
                if (complate) {
                    if (Date.now() - _this._lastShareTime > 2000) {
                        complate(true);
                    }
                    else {
                        complate(false);
                    }
                }
            };
            Laya.Browser.window["wx"].onShow(WXAPI._onShow);
            this._lastShareTime = Date.now();
            Laya.Browser.window["wx"].shareAppMessage({
                title: titel,
                imageUrl: imageUrl
            });
        }
    };
    //----------------------------------------------------------------------
    //--------------------插屏幕广告---------------------------------------
    WXAPI.showInterstitialAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onMiniGame) {
            var interstitialAd = Laya.Browser.window["wx"].createInterstitialAd({
                adUnitId: WXAPI.InsAdUnitId,
            });
            interstitialAd.onLoad(function () {
                console.log('插屏广告 加载完成');
                interstitialAd.show().catch(function (err) {
                    console.log('插屏广告 显示失败 ：' + err);
                    if (onFailed) {
                        onFailed();
                    }
                });
            });
            interstitialAd.onError(function (err) {
                console.log('插屏广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            interstitialAd.onClose(function () {
                console.log('插屏广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    /**
     * 得到小程序启动参数的同步方法，可得到一个Object返回值，返回值具体的数据结构在下面的列表中
     * scene	number	启动小游戏的场景值
     * query	Object	启动小游戏的 query 参数
     * shareTicket	string	shareTicket，详见获取更多转发信息
     * referrerInfo	object	来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 {}
     * https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html
     * @static
     * @returns {LaunchOptions}
     * @memberof WXAPI
     */
    WXAPI.getLaunchOptionsSync = function () {
        // let result = { scene: 0, query: null, shareTicket: "", referrerInfo: null };
        if (Laya.Browser.onMiniGame) {
            var obj_1 = Laya.Browser.window["wx"].getLaunchOptionsSync();
            console.log("场景值 " + obj_1.scene);
            var str = JSON.stringify(obj_1.query);
            console.log("Query参数 " + str);
            var key = obj_1.query["key"];
            console.log("Query参数：key " + key);
            console.log("ShareTicket " + obj_1.shareTicket);
            console.log("ReferrerInfo.appId " + obj_1.referrerInfo.appId);
            console.log("ReferrerInfo.extraData " + obj_1.referrerInfo.extraData);
            return obj_1;
        }
        var obj = { scene: 1001, query: "", shareTicket: "", appId: "", extraData: "" };
        return obj;
    };
    //----------------------------------------------------------------------
    /**
     * 打开微信左上角分享转发点击事件,在游戏逻辑中调用一次即可
     * 注意此方法只会在真机上执行，在微信模拟器环境下点击转发按钮什么都不会发生
     *
     * @static
     * @param {string} titel 分享标题
     * @param {string} imageUrl 分享图片地址
     * @param {Function} [success] 成功回调函数(可不填)
     * @param {Function} [fail] 失败回调函数(可不填)
     * @param {Function} [complate] 完成回调函数，成功失败都会执行(可不填)
     * @memberof WXAPI
     */
    WXAPI.SetShareMenu = function (titel, imageUrl, success, fail, complate) {
        if (Laya.Browser.onMiniGame) {
            console.log("小游戏设置转发按钮");
            Laya.Browser.window["wx"].showShareMenu({
                withShareTicket: false,
                success: success,
                fail: fail,
                complete: complate
            });
            Laya.Browser.window["wx"].onShareAppMessage(function () {
                return {
                    title: titel,
                    imageUrl: imageUrl
                };
            });
        }
    };
    WXAPI.adUnitId = "adunit-4d9640715215d0f9";
    WXAPI.bannerAdUnitId = "adunit-b3e310b3f8b05491";
    WXAPI.InsAdUnitId = "adunit-b6a2c36925cb513e";
    //-------------------------激励视频---------------------------------
    WXAPI._isRegRewardedVideoAdEvent = false;
    WXAPI._onRewardedVideoAdFailed = null;
    WXAPI._onRewardedVideoAdClose = null;
    //----------------------------------------------------------------------
    //---------------------分享----------------------------------------
    WXAPI._onShow = null;
    WXAPI._lastShareTime = 0;
    return WXAPI;
}());
exports.default = WXAPI;
},{}],55:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var View;
    (function (View) {
        var LoadingUI = /** @class */ (function (_super) {
            __extends(LoadingUI, _super);
            function LoadingUI() {
                return _super.call(this) || this;
            }
            LoadingUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(LoadingUI.uiView);
            };
            //LoadingUI.uiView = { "type": "Scene", "props": { "zOrder": 99, "width": 750, "top": 0, "right": 0, "left": 0, "height": 1334, "bottom": 0 }, "compId": 2, "child": [{ "type": "Clip", "props": { "width": 750, "top": 0, "skin": "Loading/画板 1.jpg", "name": "Bg", "left": 0, "height": 1999.6 }, "compId": 6, "child": [{ "type": "Clip", "props": { "top": 1000, "skin": "Loading/1_0003_组-61.png", "right": 100, "pivotY": 22, "name": "processBarBg", "left": 100, "height": 64, "sizeGrid": "16,29,26,22" }, "compId": 5, "child": [{ "type": "Clip", "props": { "y": 4, "x": -97, "width": 0, "skin": "Loading/1_0001_图层-920-拷贝-2.png", "name": "processBar", "left": 3, "height": 42, "sizeGrid": "11,23,16,23" }, "compId": 9 }] }, { "type": "Image", "props": { "zOrder": 10, "x": 296, "top": 930, "skin": "Loading/jiazai.png", "name": "jiazai" }, "compId": 15 }] }, { "type": "Script", "props": { "y": 0, "x": 0, "runtime": "View/LoadingView/LoadingView.ts" }, "compId": 7 }], "loadList": ["Loading/画板 1.jpg", "Loading/1_0003_组-61.png", "Loading/1_0001_图层-920-拷贝-2.png", "Loading/jiazai.png"], "loadList3D": [] };
            LoadingUI.uiView = {};
            return LoadingUI;
        }(Scene));
        View.LoadingUI = LoadingUI;
        REG("ui.View.LoadingUI", LoadingUI);
    })(View = ui.View || (ui.View = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[9])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
